<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://www.kyleniewiada.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.kyleniewiada.org/" rel="alternate" type="text/html" /><updated>2025-10-28T09:32:12-04:00</updated><id>https://www.kyleniewiada.org/feed.xml</id><title type="html">Kyle Niewiada‚Äôs Website</title><subtitle>My little corner of the Internet where I write about projects I&apos;ve figured out</subtitle><author><name>Kyle Niewiada</name></author><entry><title type="html">Backyard Bird Tracking With AI-Powered BirdNET-Go</title><link href="https://www.kyleniewiada.org/blog/2025/05/backyard-bird-tracking-with-ai/" rel="alternate" type="text/html" title="Backyard Bird Tracking With AI-Powered BirdNET-Go" /><published>2025-05-26T21:58:00-04:00</published><updated>2025-05-26T21:58:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2025/05/backyard-bird-tracking-with-ai</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2025/05/backyard-bird-tracking-with-ai/"><![CDATA[<p>How many different birds do you think visit your house each day? How many do you hear on your walks? Are there birds you remember hearing as a kid, but you couldn‚Äôt remember how to identify them?</p>

<p>Back in early 2023, some of my friends introduced me to the board game, <a href="https://boardgamegeek.com/boardgame/266192/wingspan">Wingspan</a>. Before that, I hadn‚Äôt thought about the diversity of bird species around me. Sure, I thought it was cool to see an owl or a hawk fly over. Occasionally I would use my phone to ID a bird sound. But I never dwelled on those thoughts for more than a few minutes.</p>

<p>If you‚Äôre unfamiliar, Wingspan is a resource management turn-based game. It heavily involves synergy between different bird species and their traits. It includes cards that contain information about a variety of bird species. Seriously, did you realize how many different species there are??</p>

<p>This awakened a new interest in me and I was hooked ü™ù. I started to pay attention to the birds around me and was identifying bird sounds more frequently with the <a href="https://merlin.allaboutbirds.org/">Merlin app</a> on my phone (highly recommended).</p>

<p>There was an itch I wanted to scratch though. What if I were able to detect birds around my house <em>all of the time</em>?</p>

<blockquote>
  <p>Are you only here for the BirdNET-Go Home Assistant sensors and cards? Skip ahead to the <a href="#home-assistant-sensors">Home Assistant Sensors</a> or the <a href="#home-assistant-cards">Home Assistant Cards</a> sections below.</p>
</blockquote>

<div class="line-separator"></div>
<h2>Table of Contents</h2>
<div class="table-of-contents">
<ul id="markdown-toc">
  <li><a href="#changelog" id="markdown-toc-changelog">Changelog</a></li>
  <li><a href="#continuous-bird-detection" id="markdown-toc-continuous-bird-detection">Continuous Bird Detection</a></li>
  <li><a href="#the-perfect-solution-birdnet-go" id="markdown-toc-the-perfect-solution-birdnet-go">The Perfect Solution: BirdNET-Go</a></li>
  <li><a href="#did-it-work" id="markdown-toc-did-it-work">Did It Work?</a>    <ul>
      <li><a href="#tweak-camera-audio-settings" id="markdown-toc-tweak-camera-audio-settings">Tweak Camera Audio Settings</a></li>
      <li><a href="#wind-noise" id="markdown-toc-wind-noise">Wind Noise</a></li>
    </ul>
  </li>
  <li><a href="#birdnet-go-usage" id="markdown-toc-birdnet-go-usage">BirdNET-Go Usage</a>    <ul>
      <li><a href="#educational" id="markdown-toc-educational">Educational</a></li>
      <li><a href="#tracking" id="markdown-toc-tracking">Tracking</a></li>
    </ul>
  </li>
  <li><a href="#home-assistant-sensors" id="markdown-toc-home-assistant-sensors">Home Assistant Sensors</a>    <ul>
      <li><a href="#sensor-for-daily-species-summary" id="markdown-toc-sensor-for-daily-species-summary">Sensor for Daily Species Summary</a></li>
      <li><a href="#sensor-for-overall-species-summary" id="markdown-toc-sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></li>
      <li><a href="#notes" id="markdown-toc-notes">Notes</a>        <ul>
          <li><a href="#recorder" id="markdown-toc-recorder">Recorder</a></li>
          <li><a href="#faster-responsiveness" id="markdown-toc-faster-responsiveness">Faster Responsiveness</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#home-assistant-cards" id="markdown-toc-home-assistant-cards">Home Assistant Cards</a>    <ul>
      <li><a href="#card-daily-species-summary-with-sparklines" id="markdown-toc-card-daily-species-summary-with-sparklines">Card: Daily Species Summary With Sparklines</a></li>
      <li><a href="#card-latest-species-detections" id="markdown-toc-card-latest-species-detections">Card: Latest Species Detections</a></li>
      <li><a href="#card-birds-of-interest" id="markdown-toc-card-birds-of-interest">Card: Birds of Interest</a></li>
      <li><a href="#card-brand-new-detections" id="markdown-toc-card-brand-new-detections">Card: Brand New Detections</a></li>
    </ul>
  </li>
  <li><a href="#notifications" id="markdown-toc-notifications">Notifications</a>    <ul>
      <li><a href="#notify-for-custom-species-detection" id="markdown-toc-notify-for-custom-species-detection">Notify for Custom Species Detection</a>        <ul>
          <li><a href="#custom-action-in-birdnet-go" id="markdown-toc-custom-action-in-birdnet-go">Custom Action in BirdNET-Go</a></li>
          <li><a href="#notification-for-a-bird-triggered-by-birdnet-go-script" id="markdown-toc-notification-for-a-bird-triggered-by-birdnet-go-script">Notification: For A Bird Triggered by BirdNET-Go Script</a></li>
        </ul>
      </li>
      <li><a href="#notify-for-a-bird-species-never-detected-before" id="markdown-toc-notify-for-a-bird-species-never-detected-before">Notify for a Bird Species Never Detected Before</a></li>
      <li><a href="#notify-for-a-bird-that-hasnt-been-detected-in-a-while" id="markdown-toc-notify-for-a-bird-that-hasnt-been-detected-in-a-while">Notify for a Bird That Hasn‚Äôt Been Detected in a While</a></li>
    </ul>
  </li>
  <li><a href="#bonus-generate-shareable-videos-from-sound-detections" id="markdown-toc-bonus-generate-shareable-videos-from-sound-detections">Bonus: Generate Shareable Videos From Sound Detections</a>    <ul>
      <li><a href="#new-search-dashboard-audio-files" id="markdown-toc-new-search-dashboard-audio-files">New Search Dashboard Audio Files</a></li>
      <li><a href="#legacy-search-dashboard-audio-files" id="markdown-toc-legacy-search-dashboard-audio-files">Legacy Search Dashboard Audio Files</a></li>
    </ul>
  </li>
  <li><a href="#favorite-bird-recordings" id="markdown-toc-favorite-bird-recordings">Favorite Bird Recordings</a>    <ul>
      <li><a href="#white-crowned-sparrow-" id="markdown-toc-white-crowned-sparrow-">White-crowned Sparrow üîä</a></li>
      <li><a href="#ruby-throated-hummingbird-" id="markdown-toc-ruby-throated-hummingbird-">Ruby-throated Hummingbird üîä</a></li>
      <li><a href="#black-throated-green-warbler-" id="markdown-toc-black-throated-green-warbler-">Black-throated Green Warbler üîä</a></li>
      <li><a href="#red-tailed-hawk-" id="markdown-toc-red-tailed-hawk-">Red-tailed Hawk üîä</a></li>
      <li><a href="#osprey-duet-" id="markdown-toc-osprey-duet-">Osprey Duet üîä</a></li>
    </ul>
  </li>
  <li><a href="#cool-encounters" id="markdown-toc-cool-encounters">Cool Encounters</a></li>
  <li><a href="#future-plans" id="markdown-toc-future-plans">Future Plans</a></li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

</div>
<div class="line-separator"></div>

<h2 id="changelog">Changelog</h2>

<blockquote>
  <p>Changelog:</p>
  <ul>
    <li>2025-06-04: Tweaked the <code class="language-plaintext highlighter-rouge">command_line</code> sensors to use <code class="language-plaintext highlighter-rouge">curl</code> retry logic for fewer Home Assistant warning logs.</li>
    <li>2025-07-09: Tweaked the <code class="language-plaintext highlighter-rouge">notify</code> conditions to filter out an <code class="language-plaintext highlighter-rouge">unavailable</code> <code class="language-plaintext highlighter-rouge">from_state</code> which could occur when manually reloading all template entities in Home Assistant.</li>
    <li>2025-08-28: Tweaked the ‚Äúrare species‚Äù automation to skip sending an alert when the species list changes. This avoids an issue where timestamps are sometimes wrong when a new species is added to the list by the BirdNET-Go API.</li>
    <li>2025-09-02: Removed the <code class="language-plaintext highlighter-rouge">notify</code> condition after the ‚Äòrace condition‚Äô was resolved via <a href="https://github.com/tphakala/birdnet-go/pull/1242">tphakala/birdnet-go#1242</a>.</li>
    <li>2025-10-16: Updated the <code class="language-plaintext highlighter-rouge">BirdNET Species Summary</code> command line sensor, <code class="language-plaintext highlighter-rouge">BirdNET Species Summary Persisted Data</code> template sensor, and <code class="language-plaintext highlighter-rouge">Notify rare bird detection</code> automation to work correctly. After dropping the attribute changes from history, the state detection changes were only being triggered when the species count increased. Instead, we now set the timestamp of the most recent change.</li>
  </ul>
</blockquote>

<h2 id="continuous-bird-detection">Continuous Bird Detection</h2>

<p>I thought it would be so cool if I could continuously record and detect all of the bird species around my house. This would provide additional information about which birds were in the area, and when I should look out for them.</p>

<p>My early research led me to a few projects that I could use.</p>

<p>One of the first products I found was <a href="https://haikubox.com/">Haikubox</a>. It‚Äôs a full hardware and software solution for detecting bird sounds around your house. It requires dedicated power and is a bit pricey. While their subscription cost for ongoing support and development is justified, I wasn‚Äôt quite ready to open up my wallet.</p>

<p>(The original) <a href="https://github.com/mcguirepr89/BirdNET-Pi">BirdNET-Pi</a> was another solution. When I first looked into this, BirdNET-Pi was a brand new project to run BirdNET on a Raspberry Pi. It would require my own waterproof hardware and microphone. If you‚Äôre not aware, I <em>strongly prefer</em> when my devices can operate without the internet as much as possible. This project instantly became a front-runner.</p>

<p>No matter the solution though, they all seemed to require dedicated power.</p>

<p>I didn‚Äôt have an accessible outdoor outlet, so getting power to any device was going to take additional effort. I ended up making a soft plan for all of the hardware, trench placement,  conduit, wiring, and permit research. But in the end, life became too busy and I never got around to it.</p>

<p>Until‚Ä¶</p>

<p>A few years later, while pushing my kids on the swing, I heard a bird sound I didn‚Äôt recognize. I quickly pulled out my phone and raced to open the Merlin app. But I was too slow and the bird flew away. I suddenly caught myself daydreaming of the continuous bird detections in BirdNET-Pi again. But that dream was immediately followed by the dread of figuring out when I could possibly complete an outdoor installation.</p>

<p><em>The next day</em>, I was reading through a thread on Reddit discussing lesser-known integrations with Home Assistant. I came across <a href="https://www.reddit.com/r/homeassistant/comments/1jiqumn/comment/mjh7y6i/">this golden reply</a> by <a href="https://www.reddit.com/user/bkw_17/">bkw_17</a>. They mentioned there was a newer BirdNET-based project that supported audio through an RTSP stream (a common way IP cameras stream video and audio). The project was called BirdNET-Go.</p>

<h2 id="the-perfect-solution-birdnet-go">The Perfect Solution: BirdNET-Go</h2>

<p><img src="/assets/img/2025/05/birdnet-go_main_dashboard.png" alt="BirdNET-Go main dashboard" /><em>My main dashboard on BirdNET-Go</em></p>

<p><a href="https://github.com/tphakala/birdnet-go/">BirdNET-Go</a> is a real-time BirdNET soundscape analyzer and classification tool for bird sounds. It is built on top of the work of the <a href="https://github.com/birdnet-team/BirdNET-Analyzer">BirdNET project</a>, and influenced by the original <a href="https://github.com/mcguirepr89/BirdNET-Pi">BirdNET-Pi project</a>.</p>

<p>BirdNET-Go includes a nice web interface for viewing detected birds, their frequencies, and playing back recordings. The project recently added an analytics dashboard in the nightly releases.</p>

<p><img src="/assets/img/2025/05/birdnet-go_analytics_dashboard.png" alt="BirdNET-Go analytics dashboard" /><em>My last 30 days of analytics in BirdNET-Go</em></p>

<p>But the killer feature is that <strong>BirdNET-Go can use the microphone audio from IP cameras</strong>! BirdNET-Go accepts the <a href="https://en.wikipedia.org/wiki/Real-Time_Streaming_Protocol">RTSP</a> stream from a network camera feed, splits out the audio, and uses that for detections. How had I never thought of this as a solution before?? I already have cameras outside, and they all have microphones. üé§</p>

<p>Other than fidelity and detection accuracy, why would I need to use dedicated microphones in a new hardware box? It‚Äôs not like I was going to be using this for a professional recording studio. <strong>This is all a hobby</strong> and I bet this does the job just fine.</p>

<p>So everything was set into motion. If this worked, I no longer needed to run additional wiring or purchase new hardware. I could tap into the existing cameras I already had.</p>

<p><img src="/assets/img/2025/05/birdnet-go_search_dashboard.png" alt="BirdNET-Go search dashboard" /><em>The search dashboard on BirdNET-Go shows some of my favorite locked detections</em></p>

<h2 id="did-it-work">Did It Work?</h2>

<p>Yeah, it did! In a little over an hour, I was able to deploy a BirdNET-Go container on my server, connect the cameras as an audio source, and start detecting birds at my house.</p>

<p>My setup uses a variety of Amcrest cameras, so your mileage may vary when it comes to audio configuration and quality.</p>

<p>But I have some tips if you‚Äôre trying this at home on an existing camera.</p>

<h3 id="tweak-camera-audio-settings">Tweak Camera Audio Settings</h3>

<p>Almost immediately, I had issues with the camera audio sounding awful. I didn‚Äôt realize it, but the default camera audio settings had a ‚ÄúNoise Suppression‚Äù feature enabled. This ended up removing a lot of the bird sounds from my recordings. Once I turned that feature off, it began to record more ambient sounds.</p>

<p>Another tweak is that the default audio sampling frequency was far too low. It could barely provide usable bird audio. Increasing that from <code class="language-plaintext highlighter-rouge">8,000 Hz</code> to <code class="language-plaintext highlighter-rouge">48,000 Hz</code> did wonders for the audio quality.</p>

<p>I don‚Äôt know what the exact specifications are for the microphone in my cameras, but they sound good enough for me. In fact, the specifications document for the camera lists the microphone information as ‚Äúsupported‚Äù. üòÜ</p>

<p>I‚Äôve included a few of my favorite recordings <a href="#favorite-bird-recordings">toward the bottom of this post</a>.</p>

<h3 id="wind-noise">Wind Noise</h3>

<p>Outdoor cameras positioned high up are prone to wind noise. I had a lot of wind noise in my early detection recordings, and the muffles made it painful to play back the clips.</p>

<p>What‚Äôs the easiest way to fix this? I had known about action cameras and drones using windscreens over the microphones to help reduce wind noise. I figured that should easily apply to a stationary security camera microphone too.</p>

<p>I ended up going with the <a href="https://www.amazon.com/dp/B0CYGGTJHY">Insta360 X4 Mic Wind Muff</a> because it was coming from a name-brand company, its adhesive velcro pad was much larger than its competitors, and the velcro pad cutout looked large enough to fit around my camera‚Äôs microphone hole. It was only $9 for 6 of them. I had so little to lose and so much to gain.</p>

<p><img src="/assets/img/2025/05/camera_windscreen.jpg" alt="An Amcrest security camera with a black action-camera windscreen installed." /><em>Outdoor Amcrest security camera with an ‚ÄúInsta360 X4 Mic Wind Muff‚Äù installed over the mic to reduce wind noise (above a üòÆ face)</em></p>

<p>Luckily, all of my cameras were out of direct rain and snow. This meant that I didn‚Äôt have to worry about the foam getting wet and staying saturated.</p>

<p>After I installed it, I didn‚Äôt know if it was working until I noticed some pretty faint wind chimes alongside a recording of an American Robin. But they weren‚Äôt my wind chimes. Instead, they were from my neighbor‚Äôs porch. ü§£</p>

<p>I went into this only expecting a 50% reduction in wind noise. But this removed almost all but the <em>highest winds</em>, and even those were <em>significantly</em> quieter. So yeah, this seems to work perfectly for any normal amount of wind.</p>

<p>I‚Äôve only had them installed for 2 months, so I‚Äôm not sure how well the adhesive will hold up over time. But so far, they‚Äôre working significantly better than I anticipated.</p>

<h2 id="birdnet-go-usage">BirdNET-Go Usage</h2>

<p>I‚Äôve now been using BirdNET-Go for 2 months. My usage can be broken down into 2 primary categories:</p>

<h3 id="educational">Educational</h3>

<p>I have an activity with my 2-year-old where we scroll through yesterday‚Äôs dashboard and try to name each bird (by its picture) and listen to their calls. This kid is like a sponge and he is getting shockingly good at recognizing birds by their appearance or calls. üßΩ</p>

<p>Then as we go on our walks, we try to match what we‚Äôve learned with what we see and hear. It‚Äôs a fun way to spend time together and learn about the world around us.</p>

<h3 id="tracking">Tracking</h3>

<p>I use BirdNET-Go to track birds and to get a general idea about what‚Äôs around my house. It has allowed me to be more aware of the birds that stick around and which ones are migrating through the area.</p>

<p>To support my tracking, I combine BirdNET-Go with a few automations set up in Home Assistant that notify me of certain conditions‚Äìlike when specific species are detected. This encourages me to step outside, locate them, and cross them off of my ‚ÄúSpecies observed‚Äù list.</p>

<p><em>Huge</em> shout out to <a href="https://github.com/tphakala">Tomi P. Hakala</a> who built the BirdNET-Go software layer on top of the BirdNET project and <a href="https://github.com/mcguirepr89">mcguirepr89</a> for his original BirdNET-Pi project. Without the work from either of those two developers (and countless others!), there is no chance I would have been able to get this project off the ground.</p>

<blockquote>
  <p>Shameless plug; I‚Äôve made a few <a href="https://github.com/tphakala/birdnet-go/pulls?q=is%3Apr+is%3Amerged+author%3Aaav7fl">very minor contributions</a> to the BirdNET-Go project because I think it‚Äôs so awesome, and I think you should too.</p>
</blockquote>

<p>Let‚Äôs dig into how I consume the data from BirdNET-Go, the cards I created in Home Assistant, and the automations to make it all work.</p>

<h2 id="home-assistant-sensors">Home Assistant Sensors</h2>

<p><img src="/assets/img/2025/05/amerob.jpg" alt="An American Robin fledgling on the railing of a deck." /><em>An American Robin fledgling on our back deck railing.</em></p>

<blockquote>
  <p>A lot of these sensors are dependent on using any release on or after <a href="https://github.com/tphakala/birdnet-go/releases/tag/nightly-20250427">Nightly Build 20250427</a> which adds the analytics dashboard and my change to the BirdNET-Go API to return the species code in the daily summary API endpoint (used for the eBird links).</p>
</blockquote>

<p>If it wasn‚Äôt already clear, we‚Äôre going to be using <a href="https://www.home-assistant.io/">Home Assistant</a> to consume the data from BirdNET-Go and to send notifications to the user. Home Assistant is a great home automation platform that can be used to integrate with a variety of devices and services.</p>

<p>Here are two <code class="language-plaintext highlighter-rouge">command_line</code> sensors I created to pull data from the BirdNET-Go API and include the data in Home Assistant.</p>

<p>Each of the <code class="language-plaintext highlighter-rouge">command_line</code> sensors has a <em>matching</em> <code class="language-plaintext highlighter-rouge">template</code> sensor. It is used to persist data even when the BirdNET-Go API isn‚Äôt available (like when the machine first boots up). <strong>This is important!</strong></p>

<p>If the BirdNET-Go API is down, the <code class="language-plaintext highlighter-rouge">command_line</code> sensors will fail and the sensor will resolve to <code class="language-plaintext highlighter-rouge">unknown</code>.</p>

<p>Normally this would not be a problem. But my notification automations work by comparing the previous and current state of each sensor. When the API comes back up, if the previous <code class="language-plaintext highlighter-rouge">command_line</code> sensor state was <code class="language-plaintext highlighter-rouge">unknown</code>, we will not be able to accurately compare the changes to <em>now</em>. This is most likely to occur when Home Assistant and BirdNET-Go are restarted on the host machine.</p>

<p>We can work around these edge cases by persisting the data we last <em>knew</em> about. I chose to do this by creating an additional <code class="language-plaintext highlighter-rouge">template</code> sensor for each <code class="language-plaintext highlighter-rouge">command_line</code> sensor and ignoring any <code class="language-plaintext highlighter-rouge">unknown</code> and <code class="language-plaintext highlighter-rouge">unavailable</code> states. The result is a <code class="language-plaintext highlighter-rouge">template</code> sensor that will always have the last <em>known</em> state of the <code class="language-plaintext highlighter-rouge">command_line</code> sensor.</p>

<p>Below, I chose to only use the persisted_data <code class="language-plaintext highlighter-rouge">template</code> sensors in the <em>automations</em>, while continuing to use the non-persisted <code class="language-plaintext highlighter-rouge">command_line</code> sensors for the <em>dashboard cards</em>. I prefer that the dashboard cards always represent the current <em>live</em> state from BirdNET-Go (even if it‚Äôs not working). While on the other hand, the automations are all about comparing the current state with the last state <em>we knew about</em>.</p>

<p><strong>‚ö†Ô∏è NOTE:</strong> Since the <code class="language-plaintext highlighter-rouge">template</code> sensor ignores <code class="language-plaintext highlighter-rouge">unknown</code> and <code class="language-plaintext highlighter-rouge">unavailable</code> states (which is what happens when Home Assistant starts), you‚Äôll likely need to wait for the first successful <em>change</em> of the non-persisted <code class="language-plaintext highlighter-rouge">command_line</code> sensor <strong>state</strong> before the persisted_data <code class="language-plaintext highlighter-rouge">template</code> sensor will update and work correctly. If you‚Äôre impatient, you can always force the <code class="language-plaintext highlighter-rouge">command_line</code> sensor <code class="language-plaintext highlighter-rouge">state</code> to change to <em>any other value</em> in Home Assistant by using the <a href="https://www.home-assistant.io/docs/tools/dev-tools/#states-tab">states tab</a> under the dev tools. Don‚Äôt worry, it will always revert to the correct value when the <code class="language-plaintext highlighter-rouge">command_line</code> sensor updates again.</p>

<h3 id="sensor-for-daily-species-summary">Sensor for Daily Species Summary</h3>

<p>This command line sensor fetches the <em>daily summary</em> of bird species detected by BirdNET-Go using the <code class="language-plaintext highlighter-rouge">/api/v2/analytics/species/daily</code> endpoint. It uses <code class="language-plaintext highlighter-rouge">jq</code> to extract the <code class="language-plaintext highlighter-rouge">species_list</code>. The sensor‚Äôs state is the count of unique species detected, and it stores the full list of species as an attribute.</p>

<details>

  <summary>[Yaml] Home Assistant Sensor - Daily Summary</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># configuration.yaml</span>
<span class="na">command_line</span><span class="pi">:</span> <span class="kt">!include</span> <span class="s">command_line.yaml</span>
<span class="na">template</span><span class="pi">:</span> <span class="kt">!include</span> <span class="s">template.yaml</span>
</code></pre></div>  </div>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># command_line.yaml</span>
<span class="c1"># version 1.1</span>
<span class="pi">-</span> <span class="na">sensor</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BirdNET</span><span class="nv"> </span><span class="s">Daily</span><span class="nv"> </span><span class="s">Summary"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">birdnet_daily_summary"</span>
    <span class="c1"># Updated command uses jq to check input type and provide a default empty list</span>
    <span class="na">command</span><span class="pi">:</span> <span class="pi">&gt;</span>
      <span class="s">curl --connect-timeout 5 --max-time 10 --retry 3 --retry-delay 0 --retry-max-time 30 -s 'http://YOUR_BIRDNET_ENDPOINT:YOUR_BIRDNET_PORT/api/v2/analytics/species/daily' |</span>
      <span class="s">jq 'if type == "array" then {species_list: .} end'</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;</span>
      <span class="s">{% if value_json is defined and value_json.species_list is iterable and value_json.species_list is not string %}</span>
        <span class="s">{{ value_json.species_list | length }}</span>
      <span class="s">{% endif %}</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">species"</span>
    <span class="na">json_attributes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">species_list</span>
    <span class="na">scan_interval</span><span class="pi">:</span> <span class="m">60</span> <span class="c1"># Or adjust as needed</span>
    <span class="na">command_timeout</span><span class="pi">:</span> <span class="m">35</span>
</code></pre></div>  </div>

  <blockquote>
    <p>The specific <code class="language-plaintext highlighter-rouge">template</code> sensor below is <strong>optional</strong> as it‚Äôs not used in any of my automations. However, I‚Äôve included it as you may find it useful for writing your own automations that use the daily counts and frequencies.</p>
  </blockquote>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># template.yaml</span>
<span class="c1"># version 1.0</span>
<span class="c1"># The data in this sensor won't be populated for the first time until the command_line sensor _changes_ to a _different_ state. This can be forced manually in the dev tools states tab.</span>
<span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
     <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.birdnet_daily_summary</span>
     <span class="na">not_to</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s">unknown</span>
       <span class="pi">-</span> <span class="s">unavailable</span>
  <span class="na">sensor</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">BirdNET Daily Summary Persisted Data</span>
     <span class="na">unique_id</span><span class="pi">:</span> <span class="s">birdnet_daily_summary_persisted_data</span>
     <span class="na">state</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.to_state.state</span><span class="nv"> </span><span class="s">}}'</span>
     <span class="na">attributes</span><span class="pi">:</span>
       <span class="na">species_list</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.to_state.attributes.species_list</span><span class="nv"> </span><span class="s">}}'</span>
     <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">species"</span>
</code></pre></div>  </div>

</details>

<h3 id="sensor-for-overall-species-summary">Sensor for Overall Species Summary</h3>

<p>This command line sensor fetches the <em>overall species summary</em> from BirdNET-Go using the <code class="language-plaintext highlighter-rouge">/api/v2/analytics/species/summary</code> endpoint. This means it gets the species summary for not only today but also when data was first recorded by BirdNET-Go.</p>

<p>Just like the previous sensor, it uses <code class="language-plaintext highlighter-rouge">jq</code> to extract the <code class="language-plaintext highlighter-rouge">species_list</code>. The sensor‚Äôs state is the count of unique species detected, and it stores the full list of species as an attribute.</p>

<details>

  <summary>[Yaml] Home Assistant Sensor - Species Summary</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># configuration.yaml</span>
<span class="na">command_line</span><span class="pi">:</span> <span class="kt">!include</span> <span class="s">command_line.yaml</span>
<span class="na">template</span><span class="pi">:</span> <span class="kt">!include</span> <span class="s">template.yaml</span>
</code></pre></div>  </div>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># command_line.yaml</span>
<span class="c1"># version 1.2</span>
<span class="pi">-</span> <span class="na">sensor</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BirdNET</span><span class="nv"> </span><span class="s">Species</span><span class="nv"> </span><span class="s">Summary"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">birdnet_species_summary"</span>
    <span class="c1"># Uses jq to check input type and provide a default empty list</span>
    <span class="na">command</span><span class="pi">:</span> <span class="pi">&gt;</span>
      <span class="s">curl --connect-timeout 5 --max-time 10 --retry 3 --retry-delay 0 --retry-max-time 30 -s 'http://YOUR_BIRDNET_ENDPOINT:YOUR_BIRDNET_PORT/api/v2/analytics/species/summary' |</span>
      <span class="s">jq 'if type == "array" then {species_list: .} end'</span>
    <span class="c1"># Value_template calculates the number of species in the list</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;</span>
      <span class="s">{% if value_json is defined and value_json.species_list is iterable and (value_json.species_list | length) &gt; 0 %}</span>
        <span class="s">{{ (value_json.species_list | map(attribute='last_heard') | max | as_datetime | as_local) }}</span>
      <span class="s">{% endif %}</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">timestamp</span>
    <span class="na">json_attributes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">species_list</span>
    <span class="na">scan_interval</span><span class="pi">:</span> <span class="m">60</span> <span class="c1"># Or adjust as needed</span>
    <span class="na">command_timeout</span><span class="pi">:</span> <span class="m">25</span>
</code></pre></div>  </div>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># template.yaml</span>
<span class="c1"># version 1.1</span>
<span class="c1"># The data in this sensor won't be populated for the first time until the command_line sensor _changes_ to a _different_ state. This can be forced manually in the dev tools states tab.</span>
<span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
     <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.birdnet_species_summary</span>
     <span class="na">not_to</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s">unknown</span>
       <span class="pi">-</span> <span class="s">unavailable</span>
  <span class="na">sensor</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">BirdNET Species Summary Persisted Data</span>
     <span class="na">unique_id</span><span class="pi">:</span> <span class="s">birdnet_species_summary_persisted_data</span>
     <span class="na">state</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.to_state.state</span><span class="nv"> </span><span class="s">}}'</span>
     <span class="na">attributes</span><span class="pi">:</span>
       <span class="na">species_list</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.to_state.attributes.species_list</span><span class="nv"> </span><span class="s">}}'</span>
     <span class="na">device_class</span><span class="pi">:</span> <span class="s">timestamp</span>
</code></pre></div>  </div>

</details>

<h3 id="notes">Notes</h3>

<p>Here are some additional notes and tips regarding the sensors and their configuration.</p>

<h4 id="recorder">Recorder</h4>

<p>If you have a large number of birds detected, you may run into issues where the attributes are too large to be reasonably recorded in the Home Assistant history database. You might get a log message like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>State attributes for sensor.birdnet_* exceed maximum size of * bytes. 
This can cause database performance issues; Attributes will not be stored
</code></pre></div></div>

<p>The easiest solution is to exclude the sensors from being recorded in the database. In my testing, this still allowed the latest value to persist through a reboot while preventing history from being recorded. You can do this by adding the following to your <code class="language-plaintext highlighter-rouge">configuration.yaml</code> file:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># configuration.yaml</span>
<span class="c1"># version 1.0</span>
<span class="na">recorder</span><span class="pi">:</span>
  <span class="na">exclude</span><span class="pi">:</span>
    <span class="na">entities</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_daily_summary</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_daily_summary_persisted_data</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_species_summary</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_species_summary_persisted_data</span>
</code></pre></div></div>

<h4 id="faster-responsiveness">Faster Responsiveness</h4>

<p>In addition to the polling from the <code class="language-plaintext highlighter-rouge">command_line</code> sensors, you can also set up a simple automation that forces a new fetch from each of the endpoints by using the MQTT topic <code class="language-plaintext highlighter-rouge">birdnet</code> as a trigger.</p>

<p>The only requirement is that you set up the MQTT integration in BirdNET-Go and have it publish to the same MQTT broker that Home Assistant is listening to.</p>

<p>We treat the incoming MQTT update like a push trigger to fetch updates for the <code class="language-plaintext highlighter-rouge">command_line</code> sensors before their next <code class="language-plaintext highlighter-rouge">scan_interval</code> starts. This cuts down on the time it takes to get updates for the sensors, and makes our notifications react as quickly as possible.</p>

<p>We don‚Äôt care about the MQTT payload, instead, we only care if <em>something</em> changes in BirdNET-Go.</p>

<p>Below is a template sensor that listens to the BirdNET-Go MQTT topic.</p>

<details>

  <summary>[Yaml] Home Assistant Sensor - BirdNET-Go MQTT</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># configuration.yaml</span>
<span class="na">template</span><span class="pi">:</span> <span class="kt">!include</span> <span class="s">template.yaml</span>
</code></pre></div>  </div>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># template.yaml</span>
<span class="c1"># version 1.0</span>
<span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">mqtt</span>
      <span class="na">topic</span><span class="pi">:</span> <span class="s">birdnet</span>
    <span class="c1"># Reset at midnight to align with "a new daily summary"</span>
    <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time_pattern</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">id</span><span class="pi">:</span> <span class="s">reset</span>
  <span class="na">sensor</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">BirdNET</span>
      <span class="na">unique_id</span><span class="pi">:</span> <span class="s">birdnet</span>
      <span class="na">state</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{% if trigger.id == 'reset' %}</span>
          <span class="s">unavailable</span>
        <span class="s">{% elif trigger.payload_json is defined %}</span>
          <span class="s">{{ today_at(trigger.payload_json.Time) }}</span>
        <span class="s">{% else %}</span>
          <span class="s">unknown</span>
        <span class="s">{% endif %}</span>
      <span class="na">icon</span><span class="pi">:</span> <span class="s">mdi:bird</span>
</code></pre></div>  </div>

</details>

<p>Below is the automation portion which forces the <code class="language-plaintext highlighter-rouge">command_line</code> sensors to update each time the BirdNET-Go MQTT sensor changes.</p>

<details>

  <summary>[Yaml] Home Assistant Automation - Command Line Sensor Manual Updates</summary>

  <p><a href="https://my.home-assistant.io/redirect/automations/" target="_blank" rel="noreferrer noopener"><img src="https://my.home-assistant.io/badges/automations.svg" alt="Open your Home Assistant instance and show your automations." style="margin-left: unset" /></a> <!-- https://my.home-assistant.io/create-link/ --></p>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Automation</span>
<span class="c1"># version 1.0</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Trigger BirdNET-Go API fetch</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet</span>
<span class="na">conditions</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">homeassistant.update_entity</span>
        <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
        <span class="na">data</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">sensor.birdnet_daily_summary</span>
      <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">homeassistant.update_entity</span>
        <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
        <span class="na">data</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="s">sensor.birdnet_species_summary</span>  
<span class="na">mode</span><span class="pi">:</span> <span class="s">queued</span>
<span class="na">max</span><span class="pi">:</span> <span class="m">5</span>
</code></pre></div>  </div>

</details>

<h2 id="home-assistant-cards">Home Assistant Cards</h2>

<p><img src="/assets/img/2025/05/rthhum.jpg" alt="A Ruby-throated Hummingbird eating from a hanging fuchsia basket" /><em>A Ruby-throated Hummingbird visiting our fuchsia basket.</em></p>

<p>Below I‚Äôve created a few <code class="language-plaintext highlighter-rouge">markdown</code> cards in Home Assistant to display the data from the BirdNET-Go sensors. I liked having all the information in one place and using markdown tables was the quickest way to get something out there.</p>

<p>Could there be improvements or optimizations to these Home Assistant dashboard cards below? Absolutely. But unless you‚Äôre running on a <a href="https://en.wikipedia.org/wiki/TI-84_Plus_series">Zilog Z80</a>, I don‚Äôt think you‚Äôre going to notice a faster loop speed in a home setting. I won‚Äôt let perfection be the enemy of good enough.</p>

<h3 id="card-daily-species-summary-with-sparklines">Card: Daily Species Summary With Sparklines</h3>

<p><img src="/assets/img/2025/05/home_assistant_birdnet_sparkline_card.png" alt="Home Assistant dashboard showing today's BirdNET detections frequencies being represented by a sparkline chart" /><em>Today‚Äôs BirdNET detections and frequencies are represented by a sparkline chart</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-daily-species-summary">Sensor for Daily Species Summary</a></p>
</blockquote>

<p>This is my favorite card and the one I find myself looking at the most. This card closely matches what one would find on their BirdNET-Go dashboard. It shows today‚Äôs detected species, their overall count, and a fun sparkline chart that represents the frequency of detections throughout the day.</p>

<p>I first got the idea for the sparklines from this <a href="https://github.com/tphakala/birdnet-go/issues/587">GitHub issue</a> where someone wanted to add them to the daily summary dashboard in <em>BirdNET-Go</em>. Thanks!</p>

<p>Since there isn‚Äôt an easy way to fit a full sparkline chart on mobile in the markdown card, I decided to ‚Äúcombine‚Äù all the counts from the quietest hours into a single bar.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Bar 1</code> = Combined counts from 12:00 AM - 06:00 AM</li>
  <li><code class="language-plaintext highlighter-rouge">Bar 2..13</code> = Hourly counts from 06:00 AM - 06:00 PM</li>
  <li><code class="language-plaintext highlighter-rouge">Bar 14</code> = Combined counts from 06:00 PM - 12:00 AM</li>
</ul>

<p>An alternative idea would be to combine every 2 hours into a bar, giving an even distribution of data. However as most of my data was during the daytime, I decided to keep the precision from 06:00 AM - 06:00 PM.</p>

<p>I also included another idea from <a href="https://community.home-assistant.io/t/displaying-birdnet-go-detections/713611/24">Alexandre</a> who suggested using the species code from BirdNET-Go and linking to the eBird website with it. üëè This way you can quickly look up the species and see more information about them from your dashboard card.</p>

<details>

  <summary>[Yaml] Home Assistant Card - Daily Summary with Sparklines</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">type</span><span class="pi">:</span> <span class="s">markdown</span>
<span class="na">content</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">{% if has_value('sensor.birdnet_daily_summary') %}  </span>

  <span class="s">{% set species_data = state_attr('sensor.birdnet_daily_summary',</span>
  <span class="s">'species_list') %}</span>

  <span class="s">{% if species_data and species_data | count &gt; 0 %}</span>

  <span class="s">Last Heard | Species | Count | Sparkline (6AM-6PM)</span>

  <span class="s">:-- | :-- | :-- | --</span>

  <span class="s">{% for bird in species_data | sort(attribute='latest_heard', reverse=true) |</span>
  <span class="s">sort(attribute='count', reverse=true) %}</span>

  <span class="s">{#- Basic Info -#}</span>

  <span class="s">{%- set time = bird.latest_heard -%}</span>

  <span class="s">{%- set name = bird.common_name -%}</span>

  <span class="s">{%- set count = bird.count -%}</span>

  <span class="s">{%- set species_code = bird.species_code %}</span>

  <span class="s">{%- set ebird_url = "https://ebird.org/species/" ~ species_code %}</span>

  <span class="s">{#--- Sparkline Calculation (Full Day Aggregated - 14 slots) ---#}</span>

  <span class="s">{%- set hourly = bird.hourly_counts -%}</span>

  <span class="s">{%- set sparkline_str = "N/A" -%} {#- Default value -#}</span>

  <span class="s">{%- if hourly is defined and hourly is iterable and hourly | count == 24 -%}</span>
    <span class="s">{#- Aggregate counts: [0-6], 6..18, [18-24] (14 slots total, safe concatenation) -#}</span>
    <span class="s">{%- set early_sum = hourly[0:6] | sum -%}</span>
    <span class="s">{%- set middle_part = hourly[6:18] -%}</span>
    <span class="s">{%- set late_sum = hourly[18:24] | sum -%}</span>
    <span class="s">{%- set aggregated_counts = [early_sum] + middle_part + [late_sum] -%}</span>

    <span class="s">{# Check if list has expected count before finding max #}</span>
    <span class="s">{%- if aggregated_counts | count == 14 -%}</span>
      <span class="s">{#- Find Max for Scaling -#}</span>
      <span class="s">{%- set max_val = aggregated_counts | max -%}</span>

      <span class="s">{#- Define Sparkline Characters (7 levels, U+2581 to U+2587) -#}</span>
      <span class="s">{%- set spark_chars = ['‚ñÅ', '‚ñÇ', '‚ñÉ', '‚ñÑ', '‚ñÖ', '‚ñÜ', '‚ñá'] -%}</span>
      <span class="s">{%- set sparkline = namespace(text="") -%}</span>

      <span class="s">{%- for v in aggregated_counts -%}</span>
        <span class="s">{#- Map value to character index (0-6), scale factor 7, max index 6 -#}</span>
        <span class="s">{%- set char_index = ([0, (v * 7 / max_val)|int , 6] | sort)[1] if max_val &gt; 0 else 0 -%} {#&lt;-- 2. Use 7 levels for scaling/clamping #}</span>
        <span class="s">{#- Append character -#}</span>
        <span class="s">{%- set sparkline.text = sparkline.text ~ spark_chars[char_index] -%}</span>
      <span class="s">{%- endfor -%}</span>
      <span class="s">{%- set sparkline_str = sparkline.text -%}</span>
    <span class="s">{%- else -%}</span>
       <span class="s">{% set sparkline_str = "?" * 12 %}</span>
    <span class="s">{%- endif -%}</span>
  <span class="s">{%- endif -%}</span>

  <span class="s">{#--- End Sparkline Calculation ---#}</span>


  <span class="s">{#- Output Row -#}</span>

  <span class="s">{{ today_at(time) | as_timestamp  | timestamp_custom('%H:%M', true)}} | [{{</span>
  <span class="s">name }}]({{ ebird_url }}) | {{ count }} | {{ sparkline_str }}</span>

  <span class="s">{% endfor %}</span>


  <span class="s">---</span>

  <span class="s">{{ species_data | sum(attribute='count') | int }} Detections</span>

  <span class="s">{{ species_data | count }} Species</span>

  <span class="s">{% else %}</span>

  <span class="s">No bird species data available or list is empty.</span>

  <span class="s">{% endif %}</span>

  <span class="s">{% else %}</span>

  <span class="s">BirdNET-Go API is not available.</span>

  <span class="s">{% endif %}</span>
</code></pre></div>  </div>

</details>

<h3 id="card-latest-species-detections">Card: Latest Species Detections</h3>

<p><img src="/assets/img/2025/05/home_assistant_birdnet_latest_detections.png" alt="Home Assistant dashboard showing BirdNET's the most recent species detected" /><em>BirdNET‚Äôs latest species detections sorted by most recent</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></p>
</blockquote>

<p>It‚Äôs a fun problem to have, but sometimes it‚Äôs challenging to scan through the daily detection summary to see what the most recent detections are. This card solves that problem by showing the most recent detections in a simple markdown table sorted by the last heard time in a human-readable format.</p>

<p>Unlike the daily summary card, this card does not reset after midnight. It‚Äôs helpful for scanning for detected birds from the prior night.</p>

<details>

  <summary>[Yaml] Home Assistant Card - Latest Detections</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">type</span><span class="pi">:</span> <span class="s">markdown</span>
<span class="na">content</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">{% if has_value('sensor.birdnet_species_summary') %}  </span>
  <span class="s">{% set species_data = state_attr('sensor.birdnet_species_summary', 'species_list') %} </span>
  <span class="s">{% if species_data and species_data | count &gt; 0 %}</span>
    <span class="s">Latest Detections | &amp;nbsp;&amp;nbsp;&amp;nbsp;Last Heard </span>
    <span class="s">:-- | :-- </span>
    <span class="s">{% for bird in (species_data | sort(attribute='last_heard', reverse=true))[0:11] %}</span>
      <span class="s">{%- set time = bird.last_heard -%}</span>
      <span class="s">{%- set name = bird.common_name -%}</span>
      <span class="s">{%- set species_code = bird.species_code %}</span>
      <span class="s">{%- set ebird_url = "https://ebird.org/species/" ~ species_code %}</span>
    <span class="s">¬† {%- set last_heard_datetime = strptime(time, '%Y-%m-%d %H:%M:%S') %}[{{ name }}]({{ ebird_url }}) | &amp;nbsp;&amp;nbsp;&amp;nbsp;{{ relative_time(last_heard_datetime) }} ago </span>
    <span class="s">{% endfor %}</span>
  <span class="s">{% else %} </span>
    <span class="s">No recent bird data available. </span>
  <span class="s">{% endif %}</span>
  <span class="s">{% else %}</span>
    <span class="s">BirdNET-Go API is not available.</span>
  <span class="s">{% endif %}</span>
</code></pre></div>  </div>

</details>

<h3 id="card-birds-of-interest">Card: Birds of Interest</h3>

<p><img src="/assets/img/2025/05/home_assistant_birdnet_birds_of_interest.png" alt="Home Assistant dashboard showing a filtered list of birds I'm interested in tracking" /><em>A filtered list of birds I‚Äôm interested in tracking</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></p>
</blockquote>

<p>While the two summary cards have been great, I also found myself searching the card for birds I was interested in keeping an eye out for. To solve this problem, I created <em>another</em> card that takes in a case-<em>insensitive</em> list of birds and matches their common name with the list in the species summary sensor.</p>

<p>This is helpful for birds I might not see every day, but I want to know when they‚Äôre back in the area without opening up the BirdNET-Go dashboard and flipping through the last few days.</p>

<p>It‚Äôs a pretty manual process to add the birds to the list, but I change this so infrequently that it wasn‚Äôt worth the effort to engineer any further.</p>

<details>

  <summary>[Yaml] Home Assistant Card - Birds of Interest</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">type</span><span class="pi">:</span> <span class="s">markdown</span>
<span class="na">content</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">{% if has_value('sensor.birdnet_species_summary') %}  </span>
  <span class="s">{% set birds_of_interest = [</span>
    <span class="s">'white-crowned sparrow',</span>
    <span class="s">'baltimore oriole',</span>
    <span class="s">'black-capped chickadee',</span>
    <span class="s">'tufted titmouse',</span>
    <span class="s">'osprey',</span>
    <span class="s">'yellow-rumped warbler',</span>
    <span class="s">'nashville warbler',</span>
    <span class="s">'',</span>
    <span class="s">'',</span>
    <span class="s">'',</span>
    <span class="s">''] %} </span>
  <span class="s">{% set birds_pattern = '(?i)^(' ~ birds_of_interest | join('|') ~ ')$' %}</span>
  <span class="s">{% set species_data_all = state_attr('sensor.birdnet_species_summary', 'species_list') %}</span>
  <span class="s">{% set species_data_filtered = [] %} </span>
  <span class="s">{% if species_data_all %}</span>
    <span class="s">{% set species_data_filtered = species_data_all | selectattr('common_name', 'match', birds_pattern) | list %} </span>
  <span class="s">{% endif %} </span>
  <span class="s">{% if species_data_filtered and species_data_filtered | count &gt; 0 %}</span>
    <span class="s">Latest Detections | &amp;nbsp;&amp;nbsp;&amp;nbsp;Last Heard</span>
    <span class="s">:-- | :-- </span>
    <span class="s">{% for bird in (species_data_filtered | sort(attribute='last_heard', reverse=true)) %}</span>
  <span class="s">¬†   {%- set time = bird.last_heard -%} ¬† </span>
      <span class="s">{%- set name = bird.common_name -%} ¬† </span>
      <span class="s">{%- set species_code = bird.species_code %} ¬† </span>
      <span class="s">{%- set ebird_url = "https://ebird.org/species/" ~ species_code %} ¬† </span>
      <span class="s">{%- set last_heard_datetime = strptime(time, '%Y-%m-%d %H:%M:%S') %}[{{ name }}]({{ ebird_url }}) | &amp;nbsp;&amp;nbsp;&amp;nbsp;{{ relative_time(last_heard_datetime) }} ago </span>
    <span class="s">{% endfor %}</span>
  <span class="s">{% else %} </span>
    <span class="s">No recent detections of specified birds. </span>
  <span class="s">{% endif %}</span>
  <span class="s">{% else %}</span>
    <span class="s">BirdNET-Go API is not available.</span>
  <span class="s">{% endif %}</span>
</code></pre></div>  </div>

</details>

<h3 id="card-brand-new-detections">Card: Brand New Detections</h3>

<p><img src="/assets/img/2025/05/home_assistant_birdnet_newest_birds.png" alt="Home Assistant dashboard showing BirdNET's birds that have been detected for the first time" /><em>A list of birds that have been detected for the very first time</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></p>
</blockquote>

<p>Last, this fun card shows the birds that have been detected for the very first time. This is a great way to see what <em>new</em> birds are in the area and if I should be on the lookout for them.</p>

<p><em>However</em>, once a bird makes this list and rolls off, it will never be on this list again. So it is a bit of a one-time use card, but still fun to track as I‚Äôm new to birding this year.</p>

<details>

  <summary>[Yaml] Home Assistant Card - Brand New Detections</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">type</span><span class="pi">:</span> <span class="s">markdown</span>
<span class="na">content</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">{% if has_value('sensor.birdnet_species_summary') %}  </span>
  <span class="s">{% set species_data = state_attr('sensor.birdnet_species_summary', 'species_list') %} </span>
  <span class="s">{% if species_data and species_data | count &gt; 0 %}</span>
    <span class="s">Latest Detections | &amp;nbsp;&amp;nbsp;&amp;nbsp;Count | &amp;nbsp;&amp;nbsp;&amp;nbsp;First Heard </span>
    <span class="s">:-- | :-- | :--</span>
    <span class="s">{% for bird in (species_data | sort(attribute='first_heard', reverse=true))[0:11] %}</span>
      <span class="s">{%- set time = bird.first_heard -%}</span>
      <span class="s">{%- set name = bird.common_name -%}</span>
      <span class="s">{%- set count = bird.count -%}</span>
      <span class="s">{%- set species_code = bird.species_code %}</span>
      <span class="s">{%- set ebird_url = "https://ebird.org/species/" ~ species_code %}</span>
      <span class="s">{%- set first_heard_datetime = strptime(time, '%Y-%m-%d %H:%M:%S') %}[{{ name }}]({{ ebird_url }}) | &amp;nbsp;&amp;nbsp;&amp;nbsp;{{ count }} | &amp;nbsp;&amp;nbsp;&amp;nbsp;{{ relative_time(first_heard_datetime) }} ago </span>
    <span class="s">{% endfor %}</span>
  <span class="s">{% else %} </span>
    <span class="s">No recent bird data available. </span>
  <span class="s">{% endif %}</span>
  <span class="s">{% else %}</span>
    <span class="s">BirdNET-Go API is not available.</span>
  <span class="s">{% endif %}</span>
</code></pre></div>  </div>

</details>

<h2 id="notifications">Notifications</h2>

<p><img src="/assets/img/2025/05/pilwoo.jpg" alt="A Pileated Woodpecker searching for food in a dead tree." /><em>A Pileated Woodpecker pecking away at a dead tree in my backyard.</em></p>

<p>Here is where the fun begins. Below are my collections of notifications that I‚Äôve set up in Home Assistant based on the created sensors above.</p>

<p>I‚Äôve simplified some of the notifications from my personal setup. But here are some ideas that you could implement on your own:</p>

<ul>
  <li>Only send notifications when you‚Äôre home</li>
  <li>Only send notifications when you‚Äôre not working or sleeping</li>
  <li>Add a separate notification channel or webhooks for your spouse or family members (allowing for different conditions)</li>
  <li>Add a notification cooldown timer to prevent spamming (demonstrated below)</li>
  <li>Add a <a href="https://companion.home-assistant.io/docs/notifications/notification-sounds/">custom notification sound</a> like this one (‚ö†Ô∏è Light <em>Severance</em> Spoiler!):
    <ul>
      <li><a href="/assets/files/2025/05/Bird.wav">Bird.wav üîä</a></li>
      <li><a href="/assets/files/2025/05/Bird.ogg">Bird.ogg üîä</a></li>
    </ul>
  </li>
</ul>

<h3 id="notify-for-custom-species-detection">Notify for Custom Species Detection</h3>

<p>This first automation is a simple one that notifies me when a specific bird species is detected.</p>

<p>In BirdNET-Go, you can set up custom actions to run when a specific bird species is detected. I leverage this feature to execute a custom script. My script sends the detection information from BirdNET-Go to Home Assistant via a webhook.</p>

<p>On the Home Assistant side, I have an automation triggered by this webhook. It parses the incoming data payload and sends a notification to my phone.</p>

<p>By leveraging the custom species action in BirdNET-Go, I can get better real-time push notifications for specific bird species without polling the API and checking for changes. Although, I <em>am</em> already doing that for some of the cards‚Ä¶ ü§∑‚Äç‚ôÇÔ∏è but I wrote this one first.</p>

<h4 id="custom-action-in-birdnet-go">Custom Action in BirdNET-Go</h4>

<p>This is the custom action that BirdNET-Go will execute when a specific bird species is detected.</p>

<p>Whenever you want to get notified for a bird detection, add a custom action under the <code class="language-plaintext highlighter-rouge">Settings &gt; Species</code> in BirdNET-Go that points to the script below. Then match it with the Home Assistant notification automation‚Äôs webhook further down.</p>

<p>Make sure to include the <code class="language-plaintext highlighter-rouge">CommonName</code>, <code class="language-plaintext highlighter-rouge">Confidence</code>, <code class="language-plaintext highlighter-rouge">Time</code>, and <code class="language-plaintext highlighter-rouge">Source</code> parameters in the custom action (any order will do).</p>

<blockquote>
  <p>Note: I‚Äôve found that I need to restart my BirdNET-Go instance whenever I change the species settings (like adding a custom action).</p>
</blockquote>

<p><img src="/assets/img/2025/05/birdnet-go-custom-action.png" alt="BirdNET-Go Custom Action for the White-crowned Sparrow" /><em>BirdNET-Go Custom Action for the White-crowned Sparrow</em></p>

<details>

  <summary>[Shell script] BirdNET-Go Custom Action (notify Home Assistant)</summary>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="c"># version 1.0</span>

<span class="c"># === Debug: Log Raw Input Arguments ===</span>
<span class="nb">echo</span> <span class="s2">"--- Raw Script Arguments Received ---"</span> <span class="o">&gt;</span>&amp;2
<span class="nv">arg_count</span><span class="o">=</span>0
<span class="k">for </span>raw_arg <span class="k">in</span> <span class="s2">"</span><span class="nv">$@</span><span class="s2">"</span><span class="p">;</span> <span class="k">do
  </span><span class="nv">arg_count</span><span class="o">=</span><span class="k">$((</span>arg_count <span class="o">+</span> <span class="m">1</span><span class="k">))</span>
  <span class="nb">echo</span> <span class="s2">"Arg </span><span class="k">${</span><span class="nv">arg_count</span><span class="k">}</span><span class="s2">: </span><span class="k">${</span><span class="nv">raw_arg</span><span class="k">}</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2 <span class="c"># Print each argument exactly as received</span>
<span class="k">done
</span><span class="nb">echo</span> <span class="s2">"Total arguments received: </span><span class="k">${</span><span class="nv">arg_count</span><span class="k">}</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"-------------------------------------"</span> <span class="o">&gt;</span>&amp;2
<span class="c"># === End Debug ===</span>


<span class="c"># === Configuration ===</span>
<span class="nv">HA_WEBHOOK_URL</span><span class="o">=</span><span class="s2">"http://HOME_ASSISTANT_URL:8123/api/webhook/notify-bird-detection-123456789"</span> <span class="c"># Replace with your actual webhook URL</span>

<span class="c"># === Argument Parsing ===</span>
<span class="c"># Initialize variables to store argument values</span>
<span class="nv">COMMON_NAME_VAL</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">CONFIDENCE_VAL</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">SOURCE_VAL</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">TIME_VAL</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">MISSING_ARGS</span><span class="o">=</span><span class="s2">""</span> <span class="c"># Keep track of missing arguments</span>

<span class="c"># Loop through all provided arguments</span>
<span class="k">for </span>arg <span class="k">in</span> <span class="s2">"</span><span class="nv">$@</span><span class="s2">"</span><span class="p">;</span> <span class="k">do
  case</span> <span class="nv">$arg</span> <span class="k">in</span>
    <span class="nt">--CommonName</span><span class="o">=</span><span class="k">*</span><span class="p">)</span>
      <span class="nv">COMMON_NAME_VAL</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">arg</span><span class="p">#*=</span><span class="k">}</span><span class="s2">"</span> <span class="c"># Extract value after '='</span>
      <span class="c"># *** BUG FIX: Remove potential surrounding quotes from the value ***</span>
      <span class="nv">COMMON_NAME_VAL</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$COMMON_NAME_VAL</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/^"//'</span> <span class="nt">-e</span> <span class="s1">'s/"$//'</span> <span class="nt">-e</span> <span class="s2">"s/^'//"</span> <span class="nt">-e</span> <span class="s2">"s/'</span><span class="nv">$/</span><span class="s2">/"</span><span class="si">)</span>
      <span class="p">;;</span>
    <span class="nt">--Confidence</span><span class="o">=</span><span class="k">*</span><span class="p">)</span>
      <span class="nv">CONFIDENCE_VAL</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">arg</span><span class="p">#*=</span><span class="k">}</span><span class="s2">"</span>
      <span class="c"># Optional: Remove quotes if confidence could ever be quoted</span>
      <span class="c"># CONFIDENCE_VAL=$(echo "$CONFIDENCE_VAL" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")</span>
      <span class="p">;;</span>
    <span class="nt">--Source</span><span class="o">=</span><span class="k">*</span><span class="p">)</span>
      <span class="nv">SOURCE_VAL</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">arg</span><span class="p">#*=</span><span class="k">}</span><span class="s2">"</span>
      <span class="c"># Optional: Remove quotes if source could ever be quoted</span>
      <span class="c"># SOURCE_VAL=$(echo "$SOURCE_VAL" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")</span>
      <span class="p">;;</span>
    <span class="nt">--Time</span><span class="o">=</span><span class="k">*</span><span class="p">)</span>
      <span class="nv">TIME_VAL</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">arg</span><span class="p">#*=</span><span class="k">}</span><span class="s2">"</span>
      <span class="c"># Optional: Remove quotes if time could ever be quoted</span>
      <span class="c"># TIME_VAL=$(echo "$TIME_VAL" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")</span>
      <span class="p">;;</span>
    <span class="k">*</span><span class="p">)</span>
      <span class="nb">echo</span> <span class="s2">"WARNING: Ignoring unrecognized argument: </span><span class="nv">$arg</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
      <span class="p">;;</span>
  <span class="k">esac</span>
<span class="k">done</span>

<span class="c"># === Validation ===</span>
<span class="c"># Check if all required arguments were found</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$COMMON_NAME_VAL</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">MISSING_ARGS</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="k">}</span><span class="s2"> --CommonName"</span><span class="p">;</span> <span class="k">fi
if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$CONFIDENCE_VAL</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">MISSING_ARGS</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="k">}</span><span class="s2"> --Confidence"</span><span class="p">;</span> <span class="k">fi
if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$SOURCE_VAL</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">MISSING_ARGS</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="k">}</span><span class="s2"> --Source"</span><span class="p">;</span> <span class="k">fi
if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$TIME_VAL</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">MISSING_ARGS</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="k">}</span><span class="s2"> --Time"</span><span class="p">;</span> <span class="k">fi</span>

<span class="c"># If any arguments are missing...</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$MISSING_ARGS</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    <span class="c"># --- Debug Fallback ---</span>
    <span class="nv">ERROR_REASON</span><span class="o">=</span><span class="s2">"Missing required arguments"</span>
    <span class="nb">echo</span> <span class="s2">"ERROR: </span><span class="k">${</span><span class="nv">ERROR_REASON</span><span class="k">}</span><span class="s2">: </span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="k">}</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2

    <span class="c"># Construct a debug JSON payload for Home Assistant</span>
    <span class="nv">DEBUG_JSON</span><span class="o">=</span><span class="si">$(</span><span class="nb">printf</span> <span class="s1">'{"type": "script_error", "reason": "%s", "missing_args": "%s"}'</span> <span class="se">\</span>
        <span class="s2">"</span><span class="nv">$ERROR_REASON</span><span class="s2">"</span> <span class="se">\</span>
        <span class="s2">"</span><span class="k">${</span><span class="nv">MISSING_ARGS</span><span class="p"># </span><span class="k">}</span><span class="s2">"</span> <span class="si">)</span> <span class="c"># Remove leading space from MISSING_ARGS</span>

    <span class="nb">echo</span> <span class="s2">"Sending error details to Home Assistant webhook..."</span> <span class="o">&gt;</span>&amp;2

    <span class="c"># Attempt to send the error notification via curl to the HA webhook</span>
    curl <span class="nt">--silent</span> <span class="nt">--show-error</span> <span class="nt">--fail</span> <span class="se">\</span>
        <span class="nt">-X</span> POST <span class="se">\</span>
        <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="se">\</span>
        <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$DEBUG_JSON</span><span class="s2">"</span> <span class="se">\</span>
        <span class="s2">"</span><span class="k">${</span><span class="nv">HA_WEBHOOK_URL</span><span class="k">}</span><span class="s2">"</span>

    <span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to send *debug* JSON to Home Assistant webhook."</span> <span class="o">&gt;</span>&amp;2
        <span class="c"># Even if sending debug fails, we continue to exit 0 below</span>
    <span class="k">fi</span>

    <span class="c"># Print standard usage instructions to console for the user</span>
    <span class="nb">echo</span> <span class="s2">"Usage: </span><span class="nv">$0</span><span class="s2"> --Time=</span><span class="se">\"</span><span class="s2">&lt;value&gt;</span><span class="se">\"</span><span class="s2"> --CommonName=</span><span class="se">\"</span><span class="s2">&lt;value&gt;</span><span class="se">\"</span><span class="s2"> --Confidence=</span><span class="se">\"</span><span class="s2">&lt;value&gt;</span><span class="se">\"</span><span class="s2"> --Source=</span><span class="se">\"</span><span class="s2">&lt;value&gt;</span><span class="se">\"</span><span class="s2">"</span>
    <span class="nb">echo</span> <span class="s2">"Arguments can be in any order."</span>
    <span class="nb">echo</span> <span class="s2">"Example: </span><span class="nv">$0</span><span class="s2"> --Time=</span><span class="se">\"</span><span class="s2">07:53:30</span><span class="se">\"</span><span class="s2"> --CommonName=</span><span class="se">\"</span><span class="s2">White-crowned Sparrow</span><span class="se">\"</span><span class="s2"> --Confidence=</span><span class="se">\"</span><span class="s2">0.54</span><span class="se">\"</span><span class="s2"> --Source=</span><span class="se">\"</span><span class="s2">rtsp://user@10.0.0.1/stream</span><span class="se">\"</span><span class="s2">"</span>

    <span class="c"># Exit with a success status code, even though curl failed, that way nothing downstream breaks</span>
    <span class="nb">echo</span> <span class="s2">"Exiting with status 0 despite missing arguments."</span> <span class="o">&gt;</span>&amp;2
    <span class="nb">exit </span>0
<span class="k">fi</span>

<span class="c"># === Normal Operation (if all arguments are present) ===</span>

<span class="c"># --- Source Mapping ---</span>
<span class="c"># Use a temporary variable for the source before mapping</span>
<span class="c"># This remaps and source that contains the IP and replaces the entire source with a friendly name</span>
<span class="nv">SOURCE_MAPPED</span><span class="o">=</span><span class="s2">"</span><span class="nv">$SOURCE_VAL</span><span class="s2">"</span>
<span class="c"># Check if the source value CONTAINS a known IP using pattern matching (*)</span>
<span class="k">case</span> <span class="s2">"</span><span class="nv">$SOURCE_VAL</span><span class="s2">"</span> <span class="k">in</span>
    <span class="k">*</span><span class="s2">"10.0.0.1"</span><span class="k">*</span><span class="p">)</span> <span class="nv">SOURCE_MAPPED</span><span class="o">=</span><span class="s2">"Pool Camera"</span> <span class="p">;;</span>
    <span class="k">*</span><span class="s2">"10.0.0.2"</span><span class="k">*</span><span class="p">)</span> <span class="nv">SOURCE_MAPPED</span><span class="o">=</span><span class="s2">"Tree Camera"</span> <span class="p">;;</span>
    <span class="k">*</span><span class="s2">"10.0.0.3"</span><span class="k">*</span><span class="p">)</span> <span class="nv">SOURCE_MAPPED</span><span class="o">=</span><span class="s2">"Spy Camera"</span> <span class="p">;;</span>
<span class="k">esac</span>
<span class="c"># --- End Source Mapping ---</span>

<span class="c"># --- Confidence Formatting ---</span>
<span class="c"># Convert decimal confidence to percentage string</span>
<span class="nv">CONFIDENCE_DISPLAY</span><span class="o">=</span><span class="si">$(</span><span class="nb">awk</span> <span class="nt">-v</span> <span class="nv">conf</span><span class="o">=</span><span class="s2">"</span><span class="nv">$CONFIDENCE_VAL</span><span class="s2">"</span> <span class="s1">'BEGIN { printf "%.0f%%", conf * 100 }'</span><span class="si">)</span>
<span class="c"># --- End Confidence Formatting ---</span>

<span class="c"># === JSON Construction ===</span>
<span class="c"># Create the JSON payload for Home Assistant</span>
<span class="nv">JSON_PAYLOAD</span><span class="o">=</span><span class="si">$(</span><span class="nb">printf</span> <span class="s1">'{"type": "bird_detection", "time": "%s", "common_name": "%s", "confidence_pct": "%s", "confidence_raw": "%s", "source_camera": "%s"}'</span> <span class="se">\</span>
    <span class="s2">"</span><span class="nv">$TIME_VAL</span><span class="s2">"</span> <span class="se">\</span>
    <span class="s2">"</span><span class="nv">$COMMON_NAME_VAL</span><span class="s2">"</span> <span class="se">\</span>
    <span class="s2">"</span><span class="nv">$CONFIDENCE_DISPLAY</span><span class="s2">"</span> <span class="se">\</span>
    <span class="s2">"</span><span class="nv">$CONFIDENCE_VAL</span><span class="s2">"</span> <span class="se">\</span>
    <span class="s2">"</span><span class="nv">$SOURCE_MAPPED</span><span class="s2">"</span> <span class="si">)</span>

<span class="c"># === Send Data to Home Assistant ===</span>
<span class="nb">echo</span> <span class="s2">"Sending data to Home Assistant webhook..."</span>

<span class="c"># --- Debug: Show Final Values Before Sending ---</span>
<span class="nb">echo</span> <span class="s2">"--- Values used in JSON ---"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"Time:           </span><span class="nv">$TIME_VAL</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"Common Name:    </span><span class="nv">$COMMON_NAME_VAL</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"Confidence Pct: </span><span class="nv">$CONFIDENCE_DISPLAY</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"Confidence Raw: </span><span class="nv">$CONFIDENCE_VAL</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"Source Mapped:  </span><span class="nv">$SOURCE_MAPPED</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"---------------------------"</span> <span class="o">&gt;</span>&amp;2
<span class="nb">echo</span> <span class="s2">"JSON Payload: </span><span class="nv">$JSON_PAYLOAD</span><span class="s2">"</span> <span class="c"># Print the final JSON</span>
<span class="c"># --- End Debug ---</span>


<span class="c"># Use curl to send the JSON payload via POST</span>
curl <span class="nt">--silent</span> <span class="nt">--show-error</span> <span class="nt">--fail</span> <span class="se">\</span>
    <span class="nt">-X</span> POST <span class="se">\</span>
    <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="se">\</span>
    <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$JSON_PAYLOAD</span><span class="s2">"</span> <span class="se">\</span>
    <span class="s2">"</span><span class="k">${</span><span class="nv">HA_WEBHOOK_URL</span><span class="k">}</span><span class="s2">"</span>

<span class="c"># === Check Result ===</span>
<span class="nv">CURL_EXIT_CODE</span><span class="o">=</span><span class="nv">$?</span> <span class="c"># Capture the exit code of curl</span>
<span class="k">if</span> <span class="o">[</span> <span class="nv">$CURL_EXIT_CODE</span> <span class="nt">-eq</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"Data sent successfully to Home Assistant webhook."</span>
    <span class="nb">exit </span>0 <span class="c"># Success exit code</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to send data to Home Assistant webhook (curl exit code: </span><span class="nv">$CURL_EXIT_CODE</span><span class="s2">)."</span> <span class="o">&gt;</span>&amp;2
    <span class="c"># Exit with a success status code, even though curl failed, that way nothing downstream breaks</span>
    <span class="nb">echo</span> <span class="s2">"Exiting with status 0 despite webhook send failure."</span> <span class="o">&gt;</span>&amp;2
    <span class="nb">exit </span>0
<span class="k">fi</span>
</code></pre></div>  </div>

</details>

<h4 id="notification-for-a-bird-triggered-by-birdnet-go-script">Notification: For A Bird Triggered by BirdNET-Go Script</h4>

<p><img src="/assets/img/2025/05/home_assistant_notification_tracked_bird_detected.png" alt="Home Assistant notification showing a notification for a detection of a tracked bird" /><em>Home Assistant notification for the detection of a tracked bird</em></p>

<p>This is the code for the Home Assistant automation that listens for the webhook from BirdNET-Go and sends a notification to my phone.</p>

<p>For the automation below, I created a timer to prevent multiple notifications from being sent in a short period. I personally use a 15-minute cooldown between new notifications <em>unless</em> I press the <code class="language-plaintext highlighter-rouge">Reset</code> button in the notification. That button will trigger a reset of the notification cooldown timer.</p>

<p>This is useful if you have multiple cameras and they all detect the same bird at the same time, or if you want to get an additional notification while you‚Äôre trying to spot the bird with your binoculars up.</p>

<p>If you want to include the timer:</p>
<ul>
  <li>Create a new timer in the Helpers UI:
    <ul>
      <li><a href="https://my.home-assistant.io/redirect/helpers/" target="_blank" rel="noreferrer noopener"><img src="https://my.home-assistant.io/badges/helpers.svg" alt="Open your Home Assistant instance and show your helper entities." style="margin-left: unset" /></a> <!-- https://my.home-assistant.io/create-link/ --></li>
      <li>I set the timer duration to 15 minutes</li>
    </ul>
  </li>
  <li>Add the <code class="language-plaintext highlighter-rouge">Notify Bird Detection</code> automation below
    <ul>
      <li>Update the <code class="language-plaintext highlighter-rouge">timer.kyle_bird_notification_cooldown</code> to <em>your</em> new timer <code class="language-plaintext highlighter-rouge">entity_id</code></li>
    </ul>
  </li>
  <li>Add the <code class="language-plaintext highlighter-rouge">Reset Bird Detection Timer</code> automation below
    <ul>
      <li>Update the <code class="language-plaintext highlighter-rouge">timer.kyle_bird_notification_cooldown</code> to <em>your</em> new timer <code class="language-plaintext highlighter-rouge">entity_id</code></li>
    </ul>
  </li>
</ul>

<p><strong>‚ö†Ô∏è Known downside:</strong> Since this script is intended for <em>any</em> trigger by BirdNET-Go, all bird species that hit my webhook endpoint end up grouped together. So if BirdNET-Go hits my automation webhook endpoint for two different birds <em>during</em> the timer cooldown, I‚Äôll miss the notification for the second bird. I‚Äôve accepted this as a drawback because the tradeoff for having a single automation for multiple birds is worth it to me.</p>

<p>Here are a few ideas to work around this limitation:</p>

<ul>
  <li>Ignore the timer cooldown</li>
  <li>Create a separate automation for each bird species you want to track</li>
  <li>Create a managed filter entity inside Home Assistant that uses state triggers and records the species</li>
</ul>

<p>But I didn‚Äôt bother with any of that because the chances of two different birds that I‚Äôm tracking being detected at the same time are low, and I‚Äôm probably already outside listening for the first bird.</p>

<details>

  <summary>[Yaml] Home Assistant Automation - Notify Bird Detection</summary>

  <p><a href="https://my.home-assistant.io/redirect/automations/" target="_blank" rel="noreferrer noopener"><img src="https://my.home-assistant.io/badges/automations.svg" alt="Open your Home Assistant instance and show your automations." style="margin-left: unset" /></a> <!-- https://my.home-assistant.io/create-link/ --></p>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Notify Bird Detection</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Sends a notification to Kyle when the bird detection script calls the webhook,</span>
  <span class="s">handling success and error cases.</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">webhook</span>
    <span class="na">allowed_methods</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">POST</span>
      <span class="pi">-</span> <span class="s">PUT</span>
    <span class="na">local_only</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">webhook_id</span><span class="pi">:</span> <span class="s">notify-bird-detection-123456789</span>
<span class="na">conditions</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
            <span class="na">value_template</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.json.type</span><span class="nv"> </span><span class="s">==</span><span class="nv"> </span><span class="s">'bird_detection'</span><span class="nv"> </span><span class="s">}}"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Bird Detection</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.kyle_bird_notification_cooldown</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s">active</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
                  <span class="na">title</span><span class="pi">:</span> <span class="s">ü¶ú {{ trigger.json.common_name }} Detected!</span>
                  <span class="na">message</span><span class="pi">:</span> <span class="pi">|</span>
                    <span class="s">Time: {{ trigger.json.time }}   </span>
                    <span class="s">Camera: {{ trigger.json.source_camera }}  </span>
                    <span class="s">Confidence: {{ trigger.json.confidence_pct }}</span>
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:bird</span>
                    <span class="na">group</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                    <span class="na">channel</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                    <span class="na">tag</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                    <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                    <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
                    <span class="na">push</span><span class="pi">:</span>
                      <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
                      <span class="na">sound</span><span class="pi">:</span> <span class="s">bert.wav</span>
                    <span class="na">actions</span><span class="pi">:</span>
                      <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">BIRD_NOTIFICATION_COOLDOWN_RESET</span>
                        <span class="na">title</span><span class="pi">:</span> <span class="s">Reset</span>
                <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
              <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.start</span>
                <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">target</span><span class="pi">:</span>
                  <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.kyle_bird_notification_cooldown</span>
              <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">input_text.set_value</span>
                <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">data</span><span class="pi">:</span>
                  <span class="na">value</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                    <span class="s">{{ trigger.json.time }}: {{ trigger.json.common_name }}, {{</span>
                    <span class="s">trigger.json.source_camera }}, {{</span>
                    <span class="s">trigger.json.confidence_pct }}</span>
                <span class="na">target</span><span class="pi">:</span>
                  <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_text.kyle_last_bird_notification</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
            <span class="na">value_template</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">trigger.json.type</span><span class="nv"> </span><span class="s">==</span><span class="nv"> </span><span class="s">'script_error'</span><span class="nv"> </span><span class="s">}}"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Script Error</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
              <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                <span class="s">Received unexpected payload type from bird script webhook: {{</span>
                <span class="s">trigger.json | tojson }}</span>
              <span class="na">level</span><span class="pi">:</span> <span class="s">warning</span>
            <span class="na">action</span><span class="pi">:</span> <span class="s">system_log.write</span>
            <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
          <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">Bird Script Error Reported</span>
              <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;</span>
                <span class="s">Reason: {{ trigger.json.reason }}   </span>

                <span class="s">Missing Args: {{ trigger.json.missing_args | default('None</span>
                <span class="s">specified') }}</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:bird</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                <span class="na">tag</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
            <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div>  </div>

</details>

<details>

  <summary>[Yaml] Home Assistant Automation - Reset Bird Detection Timer</summary>

  <p><a href="https://my.home-assistant.io/redirect/automations/" target="_blank" rel="noreferrer noopener"><img src="https://my.home-assistant.io/badges/automations.svg" alt="Open your Home Assistant instance and show your automations." style="margin-left: unset" /></a> <!-- https://my.home-assistant.io/create-link/ --></p>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.0</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Kyle Bird Notification Cooldown Timer Reset</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Resets the Bird Notification Cooldown Timer so I can get another bird</span>
  <span class="s">notification.</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">event_type</span><span class="pi">:</span> <span class="s">mobile_app_notification_action</span>
    <span class="na">event_data</span><span class="pi">:</span>
      <span class="na">action</span><span class="pi">:</span> <span class="s">BIRD_NOTIFICATION_COOLDOWN_RESET</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">event</span>
<span class="na">conditions</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.cancel</span>
    <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">target</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">timer.kyle_bird_notification_cooldown</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>

</code></pre></div>  </div>

</details>

<h3 id="notify-for-a-bird-species-never-detected-before">Notify for a Bird Species Never Detected Before</h3>

<p><img src="/assets/img/2025/05/home_assistant_notification_new_detection.png" alt="Home Assistant notification showing a notification for a bird species that is new" /><em>Home Assistant notification for a bird species that has been detected for the first time</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></p>
</blockquote>

<p>This automation will send a notification for each bird species the <em>first time</em> that BirdNET-Go detects it. This is just a neat little gimmick to know if there is a brand new bird species in the area that I haven‚Äôt seen before, or if I need to remove a false positive.</p>

<p>The downside is that this will only send a notification for each bird species <em>once</em> (as once it has been detected, it‚Äôs no longer <em>new</em> again). But it will certainly be a fun little treat when a new bird species is detected during the first year of running BirdNET-Go.</p>

<details>

  <summary>[Yaml] Home Assistant Automation - Notify First-Time Detection</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.1</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Notify on First Detection of New BirdNET Bird Species</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Send a notification to kyle when a new bird species is detected that</span>
  <span class="s">we've never heard before.</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_species_summary_persisted_data</span>
    <span class="na">attribute</span><span class="pi">:</span> <span class="s">species_list</span>
<span class="na">conditions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{{ trigger.to_state.attributes.species_list is defined and</span>
      <span class="s">trigger.to_state.attributes.species_list is iterable and</span>
      <span class="s">trigger.to_state.attributes.species_list is not string and</span>
      <span class="s">trigger.from_state.state != 'unavailable' }}</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">variables</span><span class="pi">:</span>
      <span class="na">current_species_list</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{% set csl = trigger.to_state.attributes.get('species_list') if</span>
        <span class="s">trigger.to_state and trigger.to_state.attributes else none %} {% if csl</span>
        <span class="s">is iterable and csl is not string %}</span>
          <span class="s">{{ csl }}</span>
        <span class="s">{% else %}</span>
          <span class="s">[]</span>
        <span class="s">{% endif %}</span>
      <span class="na">previous_species_list</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{% set psl = trigger.from_state.attributes.get('species_list') if</span>
        <span class="s">trigger.from_state and trigger.from_state.attributes else none %} {% if</span>
        <span class="s">psl is iterable and psl is not string %}</span>
          <span class="s">{{ psl }}</span>
        <span class="s">{% else %}</span>
          <span class="s">[]</span>
        <span class="s">{% endif %}</span>
      <span class="na">current_common_names</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">current_species_list</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">map(attribute='common_name')</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">list</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">previous_common_names</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">previous_species_list</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">map(attribute='common_name')</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">list</span><span class="nv"> </span><span class="s">}}"</span>
  <span class="pi">-</span> <span class="na">repeat</span><span class="pi">:</span>
      <span class="na">for_each</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">current_species_list</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">sequence</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">sequence</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
              <span class="na">value_template</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">repeat.item.common_name</span><span class="nv"> </span><span class="s">not</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">previous_common_names</span><span class="nv"> </span><span class="s">}}"</span>
            <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
              <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">title</span><span class="pi">:</span> <span class="s">üê¶ New Bird Species Alert!</span>
                <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                  <span class="s">The {{repeat.item.common_name}} has been detected for the</span>
                  <span class="s">first time!</span>
                <span class="na">data</span><span class="pi">:</span>
                  <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:bird</span>
                  <span class="na">group</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                  <span class="na">channel</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                  <span class="na">tag</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
                  <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                  <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
                  <span class="na">push</span><span class="pi">:</span>
                    <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div>  </div>

</details>

<h3 id="notify-for-a-bird-that-hasnt-been-detected-in-a-while">Notify for a Bird That Hasn‚Äôt Been Detected in a While</h3>

<p><img src="/assets/img/2025/05/home_assistant_notification_bird_returned.png" alt="Home Assistant notification showing a notification for a bird that hasn't been detected in a while" /><em>Home Assistant notification for any bird that hasn‚Äôt been detected for a while</em></p>

<blockquote>
  <p>Requires: <a href="#sensor-for-overall-species-summary">Sensor for Overall Species Summary</a></p>
</blockquote>

<p>Over time, the BirdNET-Go instance will stop accumulating <em>brand new</em> birds as it detects more and more species. But I still want to know when a bird that hasn‚Äôt been detected in a while is detected again.</p>

<p>To solve this problem, I created an automation that notifies me when a bird that hasn‚Äôt been detected in a while is detected again. Think of it like the first time you see a yellow-rumped warbler in the spring after not seeing it all winter. It‚Äôs neat to be notified when any bird is back in the area after a long absence.</p>

<p>By default, the automation sets a window of 60 days. As I‚Äôve only had my BirdNET-Go instance running for a couple of months, I have no idea if this is a sane number or not. But I‚Äôll find out!</p>

<p>This can easily be adjusted in the automation below on the <code class="language-plaintext highlighter-rouge">{{ difference_in_days &gt; 60 }}</code> line.</p>

<details>

  <summary>[Yaml] Home Assistant Automation - Notify Uncommon Detection</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># version 1.4</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Notify rare bird detection</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Notify the family when a bird that hasn't been detected for a large number of days</span>
  <span class="s">is detected again.</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">sensor.birdnet_species_summary_persisted_data</span>
    <span class="na">attribute</span><span class="pi">:</span> <span class="s">species_list</span>
<span class="na">conditions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{{ trigger.to_state.attributes.species_list is defined and</span>
      <span class="s">trigger.to_state.attributes.species_list is iterable and</span>
      <span class="s">trigger.to_state.attributes.species_list is not string and</span>
      <span class="s">trigger.from_state.state != 'unavailable' }}</span>
    <span class="na">alias</span><span class="pi">:</span> <span class="s">Is a valid list</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">variables</span><span class="pi">:</span>
      <span class="na">current_species_list</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{% set csl = trigger.to_state.attributes.get('species_list') if</span>
        <span class="s">trigger.to_state and trigger.to_state.attributes else none %} {% if csl</span>
        <span class="s">is iterable and csl is not string %}</span>
          <span class="s">{{ csl }}</span>
        <span class="s">{% else %}</span>
          <span class="s">[]</span>
        <span class="s">{% endif %}</span>
      <span class="na">previous_species_list</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{% set psl = trigger.from_state.attributes.get('species_list') if</span>
        <span class="s">trigger.from_state and trigger.from_state.attributes else none %} {% if</span>
        <span class="s">psl is iterable and psl is not string %}</span>
          <span class="s">{{ psl }}</span>
        <span class="s">{% else %}</span>
          <span class="s">[]</span>
        <span class="s">{% endif %}</span>
      <span class="na">current_common_names</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">current_species_list</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">map(attribute='common_name')</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">list</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">previous_common_names</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">previous_species_list</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">map(attribute='common_name')</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">list</span><span class="nv"> </span><span class="s">}}"</span>
  <span class="pi">-</span> <span class="na">repeat</span><span class="pi">:</span>
      <span class="na">for_each</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">current_species_list</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">sequence</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
          <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
            <span class="s">{{ previous_species_list | selectattr('species_code', 'eq',</span>
            <span class="s">repeat.item.species_code) | list | length &gt; 0 }}</span>
        <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
          <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
            <span class="s">{% set current_bird = repeat.item %}</span>

            <span class="s">{% set previous_bird_data_list = previous_species_list |</span>
            <span class="s">selectattr('species_code', 'eq', current_bird.species_code) | list</span>
            <span class="s">%}</span>

            <span class="s">{% if previous_bird_data_list | length &gt; 0 %}</span>
              <span class="s">{% set previous_bird = previous_bird_data_list[0] %}</span>

              <span class="s">{% if current_bird.last_heard is defined and current_bird.last_heard is string and </span>
                    <span class="s">previous_bird.last_heard is defined and previous_bird.last_heard is string %}</span>
            <span class="no">    </span>
                <span class="s">{% set current_last_heard_dt = strptime(current_bird.last_heard, '%Y-%m-%d %H:%M:%S') %}</span>
                <span class="s">{% set previous_last_heard_dt = strptime(previous_bird.last_heard, '%Y-%m-%d %H:%M:%S') %}</span>

                <span class="s">{% if current_last_heard_dt &gt; previous_last_heard_dt %}</span>
                  <span class="s">{% set difference_in_seconds = (current_last_heard_dt - previous_last_heard_dt).total_seconds() %}</span>
                  <span class="s">{% set difference_in_days = difference_in_seconds / (60*60*24) %}</span>
                  <span class="s">{{ difference_in_days &gt; 180 }}</span>
                <span class="s">{% else %}</span>
                  <span class="s">{# current_last_heard is not more recent than previous_last_heard #}</span>
                  <span class="s">false</span>
                <span class="s">{% endif %}</span>
              <span class="s">{% else %}</span>
                <span class="s">false</span>
              <span class="s">{% endif %}</span>
            <span class="s">{% else %}</span>
              <span class="s">false</span>
            <span class="s">{% endif %}</span>
        <span class="pi">-</span> <span class="na">variables</span><span class="pi">:</span>
            <span class="na">bird_last_heard</span><span class="pi">:</span> <span class="pi">&gt;-</span>
              <span class="s">{{ (previous_species_list | selectattr('species_code', 'eq',</span>
              <span class="s">repeat.item.species_code) | list)[0].last_heard }}</span>
            <span class="na">bird_recently_heard</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">repeat.item.last_heard</span><span class="nv"> </span><span class="s">}}"</span>
            <span class="na">days_between_detection</span><span class="pi">:</span> <span class="pi">&gt;-</span>
              <span class="s">{{ (bird_recently_heard | as_datetime - bird_last_heard |</span>
              <span class="s">as_datetime).days }}</span>
        <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
            <span class="na">title</span><span class="pi">:</span> <span class="pi">&gt;-</span>
              <span class="s">üê¶ {{ repeat.item.common_name }} is back</span>
              <span class="s">({{days_between_detection}} days)!</span>
            <span class="na">message</span><span class="pi">:</span> <span class="pi">|</span>
              <span class="s">{{ repeat.item.common_name }} has been heard again!</span>
              <span class="s">Previously heard: {{ bird_last_heard | as_timestamp |</span>
              <span class="s">timestamp_custom('%b %d, %Y') }}</span>
              <span class="s">That's a gap of {{ days_between_detection }} days!</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:bird</span>
              <span class="na">group</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
              <span class="na">channel</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
              <span class="na">tag</span><span class="pi">:</span> <span class="s">birdnet-alert</span>
              <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
              <span class="na">push</span><span class="pi">:</span>
                <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
          <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
<span class="c1"># Queued as we might be running slow with our timestamp</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">queued</span>
<span class="na">max</span><span class="pi">:</span> <span class="m">10</span>
</code></pre></div>  </div>

</details>

<h2 id="bonus-generate-shareable-videos-from-sound-detections">Bonus: Generate Shareable Videos From Sound Detections</h2>

<p>I‚Äôve recorded some pretty cool bird sounds with BirdNET-Go, and I wanted to share them with my family and friends. Since it‚Äôs difficult to share raw audio files, I created a script that generates a video from the audio file, adds some metadata, and overlays some of the information.</p>

<p>Just so you‚Äôre aware, the audio download process from BirdNET-Go seems to be in flux at the moment depending on which page you download the audio from.</p>

<p>If you download the bird sounds from the audio player in the <code class="language-plaintext highlighter-rouge">Main Dashboard</code> or the <code class="language-plaintext highlighter-rouge">Search Bar</code> at the top of BirdNET-Go, it appears to download the <em>original</em> audio file from the <code class="language-plaintext highlighter-rouge">/api/v1/media/audio</code> endpoint. That audio file will follow a naming scheme close to <code class="language-plaintext highlighter-rouge">&lt;scientific_name&gt;_&lt;confidence&gt;_&lt;timestamp&gt;.&lt;original_extension&gt;</code>.</p>

<p>However, if you use the newer <code class="language-plaintext highlighter-rouge">Search Dashboard</code> (from the left-hand side of BirdNET-Go), you‚Äôll be presented with a much more advanced search interface. This is what I‚Äôm using at the moment.</p>

<p>I‚Äôve included both scripts below, but I commonly use the <code class="language-plaintext highlighter-rouge">Search Dashboard</code> one.</p>

<h3 id="new-search-dashboard-audio-files">New Search Dashboard Audio Files</h3>

<p>Filenames that match the <code class="language-plaintext highlighter-rouge">######.mp4</code> pattern and use the <code class="language-plaintext highlighter-rouge">/api/v2/audio/#####</code> endpoint.</p>

<details>

  <summary>[Shell script] BirdNET-Go Video Generator (New Search Dashboard)</summary>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="c"># version 1.0</span>

<span class="c"># Default values</span>
<span class="nv">duration</span><span class="o">=</span>15
<span class="nv">location</span><span class="o">=</span><span class="s2">"YOUR_OWN_LOCATION"</span>
<span class="nv">weather</span><span class="o">=</span><span class="s2">"Partly Cloudy"</span>
<span class="nv">input_file</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span><span class="nb">ls</span> <span class="nt">-t</span> ~/Downloads/<span class="k">*</span>.mp4 2&gt;/dev/null | <span class="nb">head</span> <span class="nt">-n</span> 1<span class="si">)</span><span class="s2">"</span>suppression
<span class="nv">boost_sound</span><span class="o">=</span><span class="nb">false
</span><span class="nv">species_override</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">subtitle</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">start_offset</span><span class="o">=</span><span class="s2">"0"</span> <span class="c"># Default start offset in seconds</span>
<span class="nv">api_detections_endpoint</span><span class="o">=</span><span class="s2">"http://YOUR_OWN_BIRDNET_ENDPOINT/api/v2/detections/"</span>

<span class="c"># === Dependency Check ===</span>
<span class="k">for </span>cmd <span class="k">in </span>curl jq ffmpeg <span class="nb">awk</span><span class="p">;</span> <span class="k">do
  if</span> <span class="o">!</span> <span class="nb">command</span> <span class="nt">-v</span> <span class="nv">$cmd</span> &amp;&gt; /dev/null<span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Required command '</span><span class="nv">$cmd</span><span class="s2">' not found. Please install it."</span>
    <span class="nb">exit </span>1
  <span class="k">fi
done</span>
<span class="c"># === END Dependency Check ===</span>

<span class="c"># === Temp Directory and Cleanup ===</span>
<span class="nv">TMPDIR</span><span class="o">=</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="nt">-d</span><span class="si">)</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to create temporary directory."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">trap</span> <span class="s1">'echo "DEBUG: Cleaning up temp dir: $TMPDIR"; rm -rf "$TMPDIR"'</span> EXIT
<span class="nb">echo</span> <span class="s2">"DEBUG: Created temp directory: </span><span class="nv">$TMPDIR</span><span class="s2">"</span>
<span class="c"># === END Temp Directory ===</span>

<span class="c"># Help function</span>
help_function<span class="o">()</span> <span class="o">{</span>
  <span class="nb">echo</span> <span class="s2">"Usage: </span><span class="nv">$0</span><span class="s2"> [options]"</span>
  <span class="nb">echo</span> <span class="s2">"Options:"</span>
  <span class="nb">echo</span> <span class="s2">"  -d &lt;duration&gt;       Duration of the video in seconds (default: 15)"</span>
  <span class="nb">echo</span> <span class="s2">"  -l &lt;location&gt;       Location (default: YOUR_OWN_LOCATION)"</span>
  <span class="nb">echo</span> <span class="s2">"  -w &lt;weather&gt;        Weather (default: Partly Cloudy)"</span>
  <span class="nb">echo</span> <span class="s2">"  -i &lt;input_file&gt;     Input audio/video file (default: newest .mp4 in ~/Downloads/)"</span>
  <span class="nb">echo</span> <span class="s2">"  -b &lt;boost_sound&gt;    Boost audio (true or false, default: false)"</span>
  <span class="nb">echo</span> <span class="s2">"  -s &lt;species_text&gt;   Override the species text displayed in the video"</span>
  <span class="nb">echo</span> <span class="s2">"  -u &lt;subtitle&gt;       Optional subtitle text below species name"</span>
  <span class="nb">echo</span> <span class="s2">"  -m &lt;start_offset&gt;   Start the clip at this many seconds into the input file (default: 0)"</span>
  <span class="nb">echo</span> <span class="s2">"  --help              Display this help message"</span>
  <span class="nb">exit </span>0
<span class="o">}</span>

<span class="c"># Parse command-line arguments</span>
<span class="k">while </span><span class="nb">getopts</span> <span class="s2">"d:l:w:i:b:s:u:m:"</span> opt<span class="p">;</span> <span class="k">do
  case</span> <span class="s2">"</span><span class="nv">$opt</span><span class="s2">"</span> <span class="k">in
  </span>d<span class="p">)</span> <span class="nv">duration</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  l<span class="p">)</span> <span class="nv">location</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  w<span class="p">)</span> <span class="nv">weather</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  i<span class="p">)</span> <span class="nv">input_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  b<span class="p">)</span> <span class="nv">boost_sound</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  s<span class="p">)</span> <span class="nv">species_override</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  u<span class="p">)</span> <span class="nv">subtitle</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  m<span class="p">)</span> <span class="nv">start_offset</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  <span class="se">\?</span><span class="p">|</span>: <span class="p">|</span> <span class="k">*</span><span class="p">)</span> help_function <span class="p">;;</span>
  <span class="k">esac</span>
<span class="k">done
</span><span class="nb">shift</span> <span class="k">$((</span>OPTIND <span class="o">-</span> <span class="m">1</span><span class="k">))</span>

<span class="c"># Validate start_offset</span>
<span class="k">if</span> <span class="o">!</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$start_offset</span><span class="s2">"</span> <span class="o">=</span>~ ^[0-9]+<span class="o">([</span>.][0-9]+<span class="o">)</span>?<span class="nv">$ </span><span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Invalid start offset '</span><span class="nv">$start_offset</span><span class="s2">'. Must be a non-negative number."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">echo</span> <span class="s2">"DEBUG: Start offset set to: </span><span class="nv">$start_offset</span><span class="s2"> seconds"</span>

<span class="c"># --- Input File and API Data Processing ---</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"Error: No input file specified and couldn't find a default .mp4 file in ~/Downloads/."</span>
    <span class="nb">exit </span>1
<span class="k">fi
if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"Error: Input file '</span><span class="nv">$input_file</span><span class="s2">' not found."</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi

</span><span class="nv">filename</span><span class="o">=</span><span class="si">$(</span><span class="nb">basename</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span><span class="si">)</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Processing filename: </span><span class="nv">$filename</span><span class="s2">"</span>
<span class="nv">file_id</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">filename</span><span class="p">%.*</span><span class="k">}</span><span class="s2">"</span> <span class="c"># Get filename without extension</span>

<span class="k">if</span> <span class="o">!</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$file_id</span><span class="s2">"</span> <span class="o">=</span>~ ^[0-9]+<span class="nv">$ </span><span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Filename (without extension) '</span><span class="nv">$file_id</span><span class="s2">' is not a valid numeric ID."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">echo</span> <span class="s2">"DEBUG: Extracted File ID: </span><span class="nv">$file_id</span><span class="s2">"</span>

<span class="nv">API_URL</span><span class="o">=</span><span class="s2">"</span><span class="nv">$api_detections_endpoint$file_id</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Fetching data from API: </span><span class="nv">$API_URL</span><span class="s2">"</span>

<span class="nv">api_response</span><span class="o">=</span><span class="si">$(</span>curl <span class="nt">-s</span> <span class="nt">-L</span> <span class="s2">"</span><span class="nv">$API_URL</span><span class="s2">"</span><span class="si">)</span> <span class="c"># -L to follow redirects</span>
<span class="nv">curl_exit_status</span><span class="o">=</span><span class="nv">$?</span>

<span class="k">if</span> <span class="o">[</span> <span class="nv">$curl_exit_status</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: curl command failed with exit status </span><span class="nv">$curl_exit_status</span><span class="s2"> when fetching data for ID </span><span class="nv">$file_id</span><span class="s2">."</span>
    <span class="nb">exit </span>1
<span class="k">fi

if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$api_response</span><span class="s2">"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">"</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$api_response</span><span class="s2">"</span> | jq <span class="s1">'.id'</span><span class="si">)</span><span class="s2">"</span> <span class="o">=</span> <span class="s2">"null"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: API did not return valid data for ID </span><span class="nv">$file_id</span><span class="s2">. Response: </span><span class="nv">$api_response</span><span class="s2">"</span>
    <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="c"># Extract data using jq</span>
<span class="nv">api_common_name</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$api_response</span><span class="s2">"</span> | jq <span class="nt">-r</span> <span class="s1">'.commonName'</span><span class="si">)</span>
<span class="nv">api_begin_time</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$api_response</span><span class="s2">"</span> | jq <span class="nt">-r</span> <span class="s1">'.beginTime'</span><span class="si">)</span>
<span class="nv">api_confidence_float</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$api_response</span><span class="s2">"</span> | jq <span class="nt">-r</span> <span class="s1">'.confidence'</span><span class="si">)</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$api_common_name</span><span class="s2">"</span> <span class="o">=</span> <span class="s2">"null"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$api_common_name</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Could not extract commonName from API response."</span>
    <span class="nb">exit </span>1
<span class="k">fi
if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$api_begin_time</span><span class="s2">"</span> <span class="o">=</span> <span class="s2">"null"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$api_begin_time</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Could not extract beginTime from API response."</span>
    <span class="nb">exit </span>1
<span class="k">fi
if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$api_confidence_float</span><span class="s2">"</span> <span class="o">=</span> <span class="s2">"null"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$api_confidence_float</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Could not extract confidence from API response."</span>
    <span class="nb">exit </span>1
<span class="k">fi

</span><span class="nb">echo</span> <span class="s2">"DEBUG: API Common Name: </span><span class="nv">$api_common_name</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: API Begin Time: </span><span class="nv">$api_begin_time</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: API Confidence (float): </span><span class="nv">$api_confidence_float</span><span class="s2">"</span>

<span class="c"># Format timestamp (e.g., YYYY-MM-DDTHH:MM:SS-04:00 -&gt; YYYY-MM-DD HH:MM:SS)</span>
<span class="nv">timestamp</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$api_begin_time</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/T/ /; s/\([-+][0-9][0-9]:[0-9][0-9]Z\{0,1\}\)$//'</span><span class="si">)</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$timestamp</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to format timestamp from API beginTime '</span><span class="nv">$api_begin_time</span><span class="s2">'."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">echo</span> <span class="s2">"DEBUG: Formatted Timestamp: </span><span class="nv">$timestamp</span><span class="s2">"</span>

<span class="c"># Format confidence (e.g., 0.96 -&gt; 96% Confidence)</span>
<span class="nv">confidence_percentage</span><span class="o">=</span><span class="si">$(</span><span class="nb">awk</span> <span class="nt">-v</span> <span class="nv">conf</span><span class="o">=</span><span class="s2">"</span><span class="nv">$api_confidence_float</span><span class="s2">"</span> <span class="s1">'BEGIN { printf "%.0f", conf * 100 }'</span><span class="si">)</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$confidence_percentage</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to calculate confidence percentage from '</span><span class="nv">$api_confidence_float</span><span class="s2">'."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nv">confidence_text_unescaped</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">confidence_percentage</span><span class="k">}</span><span class="s2">% Confidence"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Confidence Text (unescaped): </span><span class="nv">$confidence_text_unescaped</span><span class="s2">"</span>
<span class="c"># --- End API Data Processing ---</span>

<span class="c"># Determine final species text</span>
<span class="nv">species_from_api</span><span class="o">=</span><span class="s2">"</span><span class="nv">$api_common_name</span><span class="s2">"</span> <span class="c"># Use common name from API</span>

<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$species_override</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"INFO: Using species override text: '</span><span class="nv">$species_override</span><span class="s2">'"</span>
  <span class="nv">final_species_text</span><span class="o">=</span><span class="s2">"</span><span class="nv">$species_override</span><span class="s2">"</span>
<span class="k">else
  </span><span class="nb">echo</span> <span class="s2">"INFO: Using API-derived species text: '</span><span class="nv">$species_from_api</span><span class="s2">'"</span>
  <span class="nv">final_species_text</span><span class="o">=</span><span class="s2">"</span><span class="nv">$species_from_api</span><span class="s2">"</span>
<span class="k">fi
if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Species text is empty."</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi</span>

<span class="c"># Prepare other display text (unescaped) for textfile method</span>
<span class="nv">timestamp_display</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$timestamp</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/Z//g'</span><span class="si">)</span>
<span class="nv">weather_display</span><span class="o">=</span><span class="s2">"Weather: </span><span class="nv">$weather</span><span class="s2">"</span>

<span class="c"># --- Write text to temporary files (Using \% escape for files) ---</span>
<span class="nv">species_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/species.txt"</span>
<span class="nv">subtitle_file_path</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">confidence_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/confidence.txt"</span>
<span class="nv">location_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/location.txt"</span>
<span class="nv">timestamp_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/timestamp.txt"</span>
<span class="nv">weather_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/weather.txt"</span>

<span class="nb">echo</span> <span class="s2">"DEBUG: Writing text to temp files..."</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$species_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$location</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$location_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$timestamp_display</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$timestamp_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$weather_display</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$weather_file</span><span class="s2">"</span>

<span class="nv">confidence_text_for_file</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$confidence_text_unescaped</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/%/\\%/g'</span><span class="si">)</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$confidence_text_for_file</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$confidence_file</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Confidence text written to </span><span class="nv">$confidence_file</span><span class="s2"> (using </span><span class="se">\%</span><span class="s2"> escape)"</span>

<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nv">subtitle_file_path</span><span class="o">=</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/subtitle_XXXXXX.txt"</span><span class="si">)</span>
    <span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$subtitle_file_path</span><span class="s2">"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-w</span> <span class="s2">"</span><span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$subtitle_file_path</span><span class="s2">"</span><span class="si">)</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to create subtitle temp file in </span><span class="nv">$TMPDIR</span><span class="s2">."</span>
        <span class="nv">subtitle_file_path</span><span class="o">=</span><span class="s2">""</span>
    <span class="k">else
        </span><span class="nv">subtitle_text_for_file</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$subtitle</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/%/\\%/g'</span><span class="si">)</span>
        <span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$subtitle_text_for_file</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$subtitle_file_path</span><span class="s2">"</span>
        <span class="nb">echo</span> <span class="s2">"DEBUG: Subtitle text written to </span><span class="nv">$subtitle_file_path</span><span class="s2"> (using </span><span class="se">\%</span><span class="s2"> escape)"</span>
    <span class="k">fi
fi</span>
<span class="c"># --- End Write text ---</span>


<span class="c"># &lt;&lt;&lt; Calculate Y Positions &gt;&gt;&gt;</span>
<span class="nv">y_offset_species</span><span class="o">=</span><span class="nt">-200</span><span class="p">;</span> <span class="nv">y_offset_confidence</span><span class="o">=</span><span class="nt">-115</span><span class="p">;</span> <span class="nv">y_offset_location</span><span class="o">=</span><span class="nt">-35</span><span class="p">;</span> <span class="nv">y_offset_timestamp</span><span class="o">=</span>45<span class="p">;</span> <span class="nv">y_offset_weather</span><span class="o">=</span>125<span class="p">;</span> <span class="nv">line_spacing</span><span class="o">=</span>85
calc_y_pos<span class="o">()</span> <span class="o">{</span> <span class="nb">local </span><span class="nv">offset</span><span class="o">=</span><span class="nv">$1</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"(h/2)-text_h/2+(</span><span class="nv">$offset</span><span class="s2">)"</span><span class="p">;</span> <span class="o">}</span>
<span class="nv">y_pos_species</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_species</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_confidence</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_confidence</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_location</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_location</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_timestamp</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_timestamp</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_weather</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_weather</span><span class="si">)</span>
<span class="nv">y_pos_subtitle</span><span class="o">=</span><span class="s2">""</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle_file_path</span><span class="s2">"</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then
    </span><span class="nv">y_pos_subtitle</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_species <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_confidence</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_confidence <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_location</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_location <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_timestamp</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_timestamp <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_weather</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_weather <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
<span class="k">fi</span>
<span class="c"># &lt;&lt;&lt; END Calculate Y Positions &gt;&gt;&gt;</span>


<span class="c"># &lt;&lt;&lt; Build Filter Complex using textfile= for ALL lines &gt;&gt;&gt;</span>
<span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="se">\</span><span class="s2">
[0:v]drawtext=textfile='</span><span class="nv">$species_file</span><span class="s2">':fontcolor=white:fontsize=72:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_species</span><span class="k">}</span><span class="s2">"</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle_file_path</span><span class="s2">"</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then
    </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$subtitle_file_path</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_subtitle</span><span class="k">}</span><span class="s2">"</span>
<span class="k">fi
</span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$confidence_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_confidence</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$location_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_location</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$timestamp_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_timestamp</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$weather_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_weather</span><span class="k">}</span><span class="s2">[v]"</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$boost_sound</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">;[1:a]volume=15dB,compand=attacks=0:points=-80/-80|-12/-10|0/-2|20/25[a]"</span><span class="p">;</span> <span class="k">else </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">;[1:a]anull[a]"</span><span class="p">;</span> <span class="k">fi</span>
<span class="c"># &lt;&lt;&lt; END Build Filter Complex &gt;&gt;&gt;</span>


<span class="c"># ============================================================</span>
<span class="c"># --- Construct the output path ---</span>
<span class="nv">input_dir</span><span class="o">=</span><span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span><span class="si">)</span>
<span class="nv">filename_species_part</span><span class="o">=</span><span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span>
<span class="nv">safe_species_name</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$filename_species_part</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/[^a-zA-Z0-9_ -]//g'</span> | <span class="nb">tr</span> <span class="s1">' '</span> <span class="s1">'_'</span><span class="si">)</span>
<span class="nv">timestamp_filename</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$timestamp</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/ /_/g; s/:/-/g'</span><span class="si">)</span>
<span class="nv">output_filename_base</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">timestamp_filename</span><span class="k">}</span><span class="s2">_</span><span class="k">${</span><span class="nv">safe_species_name</span><span class="k">}</span><span class="s2">.mp4"</span>
<span class="nv">output_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$input_dir</span><span class="s2">/</span><span class="nv">$output_filename_base</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"INFO: Output file path: </span><span class="nv">$output_file</span><span class="s2">"</span>
<span class="c"># ============================================================</span>

<span class="c"># Construct the ffmpeg command string for eval</span>
<span class="nv">ffmpeg_input_options</span><span class="o">=</span><span class="s2">""</span>
<span class="c"># Check if start_offset is greater than 0 using awk for float comparison</span>
<span class="nv">is_offset_positive</span><span class="o">=</span><span class="si">$(</span><span class="nb">awk</span> <span class="nt">-v</span> <span class="nv">offset</span><span class="o">=</span><span class="s2">"</span><span class="nv">$start_offset</span><span class="s2">"</span> <span class="s1">'BEGIN { print (offset &gt; 0) }'</span><span class="si">)</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$is_offset_positive</span><span class="s2">"</span> <span class="nt">-eq</span> 1 <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nv">ffmpeg_input_options</span><span class="o">=</span><span class="s2">"-ss </span><span class="nv">$start_offset</span><span class="s2">"</span>
  <span class="nb">echo</span> <span class="s2">"INFO: Applying start offset of </span><span class="nv">$start_offset</span><span class="s2"> seconds to input file."</span>
<span class="k">fi

</span><span class="nv">ffmpeg_command</span><span class="o">=</span><span class="s2">"ffmpeg -f lavfi -i </span><span class="se">\"</span><span class="s2">color=c=black:s=1280x700</span><span class="se">\"</span><span class="s2"> </span><span class="nv">$ffmpeg_input_options</span><span class="s2"> -i </span><span class="se">\"</span><span class="nv">$input_file</span><span class="se">\"</span><span class="s2"> </span><span class="se">\</span><span class="s2">
-filter_complex </span><span class="se">\"</span><span class="nv">$filter_complex</span><span class="se">\"</span><span class="s2"> </span><span class="se">\</span><span class="s2">
-map </span><span class="se">\"</span><span class="s2">[v]</span><span class="se">\"</span><span class="s2"> -map </span><span class="se">\"</span><span class="s2">[a]</span><span class="se">\"</span><span class="s2"> -c:v libx264 -c:a aac -t </span><span class="nv">$duration</span><span class="s2"> -y </span><span class="se">\"</span><span class="nv">$output_file</span><span class="se">\"</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: FFmpeg command string built for eval: </span><span class="nv">$ffmpeg_command</span><span class="s2">"</span>

<span class="c"># Execute the command using eval</span>
<span class="nb">echo</span> <span class="s2">"INFO: Executing ffmpeg command..."</span>
<span class="nb">eval</span> <span class="s2">"</span><span class="nv">$ffmpeg_command</span><span class="s2">"</span>

<span class="nv">exit_status</span><span class="o">=</span><span class="nv">$?</span>
<span class="k">if</span> <span class="o">[</span> <span class="nv">$exit_status</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: ffmpeg command failed with exit status </span><span class="nv">$exit_status</span><span class="s2">"</span>
    <span class="nb">exit</span> <span class="nv">$exit_status</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"SUCCESS: Successfully created video: </span><span class="nv">$output_file</span><span class="s2">"</span>
<span class="k">fi

</span><span class="nb">exit </span>0
</code></pre></div>  </div>

</details>

<h3 id="legacy-search-dashboard-audio-files">Legacy Search Dashboard Audio Files</h3>

<p>Filenames that match the <code class="language-plaintext highlighter-rouge">&lt;scientific_name&gt;_&lt;confidence&gt;_&lt;timestamp&gt;.&lt;original_extension&gt;</code> pattern and use the <code class="language-plaintext highlighter-rouge">/api/v1/media/audio</code> endpoint.</p>

<blockquote>
  <p>This script requires a matching labels file in the same directory as the script. The labels file is used to translate the scientific name to a common name. Download the labels file from the <a href="https://github.com/birdnet-team/BirdNET-Analyzer/tree/v2.0.0/birdnet_analyzer/labels/V2.4">BirdNET-Go repository</a>.</p>

  <p>Or download their <code class="language-plaintext highlighter-rouge">BirdNET_GLOBAL_6K_V2.4_Labels_en_us.txt</code> file <a href="/assets/files/2025/05/BirdNET_GLOBAL_6K_V2.4_Labels_us_us.txt">here</a>.</p>
</blockquote>

<details>

  <summary>[Shell script] BirdNET-Go Video Generator (Legacy Search)</summary>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="c"># version 1.0</span>

<span class="c"># Default values</span>
<span class="nv">duration</span><span class="o">=</span>15
<span class="nv">location</span><span class="o">=</span><span class="s2">"Jenison, MI"</span>
<span class="nv">weather</span><span class="o">=</span><span class="s2">"Partly Cloudy"</span>
<span class="nv">input_file</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span><span class="nb">ls</span> <span class="nt">-t</span> ~/Downloads/<span class="k">*</span>.m4a | <span class="nb">head</span> <span class="nt">-n</span> 1<span class="si">)</span><span class="s2">"</span> <span class="c"># The default input file grabs the newest .m4a file in your Downloads folder</span>
<span class="nv">boost_sound</span><span class="o">=</span><span class="nb">false
</span><span class="nv">label_filename</span><span class="o">=</span><span class="s2">"BirdNET_GLOBAL_6K_V2.4_Labels_us_us.txt"</span> <span class="c"># Base filename</span>
<span class="nv">species_override</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">subtitle</span><span class="o">=</span><span class="s2">""</span>
<span class="nv">start_offset</span><span class="o">=</span><span class="s2">"0"</span> <span class="c"># Default start offset in seconds</span>

<span class="c"># === Dependency Check ===</span>
<span class="k">for </span>cmd <span class="k">in </span>curl jq ffmpeg <span class="nb">awk</span><span class="p">;</span> <span class="k">do
  if</span> <span class="o">!</span> <span class="nb">command</span> <span class="nt">-v</span> <span class="nv">$cmd</span> &amp;&gt; /dev/null<span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Required command '</span><span class="nv">$cmd</span><span class="s2">' not found. Please install it."</span>
    <span class="nb">exit </span>1
  <span class="k">fi
done</span>
<span class="c"># === END Dependency Check ===</span>

<span class="c"># === Temp Directory and Cleanup ===</span>
<span class="nv">TMPDIR</span><span class="o">=</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="nt">-d</span><span class="si">)</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to create temporary directory."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">trap</span> <span class="s1">'echo "DEBUG: Cleaning up temp dir: $TMPDIR"; rm -rf "$TMPDIR"'</span> EXIT
<span class="nb">echo</span> <span class="s2">"DEBUG: Created temp directory: </span><span class="nv">$TMPDIR</span><span class="s2">"</span>
<span class="c"># === END Temp Directory ===</span>


<span class="c"># Determine script directory and build full label file path</span>
<span class="nv">SCRIPT_DIR</span><span class="o">=</span><span class="si">$(</span> <span class="nb">cd</span> <span class="nt">--</span> <span class="s2">"</span><span class="si">$(</span> <span class="nb">dirname</span> <span class="nt">--</span> <span class="s2">"</span><span class="k">${</span><span class="nv">BASH_SOURCE</span><span class="p">[0]</span><span class="k">}</span><span class="s2">"</span> <span class="si">)</span><span class="s2">"</span> &amp;&gt; /dev/null <span class="o">&amp;&amp;</span> <span class="nb">pwd</span> <span class="si">)</span>
<span class="nv">label_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$SCRIPT_DIR</span><span class="s2">/</span><span class="nv">$label_filename</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Using label file path: </span><span class="nv">$label_file</span><span class="s2">"</span>


<span class="c"># Help function</span>
help_function<span class="o">()</span> <span class="o">{</span>
  <span class="nb">echo</span> <span class="s2">"Usage: </span><span class="nv">$0</span><span class="s2"> [options]"</span>
  <span class="nb">echo</span> <span class="s2">"Options:"</span>
  <span class="nb">echo</span> <span class="s2">"  -d &lt;duration&gt;      Duration of the video in seconds (default: 15)"</span>
  <span class="nb">echo</span> <span class="s2">"  -l &lt;location&gt;      Location (default: Jenison, MI)"</span>
  <span class="nb">echo</span> <span class="s2">"  -w &lt;weather&gt;       Weather (default: Partly Cloudy)"</span>
  <span class="nb">echo</span> <span class="s2">"  -i &lt;input_file&gt;    Input audio file (default: newest .m4a in ~/Downloads/)"</span>
  <span class="nb">echo</span> <span class="s2">"  -b &lt;boost_sound&gt;   Boost audio (true or false, default: false)"</span>
  <span class="nb">echo</span> <span class="s2">"  -s &lt;species_text&gt;  Override the species text displayed in the video"</span>
  <span class="nb">echo</span> <span class="s2">"  -m &lt;start_offset&gt;  Start the clip at this many seconds into the input file (default: 0)"</span>
  <span class="nb">echo</span> <span class="s2">"  -u &lt;subtitle&gt;      Optional subtitle text below species name"</span>
  <span class="nb">echo</span> <span class="s2">"  --help             Display this help message"</span>
  <span class="nb">exit </span>0
<span class="o">}</span>

<span class="c"># Parse command-line arguments</span>
<span class="k">while </span><span class="nb">getopts</span> <span class="s2">"d:l:w:i:b:s:u:m:"</span> opt<span class="p">;</span> <span class="k">do
  case</span> <span class="s2">"</span><span class="nv">$opt</span><span class="s2">"</span> <span class="k">in
  </span>d<span class="p">)</span> <span class="nv">duration</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  l<span class="p">)</span> <span class="nv">location</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  w<span class="p">)</span> <span class="nv">weather</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  i<span class="p">)</span> <span class="nv">input_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  b<span class="p">)</span> <span class="nv">boost_sound</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  s<span class="p">)</span> <span class="nv">species_override</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  u<span class="p">)</span> <span class="nv">subtitle</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  m<span class="p">)</span> <span class="nv">start_offset</span><span class="o">=</span><span class="s2">"</span><span class="nv">$OPTARG</span><span class="s2">"</span> <span class="p">;;</span>
  <span class="se">\?</span><span class="p">|</span>: <span class="p">|</span> <span class="k">*</span><span class="p">)</span> help_function <span class="p">;;</span>
  <span class="k">esac</span>
<span class="k">done
</span><span class="nb">shift</span> <span class="k">$((</span>OPTIND <span class="o">-</span> <span class="m">1</span><span class="k">))</span>

<span class="c"># Validate start_offset</span>
<span class="k">if</span> <span class="o">!</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$start_offset</span><span class="s2">"</span> <span class="o">=</span>~ ^[0-9]+<span class="o">([</span>.][0-9]+<span class="o">)</span>?<span class="nv">$ </span><span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"ERROR: Invalid start offset '</span><span class="nv">$start_offset</span><span class="s2">'. Must be a non-negative number."</span>
    <span class="nb">exit </span>1
<span class="k">fi
</span><span class="nb">echo</span> <span class="s2">"DEBUG: Start offset set to: </span><span class="nv">$start_offset</span><span class="s2"> seconds"</span>

<span class="c"># --- Filename Processing &amp; Extraction ---</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"Error: Input file '</span><span class="nv">$input_file</span><span class="s2">' not found."</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi
</span><span class="nv">filename</span><span class="o">=</span><span class="si">$(</span><span class="nb">basename</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span><span class="si">)</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"Filename: </span><span class="nv">$filename</span><span class="s2">"</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$filename</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Could not get basename from '</span><span class="nv">$input_file</span><span class="s2">'"</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi
</span><span class="nv">filename_parts</span><span class="o">=(</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$filename</span><span class="s2">"</span> | <span class="nb">tr</span> <span class="s1">'_'</span> <span class="s1">'\n'</span><span class="si">)</span><span class="o">)</span><span class="p">;</span> <span class="k">if</span> <span class="o">[</span> <span class="k">${#</span><span class="nv">filename_parts</span><span class="p">[@]</span><span class="k">}</span> <span class="nt">-lt</span> 2 <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Not enough parts in filename '</span><span class="nv">$filename</span><span class="s2">'"</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi

</span><span class="nv">timestamp_with_extension</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">filename_parts</span><span class="p">[</span><span class="k">$((${#</span><span class="nv">filename_parts</span><span class="p">[@]</span><span class="k">}</span> <span class="o">-</span> <span class="m">1</span><span class="k">))</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span><span class="p">;</span> <span class="nv">timestamp_raw</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">timestamp_with_extension</span><span class="p">%.*</span><span class="k">}</span><span class="s2">"</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$timestamp_raw</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Could not extract raw timestamp"</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi
</span><span class="nb">echo</span> <span class="s2">"Timestamp raw: </span><span class="nv">$timestamp_raw</span><span class="s2">"</span><span class="p">;</span> <span class="nv">timestamp</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$timestamp_raw</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/T/ /g'</span> | <span class="nb">sed</span> <span class="s1">'s/\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\) \([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)/\1-\2-\3 \4:\5:\6/'</span><span class="si">)</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"Timestamp: </span><span class="nv">$timestamp</span><span class="s2">"</span>

<span class="nv">first_part</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">filename_parts</span><span class="p">[0]</span><span class="k">}</span><span class="s2">"</span><span class="p">;</span> <span class="nv">num_parts</span><span class="o">=</span><span class="k">${#</span><span class="nv">filename_parts</span><span class="p">[@]</span><span class="k">}</span><span class="p">;</span> <span class="nv">confidence_index</span><span class="o">=</span><span class="k">$((</span>num_parts <span class="o">-</span> <span class="m">2</span><span class="k">))</span>
<span class="k">if</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$first_part</span><span class="s2">"</span> <span class="o">=</span>~ ^[0-9]<span class="o">{</span>4<span class="o">}</span><span class="nv">$ </span><span class="o">&amp;&amp;</span> <span class="nv">$num_parts</span> <span class="nt">-ge</span> 6 <span class="o">]]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"DEBUG: Detected SCRIPTDIR/_MM_ format."</span><span class="p">;</span> <span class="nv">start_index</span><span class="o">=</span>2<span class="p">;</span> <span class="nv">length</span><span class="o">=</span><span class="k">$((</span>confidence_index <span class="o">-</span> start_index<span class="k">))</span><span class="p">;</span> <span class="k">else </span><span class="nb">echo</span> <span class="s2">"DEBUG: Assuming direct Genus_species_ format."</span><span class="p">;</span> <span class="nv">start_index</span><span class="o">=</span>0<span class="p">;</span> <span class="nv">length</span><span class="o">=</span><span class="k">$((</span>confidence_index <span class="o">-</span> start_index<span class="k">))</span><span class="p">;</span> <span class="k">fi
if</span> <span class="o">[[</span> <span class="nv">$length</span> <span class="nt">-lt</span> 1 <span class="o">]]</span><span class="p">;</span> <span class="k">then </span><span class="nv">scientific_name_parts</span><span class="o">=()</span><span class="p">;</span> <span class="k">else </span><span class="nv">scientific_name_parts</span><span class="o">=(</span><span class="s2">"</span><span class="k">${</span><span class="nv">filename_parts</span><span class="p">[@]</span>:<span class="nv">$start_index</span>:<span class="nv">$length</span><span class="k">}</span><span class="s2">"</span><span class="o">)</span><span class="p">;</span> <span class="k">fi
if</span> <span class="o">[</span> <span class="k">${#</span><span class="nv">scientific_name_parts</span><span class="p">[@]</span><span class="k">}</span> <span class="nt">-eq</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to extract scientific name parts."</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi
</span><span class="nv">scientific_name_underscores</span><span class="o">=</span><span class="si">$(</span><span class="nv">IFS</span><span class="o">=</span><span class="s1">'_'</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">scientific_name_parts</span><span class="p">[*]</span><span class="k">}</span><span class="s2">"</span><span class="si">)</span>
<span class="nv">scientific_name</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$scientific_name_underscores</span><span class="s2">"</span> | <span class="nb">tr</span> <span class="s1">'_'</span> <span class="s1">' '</span><span class="si">)</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"Scientific name (underscores): </span><span class="nv">$scientific_name_underscores</span><span class="s2">"</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"Scientific name (spaces): </span><span class="nv">$scientific_name</span><span class="s2">"</span>

<span class="c"># Get numeric confidence and prepare UNESCAPED display string</span>
<span class="nv">confidence_part</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">filename_parts</span><span class="p">[</span><span class="nv">$confidence_index</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span><span class="p">;</span> <span class="nv">confidence_num_str</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$confidence_part</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/p//gi'</span> 2&gt;/dev/null<span class="si">)</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$confidence_num_str</span><span class="s2">"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">!</span> <span class="o">[[</span> <span class="s2">"</span><span class="nv">$confidence_num_str</span><span class="s2">"</span> <span class="o">=</span>~ ^[0-9]+<span class="o">(</span><span class="se">\.</span><span class="o">[</span>0-9]+<span class="o">)</span>?<span class="nv">$ </span><span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"Warning: Confidence value '</span><span class="nv">$confidence_part</span><span class="s2">' invalid. Setting Unknown."</span>
    <span class="nv">confidence_text_unescaped</span><span class="o">=</span><span class="s2">"Unknown confidence"</span>
<span class="k">else
    </span><span class="nv">confidence_text_unescaped</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">confidence_num_str</span><span class="k">}</span><span class="s2">% Confidence"</span> <span class="c"># Literal text with single %</span>
<span class="k">fi</span><span class="p">;</span>
<span class="nb">echo</span> <span class="s2">"Confidence Text (unescaped): </span><span class="nv">$confidence_text_unescaped</span><span class="s2">"</span>
<span class="c"># --- End Filename Processing ---</span>


<span class="c"># Function to get common name from labels file</span>
get_common_name<span class="o">()</span> <span class="o">{</span>
  <span class="nb">local </span><span class="nv">scientific_name_key</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>
  <span class="nb">echo</span> <span class="s2">"Starting get_common_name with scientific name key: </span><span class="nv">$scientific_name_key</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2
  <span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-r</span> <span class="s2">"</span><span class="nv">$label_file</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"Warning: Label file '</span><span class="nv">$label_file</span><span class="s2">' not found or not readable."</span> <span class="o">&gt;</span>&amp;2<span class="p">;</span> <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$scientific_name</span><span class="s2">"</span><span class="p">;</span> <span class="k">return</span><span class="p">;</span> <span class="k">fi
  </span><span class="nb">local </span><span class="nv">common_name</span><span class="o">=</span><span class="si">$(</span><span class="nb">grep</span> <span class="nt">-i</span> <span class="s2">"^</span><span class="k">${</span><span class="nv">scientific_name_key</span><span class="k">}</span><span class="s2">_"</span> <span class="s2">"</span><span class="nv">$label_file</span><span class="s2">"</span> | <span class="nb">head</span> <span class="nt">-n</span> 1 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s1">'_'</span> <span class="nt">-f</span> 2<span class="si">)</span>
  <span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$common_name</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"Match found: </span><span class="nv">$common_name</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2<span class="p">;</span> <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$common_name</span><span class="s2">"</span><span class="p">;</span> <span class="k">else </span><span class="nb">echo</span> <span class="s2">"Species not found for key '</span><span class="nv">$scientific_name_key</span><span class="s2">'"</span> <span class="o">&gt;</span>&amp;2<span class="p">;</span> <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$scientific_name</span><span class="s2">"</span><span class="p">;</span> <span class="k">fi</span>
<span class="o">}</span>

<span class="c"># Get common name</span>
<span class="nv">species</span><span class="o">=</span><span class="si">$(</span>get_common_name <span class="s2">"</span><span class="nv">$scientific_name</span><span class="s2">"</span><span class="si">)</span>
<span class="nb">echo</span> <span class="s2">"Species determined from file/lookup: </span><span class="nv">$species</span><span class="s2">"</span>

<span class="c"># Determine final species text</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$species_override</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"INFO: Using species override text: '</span><span class="nv">$species_override</span><span class="s2">'"</span>
  <span class="nv">final_species_text</span><span class="o">=</span><span class="s2">"</span><span class="nv">$species_override</span><span class="s2">"</span>
<span class="k">else
  </span><span class="nb">echo</span> <span class="s2">"INFO: Using determined/fallback species text: '</span><span class="nv">$species</span><span class="s2">'"</span>
  <span class="nv">final_species_text</span><span class="o">=</span><span class="s2">"</span><span class="nv">$species</span><span class="s2">"</span>
<span class="k">fi
if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nb">echo</span> <span class="s2">"ERROR: Species text is empty."</span><span class="p">;</span> <span class="nb">exit </span>1<span class="p">;</span> <span class="k">fi</span>

<span class="c"># Prepare other display text (unescaped) for textfile method</span>
<span class="nv">timestamp_display</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$timestamp</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/Z//g'</span><span class="si">)</span>
<span class="nv">weather_display</span><span class="o">=</span><span class="s2">"Weather: </span><span class="nv">$weather</span><span class="s2">"</span>

<span class="c"># --- Write text to temporary files (Using \% escape for files) ---</span>
<span class="nv">species_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/species.txt"</span>
<span class="nv">subtitle_file</span><span class="o">=</span><span class="s2">""</span> <span class="c"># Initialize</span>
<span class="nv">confidence_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/confidence.txt"</span>
<span class="nv">location_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/location.txt"</span>
<span class="nv">timestamp_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/timestamp.txt"</span>
<span class="nv">weather_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/weather.txt"</span>

<span class="nb">echo</span> <span class="s2">"DEBUG: Writing text to temp files..."</span>
<span class="c"># Species, Location, Timestamp, Weather written as is (apostrophes are OK here)</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$species_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$location</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$location_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$timestamp_display</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$timestamp_file</span><span class="s2">"</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$weather_display</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$weather_file</span><span class="s2">"</span>

<span class="c"># Replace single % with literal backslash + %</span>
<span class="nv">confidence_text_for_file</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$confidence_text_unescaped</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/%/\\%/g'</span><span class="si">)</span>
<span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$confidence_text_for_file</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$confidence_file</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"DEBUG: Confidence text written to </span><span class="nv">$confidence_file</span><span class="s2"> (using </span><span class="se">\%</span><span class="s2"> escape)"</span>

<span class="c"># Conditionally create subtitle file</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nv">subtitle_file</span><span class="o">=</span><span class="si">$(</span><span class="nb">mktemp</span> <span class="s2">"</span><span class="nv">$TMPDIR</span><span class="s2">/subtitle_XXXXXX.txt"</span><span class="si">)</span>
    <span class="k">if</span> <span class="o">[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$subtitle_file</span><span class="s2">"</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-w</span> <span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$subtitle_file</span><span class="s2">"</span><span class="si">)</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
         </span><span class="nb">echo</span> <span class="s2">"ERROR: Failed to create subtitle temp file in </span><span class="nv">$TMPDIR</span><span class="s2">."</span>
         <span class="nv">subtitle_file</span><span class="o">=</span><span class="s2">""</span>
    <span class="k">else
        </span><span class="nv">subtitle_text_for_file</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$subtitle</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/%/\\%/g'</span><span class="si">)</span> <span class="c"># Use \%</span>
        <span class="nb">printf</span> <span class="s2">"%s"</span> <span class="s2">"</span><span class="nv">$subtitle_text_for_file</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$subtitle_file</span><span class="s2">"</span>
        <span class="nb">echo</span> <span class="s2">"DEBUG: Subtitle text written to </span><span class="nv">$subtitle_file</span><span class="s2"> (using </span><span class="se">\%</span><span class="s2"> escape)"</span>
    <span class="k">fi
fi</span>
<span class="c"># --- End Write text ---</span>


<span class="c"># &lt;&lt;&lt; Calculate Y Positions &gt;&gt;&gt;</span>
<span class="nv">y_offset_species</span><span class="o">=</span><span class="nt">-200</span><span class="p">;</span> <span class="nv">y_offset_confidence</span><span class="o">=</span><span class="nt">-115</span><span class="p">;</span> <span class="nv">y_offset_location</span><span class="o">=</span><span class="nt">-35</span><span class="p">;</span> <span class="nv">y_offset_timestamp</span><span class="o">=</span>45<span class="p">;</span> <span class="nv">y_offset_weather</span><span class="o">=</span>125<span class="p">;</span> <span class="nv">line_spacing</span><span class="o">=</span>85
calc_y_pos<span class="o">()</span> <span class="o">{</span> <span class="nb">local </span><span class="nv">offset</span><span class="o">=</span><span class="nv">$1</span><span class="p">;</span> <span class="nb">echo</span> <span class="s2">"(h/2)-text_h/2+(</span><span class="nv">$offset</span><span class="s2">)"</span><span class="p">;</span> <span class="o">}</span>
<span class="nv">y_pos_species</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_species</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_confidence</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_confidence</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_location</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_location</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_timestamp</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_timestamp</span><span class="si">)</span><span class="p">;</span> <span class="nv">y_pos_weather</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="nv">$y_offset_weather</span><span class="si">)</span>
<span class="nv">y_pos_subtitle</span><span class="o">=</span><span class="s2">""</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle_file</span><span class="s2">"</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then</span> <span class="c"># Check if the subtitle file was successfully created</span>
    <span class="nv">y_pos_subtitle</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_species <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_confidence</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_confidence <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_location</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_location <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_timestamp</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_timestamp <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
    <span class="nv">y_pos_weather</span><span class="o">=</span><span class="si">$(</span>calc_y_pos <span class="k">$((</span>y_offset_weather <span class="o">+</span> line_spacing<span class="k">))</span><span class="si">)</span>
<span class="k">fi</span>
<span class="c"># &lt;&lt;&lt; END Calculate Y Positions &gt;&gt;&gt;</span>


<span class="c"># &lt;&lt;&lt; Build Filter Complex using textfile= for ALL lines &gt;&gt;&gt;</span>
<span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="se">\</span><span class="s2">
[0:v]drawtext=textfile='</span><span class="nv">$species_file</span><span class="s2">':fontcolor=white:fontsize=72:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_species</span><span class="k">}</span><span class="s2">"</span>
<span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$subtitle_file</span><span class="s2">"</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then
    </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$subtitle_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_subtitle</span><span class="k">}</span><span class="s2">"</span>
<span class="k">fi
</span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$confidence_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_confidence</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$location_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_location</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$timestamp_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_timestamp</span><span class="k">}</span><span class="s2">,</span><span class="se">\</span><span class="s2">
drawtext=textfile='</span><span class="nv">$weather_file</span><span class="s2">':fontcolor=white:fontsize=60:x=(w-text_w)/2:y=</span><span class="k">${</span><span class="nv">y_pos_weather</span><span class="k">}</span><span class="s2">[v]"</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$boost_sound</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">;[1:a]volume=15dB,compand=attacks=0:points=-80/-80|-12/-10|0/-2|20/25[a]"</span><span class="p">;</span> <span class="k">else </span><span class="nv">filter_complex</span><span class="o">=</span><span class="s2">"</span><span class="nv">$filter_complex</span><span class="s2">;[1:a]anull[a]"</span><span class="p">;</span> <span class="k">fi</span>
<span class="c"># &lt;&lt;&lt; END Build Filter Complex &gt;&gt;&gt;</span>


<span class="c"># ============================================================</span>
<span class="c"># --- Construct the output path ---</span>
<span class="nv">input_dir</span><span class="o">=</span><span class="si">$(</span><span class="nb">dirname</span> <span class="s2">"</span><span class="nv">$input_file</span><span class="s2">"</span><span class="si">)</span>
<span class="nv">filename_species_part</span><span class="o">=</span><span class="s2">"</span><span class="nv">$final_species_text</span><span class="s2">"</span>
<span class="nv">safe_species_name</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$filename_species_part</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/[^a-zA-Z0-9_ -]//g'</span> | <span class="nb">tr</span> <span class="s1">' '</span> <span class="s1">'_'</span><span class="si">)</span>
<span class="nv">timestamp_filename</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$timestamp</span><span class="s2">"</span> | <span class="nb">sed</span> <span class="s1">'s/ /_/g; s/:/-/g; s/Z//g'</span><span class="si">)</span>
<span class="nv">output_filename_base</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">timestamp_filename</span><span class="k">}</span><span class="s2">_</span><span class="k">${</span><span class="nv">safe_species_name</span><span class="k">}</span><span class="s2">.mp4"</span>
<span class="nv">output_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$input_dir</span><span class="s2">/</span><span class="nv">$output_filename_base</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"Output file path: </span><span class="nv">$output_file</span><span class="s2">"</span>
<span class="c"># ============================================================</span>

<span class="c"># Construct the ffmpeg command string for eval</span>
<span class="nv">ffmpeg_input_options</span><span class="o">=</span><span class="s2">""</span>
<span class="c"># Check if start_offset is greater than 0 using awk for float comparison</span>
<span class="nv">is_offset_positive</span><span class="o">=</span><span class="si">$(</span><span class="nb">awk</span> <span class="nt">-v</span> <span class="nv">offset</span><span class="o">=</span><span class="s2">"</span><span class="nv">$start_offset</span><span class="s2">"</span> <span class="s1">'BEGIN { print (offset &gt; 0) }'</span><span class="si">)</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$is_offset_positive</span><span class="s2">"</span> <span class="nt">-eq</span> 1 <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nv">ffmpeg_input_options</span><span class="o">=</span><span class="s2">"-ss </span><span class="nv">$start_offset</span><span class="s2">"</span>
  <span class="nb">echo</span> <span class="s2">"INFO: Applying start offset of </span><span class="nv">$start_offset</span><span class="s2"> seconds to input file."</span>
<span class="k">fi

</span><span class="nv">ffmpeg_command</span><span class="o">=</span><span class="s2">"ffmpeg -f lavfi -i </span><span class="se">\"</span><span class="s2">color=c=black:s=1280x700</span><span class="se">\"</span><span class="s2"> </span><span class="nv">$ffmpeg_input_options</span><span class="s2"> -i </span><span class="se">\"</span><span class="nv">$input_file</span><span class="se">\"</span><span class="s2"> </span><span class="se">\</span><span class="s2">
-filter_complex </span><span class="se">\"</span><span class="nv">$filter_complex</span><span class="se">\"</span><span class="s2"> </span><span class="se">\</span><span class="s2">
-map </span><span class="se">\"</span><span class="s2">[v]</span><span class="se">\"</span><span class="s2"> -map </span><span class="se">\"</span><span class="s2">[a]</span><span class="se">\"</span><span class="s2"> -c:v libx264 -c:a aac -t </span><span class="nv">$duration</span><span class="s2"> -y </span><span class="se">\"</span><span class="nv">$output_file</span><span class="se">\"</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"FFmpeg command string built for eval: </span><span class="nv">$ffmpeg_command</span><span class="s2">"</span>

<span class="c"># Execute the command using eval</span>
<span class="nb">echo</span> <span class="s2">"Executing via eval:"</span>
<span class="nb">eval</span> <span class="s2">"</span><span class="nv">$ffmpeg_command</span><span class="s2">"</span>

<span class="nv">exit_status</span><span class="o">=</span><span class="nv">$?</span>
<span class="c"># Trap will clean up $TMPDIR regardless of exit status</span>
<span class="k">if</span> <span class="o">[</span> <span class="nv">$exit_status</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"Error: ffmpeg command failed with exit status </span><span class="nv">$exit_status</span><span class="s2">"</span>
    <span class="nb">exit</span> <span class="nv">$exit_status</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"Successfully created video: </span><span class="nv">$output_file</span><span class="s2">"</span>
<span class="k">fi

</span><span class="nb">exit </span>0
</code></pre></div>  </div>

</details>

<h2 id="favorite-bird-recordings">Favorite Bird Recordings</h2>

<p>Here are some of my favorite bird recordings I‚Äôve captured on BirdNET-Go using my camera‚Äôs microphones <em>so far</em>.</p>

<h3 id="white-crowned-sparrow-">White-crowned Sparrow üîä</h3>

<p><a href="https://ebird.org/species/whcspa">eBird species page</a></p>

<p>This small sparrow sings a beautiful song. In my region, I frequently hear it sing this earworm of a melody:</p>

<p>üé∂ <em>Do-Do-Mi-Mi-Sol-Sol-La</em> üé∂</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2025/05/2025-04-14_07-05-46_White-crowned_Sparrow.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p><code class="language-plaintext highlighter-rouge">bird-video.sh -i ~/Downloads/29722.mp4 -b true -d 3 -w "Cloudy"</code></p>

<h3 id="ruby-throated-hummingbird-">Ruby-throated Hummingbird üîä</h3>

<p><a href="https://ebird.org/species/rthhum">eBird species page</a></p>

<p>While looking out the window at a bunny with my daughter, this hummingbird flew right to the fuchsia baskets above us. As soon as my brain registered what this was, my phone alerted me of its first hummingbird detection!</p>

<p>In this clip, you can hear the hummingbird‚Äôs fast chirping and wings buzzing around the 00:09 mark. ü™Ω</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2025/05/2025-05-24_07-50-42_Ruby-throated_Hummingbird.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p><code class="language-plaintext highlighter-rouge">bird-video.sh -i ~/Downloads/91238.mp4 -b true -d 11 -w "Clear Sky"</code></p>

<h3 id="black-throated-green-warbler-">Black-throated Green Warbler üîä</h3>

<p><a href="https://ebird.org/species/btnwar">eBird species page</a></p>

<p>This crazy bird has such a unique advertising song. It sounds quite robotic. ü§ñ</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2025/05/2025-05-07_07-18-50_Black-throated_Green_Warbler.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p><code class="language-plaintext highlighter-rouge">bird-video.sh -i ~/Downloads/66671.mp4 -b true -m 4 -d 4 -w "Cloudy"</code></p>

<h3 id="red-tailed-hawk-">Red-tailed Hawk üîä</h3>

<p><a href="https://ebird.org/species/rethaw">eBird species page</a></p>

<p>The iconic red-tailed hawk. This call is infamous in movies and TV shows. Often misrepresented as an eagle. ü¶Ö</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2025/05/2025-04-10_14-23-48_Red-tailed_Hawk.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p><code class="language-plaintext highlighter-rouge">bird-video.sh -i ~/Downloads/24112.mp4 -b true -d 7 -w "Cloudy"</code></p>

<h3 id="osprey-duet-">Osprey Duet üîä</h3>

<p><a href="https://ebird.org/species/osprey">eBird species page</a></p>

<p>While pushing my kids on the swing, I had these two Ospreys fly over me, calling back and forth. üîä</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2025/05/2025-03-29_11-07-07_Osprey.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p><code class="language-plaintext highlighter-rouge">bird-video.sh -i ~/Downloads/7045.mp4 -b true -m 5 -d 6 -w "Clear Sky" -s "Osprey" -u "Duet"</code></p>

<h2 id="cool-encounters">Cool Encounters</h2>

<p>I wanted to share some extra pictures of birds I have encountered. Two of them owe credit to BirdNET-Go!</p>

<p>The yellow-rumped warbler was the first bird detection in BirdNET-Go that I didn‚Äôt recognize as they only show up here during their migration. BirdNET-Go helped me figure out when I might hear them based on my previous detections. With a little bit of patience, I was able to spot one in my backyard. These little guys are fun to watch flit around the trees when the sun peeks through the clouds.</p>

<p><img src="/assets/img/2025/05/yerwar.jpg" alt="Yellow-rumped warbler" /><em>A <a href="https://ebird.org/species/yerwar">Yellow-rumped warbler</a> in my backyard. Any guesses as to why it‚Äôs called that?</em></p>

<p>Next, I wasn‚Äôt expecting to see a mature male wild turkey in my backyard this spring. We‚Äôve seen a few flocks over the years, but they always seem to be missing a mature male. Anyway, BirdNET-Go keyed me in that a wild turkey had been detected two days in a row. On the third day, I kept my eyes peeled and was rewarded with this lovely shot of its iridescent feathers. That was the last time I detected one.</p>

<p><img src="/assets/img/2025/05/wiltur.jpg" alt="Wild turkey" /><em>A <a href="https://ebird.org/species/wiltur">Wild turkey</a> in my backyard. The sun hit this bird‚Äôs iridescent feathers perfectly.</em></p>

<p>Last, there was a pair of Barred Owls that would nest around my parents‚Äô house growing up circa 2009. Obviously, BirdNET-Go didn‚Äôt detect this one. But it was really cool hearing them at dusk and throughout the night. It was a fun memory I wanted to share.</p>

<p><img src="/assets/img/2025/05/brdowl.jpg" alt="Barred owl" /><em>A <a href="https://ebird.org/species/brdowl">Barred owl</a> in my parents‚Äô backyard circa 2009.</em></p>

<h2 id="future-plans">Future Plans</h2>

<p>A cool idea that won‚Äôt leave my head is that someday I‚Äôd like to be able to recreate a real-time ambient bird soundscape based on my detections in BirdNET-Go.</p>

<p>The thought is that maybe I‚Äôve moved away from my current home, or I want to relive the experience of hearing the birds in my area. I can pair the timestamped database detections with random regional audio submissions on a site like <a href="https://ebird.org/">eBird</a>. Together, they could be used to recreate a <em>similar</em> real-time ambient bird soundscape that I‚Äôve already experienced.</p>

<p>It will be interesting to see how my memories of birds change, and if I can use that to anchor me back to a time like this. I think it would be a fun project to work on in the distant future.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Listening to birds is fun. Birdwatching is a joy. Tune in to the sounds around you and it might make things a little brighter. üê¶‚Äçüî•</p>

<p><img src="/assets/img/2025/05/birdwatching_1.jpg" alt="Libbie and Kyle spotting an Eastern Bluebird at the park" /><em>Libbie and Kyle spotting an <a href="https://ebird.org/species/easblu">Eastern Bluebird</a> at the park</em></p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="large project" /><summary type="html"><![CDATA[Turning security cameras into AI bird detectives! How I use BirdNET-Go & Home Assistant for 24/7 bird detections & alerts. Identify every chirp!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2025/05/birdwatching_0.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2025/05/birdwatching_0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Automating Attic Pest Control</title><link href="https://www.kyleniewiada.org/blog/2025/04/automating-pest-control/" rel="alternate" type="text/html" title="Automating Attic Pest Control" /><published>2025-04-13T22:22:00-04:00</published><updated>2025-04-13T22:22:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2025/04/automating-pest-control</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2025/04/automating-pest-control/"><![CDATA[<p>Dealing with pests is an unwelcome reality for many homeowners. My recent encounter wasn‚Äôt just about the pests themselves but also about finding a practical solution that fit my challenging situation. This post details my journey into automated pest monitoring in a <em>hard-to-reach location</em>.</p>

<p>It started back in February 2024. For the first time, I heard the unmistakable sound of tiny claws scurrying above our ceiling. Even the cats noticed, sitting perfectly still, staring intently upwards. It was 2 AM, my newborn was asleep in my arms, and free time felt like a distant memory. The thought of regularly climbing into the attic to check traps was immediately daunting. That was the moment I started recalling something I never thought I‚Äôd want: a smart mousetrap.</p>

<blockquote>
  <p><strong>Note:</strong> The solution I pick in my post isn‚Äôt available for purchase anymore. Instead, just glue a door sensor to a snap trap or live trap door. This directly addresses the ‚ÄúI don‚Äôt want to climb into the attic daily‚Äù problem. üö´ü™ú</p>
</blockquote>

<h2 id="considering-the-options">Considering the Options</h2>

<p>When dealing with rodents, the primary choice is often between live traps (designed to capture the animal unharmed for release) and kill traps (designed for quick dispatch). Both approaches have proponents, and the best choice often depends on the specific situation and personal philosophy.</p>

<p>Live trapping appeals to many due to its potential for humane handling, avoiding the need to kill the animal. However, it comes with its own challenges, including finding suitable locations for release far enough away to prevent reentry.</p>

<p>Kill traps are chosen for reasons such as perceived faster resolution and avoiding the complexities of release. Within kill traps, methods vary‚Äîfrom traditional snap traps to glue traps (often considered inhumane due to prolonged suffering) and electric traps. For my specific situation, I needed a remotely monitored solution for an inaccessible attic space. I leaned towards an electric kill trap. The key driver was how easily I could permanently integrate it within my smart home.</p>

<p><img src="/assets/img/2025/04/attic.jpg" alt="A dark attic with freshly added blow-in insulation" /><em>My dark, endless attic that I definitely don‚Äôt want to climb through daily.</em></p>

<h3 id="my-specific-situation">My Specific Situation</h3>

<p>My situation demanded a very specific type of solution. Because the trap would be in the attic, that would mean it was only accessible via a ladder in the garage. Regular checks were highly impractical. Leaving a dispatched mouse unchecked, especially during warmer months, would not be a good idea. ‚ô®Ô∏è</p>

<p>Many years ago, I had heard of a smart mousetrap by a company called Dome. At the time, I scoffed at the idea of an <strong>$80 mousetrap</strong>. But that knowledge had somehow lived rent-free in my head ever since. But with my time hardly available, it didn‚Äôt seem so absurd. I could purchase a pre-built solution, add it to my Z-Wave network, and be good to go.</p>

<h3 id="elexa-dome-z-wave-mousetrap-mouser">Elexa Dome Z-Wave Mousetrap (Mouser)</h3>

<p><img src="/assets/img/2025/04/mousetrap.jpg" alt="Dome Z-Wave Smart Electronic Mouse Trap unboxed" /><em>The Dome Smart Electronic Mouse Trap unboxed in real life.</em></p>

<p>The model I landed on was the ‚ÄúElexa Dome Z-Wave Smart Electronic Mouse Trap‚Äù, previously called the ‚ÄúDome Mouser‚Äù.</p>

<p><a href="https://products.z-wavealliance.org/z-wave-product/dome-mouser/">Z-Wave Alliance &gt; Dome Mouser</a></p>

<p>I <em>would love</em> to leave a link on where to purchase it, but I took so long to finish writing this post that it has been unavailable to purchase anywhere for over a year.</p>

<p>However, when I started this project, Home Depot was selling these for only <strong>$40</strong>. This was <em>half</em> of the original <strong>$80</strong> MSRP. Since it looked like stock was getting cleared out forever, I uh‚Ä¶ bought 3. üôàüí∏</p>

<p>Sometimes a solution is too perfect for your specific scenario to pass up the opportunity on.</p>

<p>What made this Z-Wave trap appealing <em>at the time</em> compared to some Wi-Fi, Bluetooth, or DIY solutions?</p>

<ul>
  <li><strong>Ready to Use:</strong> It was the easiest option for sleep-deprived ‚Äúdad brain‚Äù me. I could just turn it on, add it to my Z-Wave network, and then write some light Home Assistant automations for the notifications.</li>
  <li><strong>Battery Life:</strong> Z-Wave‚Äôs low power usage was key for potentially years of operation without needing attic access for battery changes.</li>
  <li><strong>Network Reliability:</strong> It leverages my existing robust Z-Wave mesh network. I confirmed it has connectivity through at least 7 neighboring devices, ensuring reliable signal transmission out of the attic.</li>
  <li><strong>Configuration:</strong> The 2-way communication allowed for deeper integration and control. I could monitor battery levels remotely and even potentially adjust parameters like:
    <ul>
      <li>Electric discharge mode (pulse/constant) and duration.</li>
      <li>Check-in intervals for configuration updates (it always reports status changes like activations instantly).</li>
    </ul>
  </li>
  <li><strong>Offline Check-in:</strong> I also implemented a backup automation in Home Assistant to notify me if the trap <em>failed</em> to check in for 48 hours, alerting me to potential connectivity or battery issues (code included further down).</li>
</ul>

<p>It represented a neat, albeit niche, technological solution perfectly tailored to solve my specific problem: reliable, automated monitoring in an inaccessible space.</p>

<p>After navigating some significant shipping delays from Home Depot, they finally arrived <em>45 days</em> later. I swear, these were definitely getting drop-shipped from a partner who had most certainly lost them in the back of their warehouse.</p>

<h2 id="setup">Setup</h2>

<p>Setting it up was straightforward within my Z-Wave network. I put the device in pairing mode, connected it with <a href="https://github.com/zwave-js/zwave-js-ui">Z-Wave JS UI</a>, and allowed Home Assistant to populate the new entities in its dashboard.</p>

<p>I armed the device, threw in a chunk of copper wire, and watched the sparks fly. My caveman test showed that it was working and the tripped status was updating correctly in Home Assistant.</p>

<p>I added some fresh bait, rearmed the device, and put it in my attic.</p>

<p>Time to proceed with the customizations.</p>

<p><img src="/assets/img/2025/04/attic-mousetrap-node.png" alt="Z-Wave JS UI showing the detailed connection information of a Dome Z-Wave Mouser" /><em>Z-Wave JS UI showing the information for my attic mousetrap.</em></p>

<h2 id="home-assistant-configuration">Home Assistant Configuration</h2>

<p>I‚Äôm going to go pretty light on the <em>exacts</em> here because I doubt anyone else is ever going to buy the Z-Wave Dome Mouser again.. Instead, I‚Äôm going to try to keep this generic enough that anyone can apply these ideas to their own DIY mousetrap.</p>

<p>Here are the lists of helper sensors and automations that I use to track the status of the trap, monitor the healthchecks, and notify me when it activates.</p>

<h3 id="helper-sensors">Helper Sensors</h3>

<h4 id="last-seen-helper">Last Seen Helper</h4>

<p>A simple helper sensor to track the last time the trap was seen. This uses the <code class="language-plaintext highlighter-rouge">*_last_seen</code> sensor created automatically by <code class="language-plaintext highlighter-rouge">Z-Wave JS UI</code>, but makes a few tweaks. That‚Äôs because when Home Assistant starts up or Z-Wave JS UI restarts, the state for their exposed sensor will be <code class="language-plaintext highlighter-rouge">unknown</code> or <code class="language-plaintext highlighter-rouge">unavailable</code> until updated (which may take hours on a battery-operated device). I want my value to persist over a reboot, so I create a helper sensor that stores the last time we <em>knew</em> it was updated.</p>

<p>It‚Äôs true that the device could technically update when we‚Äôre rebooting, and we‚Äôd miss it. But that‚Äôs why I don‚Äôt consider it ‚Äúlost‚Äù until we miss any updates for 24+ hours‚Äîwhich should cover 2 missed check-in events.</p>

<ul>
  <li>Used for: <a href="#healthcheck-notifications">Healthcheck Notifications</a></li>
</ul>

<blockquote>
  <p>At the time of writing, this is the only <code class="language-plaintext highlighter-rouge">sensor</code> that can‚Äôt be created in the UI. I had to create this in YAML. I hope that changes in the future.</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">template</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.attic_mousetrap_last_seen</span>
      <span class="na">not_to</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">unknown</span>
        <span class="pi">-</span> <span class="s">unavailable</span>
    <span class="na">sensor</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Attic mousetrap Last Seen</span>
      <span class="na">unique_id</span><span class="pi">:</span> <span class="s">attic_mousetrap_last_seen_helper</span>
      <span class="na">state</span><span class="pi">:</span> <span class="s1">'</span><span class="s">'</span>
      <span class="na">device_class</span><span class="pi">:</span> <span class="s">timestamp</span>
</code></pre></div></div>

<h4 id="healthcheck">Healthcheck</h4>

<p>This is the <code class="language-plaintext highlighter-rouge">template</code> code for a <code class="language-plaintext highlighter-rouge">binary sensor</code> that checks if the trap has been ‚Äúseen‚Äù in the last 24 hours. This is useful for ensuring that the trap is still operational and connected to the network. If the trap hasn‚Äôt been seen recently, the <code class="language-plaintext highlighter-rouge">binary sensor</code> will return <code class="language-plaintext highlighter-rouge">off</code>.</p>

<ul>
  <li>Used for: <a href="#healthcheck-notifications">Healthcheck Notifications</a></li>
</ul>

<p>Create a new <a href="https://www.home-assistant.io/integrations/template/">template binary sensor</a> in the UI with the following template value. It takes our <code class="language-plaintext highlighter-rouge">*_last_seen_helper</code> from above and checks if it is greater than 24 hours ago. If it has been longer than 24 hours, it returns <code class="language-plaintext highlighter-rouge">off</code> signifying that the trap hasn‚Äôt been seen in a while.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">{{</span> <span class="nv">(states('sensor.attic_mousetrap_last_seen_helper') | as_timestamp(0) | int) &gt; ((utcnow() - timedelta(hours=24)) | as_timestamp | int)</span> <span class="pi">}}</span>
</code></pre></div></div>

<h4 id="counters">Counters</h4>

<p>Want to know how many mice have been caught with this trap? How about how many have been <em>missed</em>? Want to break it down to know which trap is the most successful? Great!</p>

<p>First, create some <a href="https://www.home-assistant.io/integrations/counter/">helper counters</a>.</p>

<p>I use the following:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">counter.attic_mousetrap_catch_count</code></li>
  <li><code class="language-plaintext highlighter-rouge">counter.attic_mousetrap_miss_count</code></li>
</ul>

<p>Then create a new <code class="language-plaintext highlighter-rouge">template sensor</code> that does some math to calculate the success rate of the trap.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">{</span><span class="err">%</span> <span class="nv">set catch_count = states('counter.attic_mousetrap_catch_count') | int %</span><span class="pi">}</span>
<span class="pi">{</span><span class="err">%</span> <span class="nv">set miss_count = states('counter.attic_mousetrap_miss_count') | int %</span><span class="pi">}</span>
<span class="pi">{</span><span class="err">%</span> <span class="nv">set total_count = catch_count + miss_count %</span><span class="pi">}</span>

<span class="pi">{</span><span class="err">%</span> <span class="nv">if total_count &gt; 0 %</span><span class="pi">}</span>
  <span class="pi">{{</span> <span class="nv">(catch_count / total_count * 100) | round(0)</span> <span class="pi">}}</span>
<span class="pi">{</span><span class="err">%</span> <span class="nv">else %</span><span class="pi">}</span>
  <span class="s">0</span> 
<span class="pi">{</span><span class="err">%</span> <span class="nv">endif %</span><span class="pi">}</span>
</code></pre></div></div>

<p>That‚Äôs it.</p>

<h3 id="automations">Automations</h3>

<h4 id="healthcheck-notifications">Healthcheck Notifications</h4>

<p>This automation will notify you if the trap hasn‚Äôt been seen in the last 24 hours based on the state of the ‚ÄúHealthcheck‚Äù <code class="language-plaintext highlighter-rouge">template</code> <code class="language-plaintext highlighter-rouge">binary sensor</code> entity created above.</p>

<details>

  <summary>[Yaml] Healthcheck Automation</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Healthcheck for mousetrap (Attic)</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Send</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">notification</span><span class="nv"> </span><span class="s">if</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">mousetrap</span><span class="nv"> </span><span class="s">hasn't</span><span class="nv"> </span><span class="s">been</span><span class="nv"> </span><span class="s">seen</span><span class="nv"> </span><span class="s">in</span><span class="nv"> </span><span class="s">24</span><span class="nv"> </span><span class="s">hours."</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">19:00:00"</span> <span class="c1"># I check at 7 PM every day as this is the most likely time I will be able to actually address a failed check in.</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">time</span>
<span class="na">conditions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.attic_mousetrap_healthcheck</span>
    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">26</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">0</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s">üê≠ü™§ Attic mousetrap unresponsive</span>
      <span class="na">message</span><span class="pi">:</span> <span class="s">The attic mousetrap hasn't been updated in a while. Please investigate.</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:rodent</span>
        <span class="na">group</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
        <span class="na">channel</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
    <span class="na">action</span><span class="pi">:</span> <span class="s">notify.family</span>
</code></pre></div>  </div>

</details>

<h4 id="triggered-notifications">Triggered Notifications</h4>

<p>Here is the automation that I use to send notifications when the mousetrap is triggered. This uses the <code class="language-plaintext highlighter-rouge">binary_sensor.attic_mousetrap_sensor_state_general_purpose</code> entity to determine if the trap has been triggered.</p>

<p>It also uses the <code class="language-plaintext highlighter-rouge">binary_sensor.attic_mousetrap_trap_armed</code> entity to determine if the trap has been re-armed after a catch. This is useful for clearing any remaining ‚Äúmouse caught‚Äù notifications on all devices since it‚Äôs no longer actionable.</p>

<p>It uses the <code class="language-plaintext highlighter-rouge">counter.attic_mousetrap_catch_count</code> entity to increment the catch count when the trap is triggered.</p>

<p>Finally, it adds a notification action button (<code class="language-plaintext highlighter-rouge">ATTIC_MOUSETRAP_FALSE_ALARM</code>) to mark the catch as a false positive. It is tied to a separate automation below that decreases the catch count and increases the miss count.</p>

<details>

  <summary>[Yaml] Notify Attic Mousetrap Triggered Automation</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Notify attic mousetrap triggered</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Send</span><span class="nv"> </span><span class="s">notifications</span><span class="nv"> </span><span class="s">when</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">mousetrap</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">triggered."</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.attic_mousetrap_sensor_state_general_purpose</span>
    <span class="c1"># When the mousetrap is triggered, alert the family!</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">caught</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
  <span class="pi">-</span> <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.attic_mousetrap_trap_armed</span>
    <span class="c1"># When the mousetrap is re-armed, we use this to clear any remaining notifications on all devices since it's no longer actionable.</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">armed</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">caught</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
                  <span class="na">title</span><span class="pi">:</span> <span class="s">üê≠ü™§ ZAP! Attic mousetrap triggered</span>
                  <span class="na">message</span><span class="pi">:</span> <span class="s">Oh no! The attic mousetrap has been triggered.</span>
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                    <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:rodent</span>
                    <span class="na">group</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
                    <span class="na">channel</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
                    <span class="na">tag</span><span class="pi">:</span> <span class="s">mousetrap-alert-attic</span>
                    <span class="na">push</span><span class="pi">:</span>
                      <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
                    <span class="na">actions</span><span class="pi">:</span>
                        <span class="c1"># Optional action button to mark the catch as a false positive. You should tie this to a separate automation to decrease the catch count and increase the miss count.</span>
                      <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">ATTIC_MOUSETRAP_FALSE_ALARM</span>
                        <span class="na">title</span><span class="pi">:</span> <span class="s">False Alarm</span>
                <span class="na">action</span><span class="pi">:</span> <span class="s">notify.family</span>
              <span class="pi">-</span> <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">target</span><span class="pi">:</span>
                  <span class="na">entity_id</span><span class="pi">:</span> <span class="s">counter.attic_mousetrap_catch_count</span>
                <span class="na">action</span><span class="pi">:</span> <span class="s">counter.increment</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">armed</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">clear_notification</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">mousetrap-alert</span>
                <span class="na">tag</span><span class="pi">:</span> <span class="s">mousetrap-alert-attic</span>
            <span class="na">action</span><span class="pi">:</span> <span class="s">notify.family</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div>  </div>

</details>

<p>Last, this is the automation that is triggered when the user marks the catch as a false alarm via the notification. It updates the counters accordingly.</p>

<details>

  <summary>[Yaml] Attic Mousetrap False Alarm Automation</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Attic</span><span class="nv"> </span><span class="s">mousetrap</span><span class="nv"> </span><span class="s">false</span><span class="nv"> </span><span class="s">alarm"</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">When</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">attic</span><span class="nv"> </span><span class="s">mousetrap</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">triggered,</span><span class="nv"> </span><span class="s">but</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">user</span><span class="nv"> </span><span class="s">marks</span><span class="nv"> </span><span class="s">it</span><span class="nv"> </span><span class="s">as</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">false</span><span class="nv"> </span><span class="s">alarm</span><span class="nv"> </span><span class="s">via</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">notification,</span><span class="nv"> </span><span class="s">we</span><span class="nv"> </span><span class="s">need</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">update</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">counters."</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">event_type</span><span class="pi">:</span> <span class="s">mobile_app_notification_action</span>
    <span class="na">event_data</span><span class="pi">:</span>
      <span class="na">action</span><span class="pi">:</span> <span class="s">ATTIC_MOUSETRAP_FALSE_ALARM</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">event</span>
<span class="na">conditions</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">target</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span> <span class="s">counter.attic_mousetrap_miss_count</span>
        <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
        <span class="na">action</span><span class="pi">:</span> <span class="s">counter.increment</span>
      <span class="pi">-</span> <span class="na">target</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span> <span class="s">counter.attic_mousetrap_catch_count</span>
        <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
        <span class="na">action</span><span class="pi">:</span> <span class="s">counter.decrement</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div>  </div>

</details>

<h2 id="tracking-effectiveness">Tracking Effectiveness</h2>

<p>Now that we‚Äôre all configured, how did everything end up working?</p>

<p>To monitor the situation, I set up a simple counter in my smart home dashboard tracking the activations for each trap (configured above). This helps me understand the extent of the issue and verify the effectiveness of the placements over time.</p>

<p><img src="/assets/img/2025/04/mousetrap-dashboard.png" alt="Home Assistant dashboard showing the failure and success rates of the Z-Wave Dome Mouser" /><em>Mousetrap failure and success rates.</em></p>

<p>So it did‚Ä¶ not that great, honestly. üìâ</p>

<p>Initially, it appears like mice were not getting caught but still triggering the trap. Later, I theorized that some of the mice were so small that they were shot out of the trap from the shock. But they‚Äôd always return the next day.. so.. I had another shot?</p>

<p>My most shameful realization with this data is that I could <em>almost always</em> succeed by catching the mouse in a <em>second</em> trap opposing the opening of the first one. ‚òÑÔ∏è</p>

<p>But that theory has been unproven. Since I implemented the ‚Äúcatch trap‚Äù idea in the attic, I haven‚Äôt seen any more mice beyond the last catch. Which is a good problem! That means I <em>might</em> have located and sealed all remaining entry points.</p>

<p>If I do start getting more, that means I need to keep scouting on how they‚Äôre getting in. üî≠</p>

<h2 id="what-are-we-even-doing-here">What Are We Even Doing Here?</h2>

<p>Which brings us back to the main point. What are the mousetraps even doing anymore if nothing is getting caught?</p>

<p>They‚Äôre a fallback.</p>

<p>If the mousetrap gets triggered, they are letting me know I‚Äôve failed to locate some kind of entry point into my attic. I need to go back, identify a new possible entry point, and seal it up.</p>

<p>Only then will clearing out the attic actually solve anything.</p>

<h2 id="prevention-first-stop-them-before-you-need-traps">Prevention First: Stop Them Before You Need Traps</h2>

<p>While automated trapping provides a solution once pests are inside, the ideal goal is <strong>always prevention</strong>. Trapping should be a secondary measure after addressing how they got in. In my case, whenever I find a mouse, my first step is to <strong>always address any potential entry points</strong> to prevent this from happening again.</p>

<h2 id="alternative-solution-diy-smart-trap">Alternative Solution: DIY Smart Trap</h2>

<p>Just taking a quick sidestep here. You don‚Äôt <em>need</em> a fully featured Z-Wave smart mouse trap. Also, you can‚Äôt really find the Dome Z-Wave Mouser anywhere anymore. I went that route because I had zero free time to spend after the birth of our new child.</p>

<p>With just a <em>little</em> bit of DIY effort, you can glue any door sensor to a standard snap trap or live trap. Then you‚Äôll know when the device has been triggered so you can attend to it.</p>

<p>This achieves the primary goal (remote notification) using readily available and often cheaper components. While it doesn‚Äôt offer the configuration depth of the specialized trap, it directly addresses the ‚ÄúI don‚Äôt want to climb into the attic daily‚Äù problem. üö´ü™ú</p>

<h2 id="conclusion">Conclusion</h2>

<p>While the specific Z-Wave device I used might be a relic of the near past, the underlying principle of using smart home tech to monitor and manage inconvenient tasks remains highly relevant. Whether it‚Äôs a specialized device or a DIY sensor combination, automating trap notifications for hard-to-reach areas provides peace of mind and makes dealing with pests significantly more manageable.</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="small project" /><summary type="html"><![CDATA[Automating mousetrap notifications for hard-to-reach areas (like my attic) that I don't want to check daily.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2025/04/mousetrap.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2025/04/mousetrap.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Smart Coaster That Keeps Me Hydrated</title><link href="https://www.kyleniewiada.org/blog/2025/02/building-my-smart-coaster/" rel="alternate" type="text/html" title="The Smart Coaster That Keeps Me Hydrated" /><published>2025-02-23T20:01:00-05:00</published><updated>2025-02-23T20:01:00-05:00</updated><id>https://www.kyleniewiada.org/blog/2025/02/building-my-smart-coaster</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2025/02/building-my-smart-coaster/"><![CDATA[<p>I keep forgetting to drink water. Between the consecutive meetings and blocks of coding, my water intake has slipped. In the mere blink of an eye, my afternoon passes by, and I end up in a dehydrated wasteland. The solution seems so easy. Drink more water! But it‚Äôs a recurring battle. My tendency to hyper-focus leaves me parched. So how do I fix this?</p>

<p>Do I set a timer? Should I buy a luxurious smart water bottle? Should I research the best water tracking app for my phone?</p>

<p>Or should I throw a bunch of glue, wood, and my favorite electronics together to construct something new? ‚ú®</p>

<p>In an effort to quickly deliver value, join me on my self-imposed 48-hour project.</p>

<div class="line-separator"></div>
<h2>Table of Contents</h2>
<div class="table-of-contents">
<ul id="markdown-toc">
  <li><a href="#possible-solutions" id="markdown-toc-possible-solutions">Possible Solutions</a>    <ul>
      <li><a href="#water-tracking-apps" id="markdown-toc-water-tracking-apps">Water Tracking Apps</a></li>
      <li><a href="#smart-water-bottles" id="markdown-toc-smart-water-bottles">Smart Water Bottles</a></li>
      <li><a href="#a-smart-coaster" id="markdown-toc-a-smart-coaster">A Smart Coaster?</a></li>
    </ul>
  </li>
  <li><a href="#researching-the-build" id="markdown-toc-researching-the-build">Researching the Build</a>    <ul>
      <li><a href="#load-cells" id="markdown-toc-load-cells">Load Cells</a></li>
      <li><a href="#refocusing-on-the-problem" id="markdown-toc-refocusing-on-the-problem">Refocusing on the Problem</a></li>
      <li><a href="#ultrasonic--sensor" id="markdown-toc-ultrasonic--sensor">Ultrasonic üîµü¶î Sensor</a></li>
      <li><a href="#lasers" id="markdown-toc-lasers">Lasers</a></li>
    </ul>
  </li>
  <li><a href="#planning-the-build-Ô∏è" id="markdown-toc-planning-the-build-Ô∏è">Planning the Build üó∫Ô∏è</a></li>
  <li><a href="#building-it-Ô∏è" id="markdown-toc-building-it-Ô∏è">Building It üõ†Ô∏è</a>    <ul>
      <li><a href="#first-attempt" id="markdown-toc-first-attempt">First Attempt</a></li>
      <li><a href="#second-attempt" id="markdown-toc-second-attempt">Second Attempt</a></li>
      <li><a href="#finishing-touches" id="markdown-toc-finishing-touches">Finishing Touches</a></li>
      <li><a href="#final-parts-breakdown" id="markdown-toc-final-parts-breakdown">Final Parts Breakdown</a></li>
    </ul>
  </li>
  <li><a href="#how-the-smart-coaster-works-" id="markdown-toc-how-the-smart-coaster-works-">How the Smart Coaster Works ü§ñ</a>    <ul>
      <li><a href="#high-level-rules" id="markdown-toc-high-level-rules">High-Level Rules</a>        <ul>
          <li><a href="#prerequisites" id="markdown-toc-prerequisites">Prerequisites</a>            <ul>
              <li><a href="#required" id="markdown-toc-required">Required</a></li>
              <li><a href="#optional" id="markdown-toc-optional">Optional</a></li>
            </ul>
          </li>
          <li><a href="#automation-triggers" id="markdown-toc-automation-triggers">Automation Triggers</a></li>
          <li><a href="#automation-actions" id="markdown-toc-automation-actions">Automation Actions</a></li>
          <li><a href="#notification-conditions" id="markdown-toc-notification-conditions">Notification Conditions</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#esphome-configuration" id="markdown-toc-esphome-configuration">ESPHome Configuration</a></li>
  <li><a href="#what-would-i-do-differently" id="markdown-toc-what-would-i-do-differently">What Would I Do Differently?</a></li>
  <li><a href="#update-2025-06-17" id="markdown-toc-update-2025-06-17">Update: 2025-06-17</a>    <ul>
      <li><a href="#first-attempt-1" id="markdown-toc-first-attempt-1">First Attempt</a>        <ul>
          <li><a href="#hiding-the-sensor" id="markdown-toc-hiding-the-sensor">Hiding the Sensor</a></li>
        </ul>
      </li>
      <li><a href="#second-attempt-1" id="markdown-toc-second-attempt-1">Second Attempt</a>        <ul>
          <li><a href="#applying-the-finish" id="markdown-toc-applying-the-finish">Applying the Finish</a></li>
          <li><a href="#learning-about-silicone" id="markdown-toc-learning-about-silicone">Learning About Silicone</a></li>
          <li><a href="#playing-with-stickers" id="markdown-toc-playing-with-stickers">Playing With Stickers</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
</ul>

</div>
<div class="line-separator"></div>

<blockquote>
  <p>Changelog:</p>
  <ul>
    <li>2025-06-17: I completed my wishlist and created a second (more ascetic) version of the smart coaster. See my <a href="#update-2025-06-17">update below</a>.</li>
  </ul>
</blockquote>

<h2 id="possible-solutions">Possible Solutions</h2>

<p>Let‚Äôs start with the easiest way to fix my problem. Buying someone else‚Äôs solution. üí∏</p>

<blockquote>
  <p>I barely spent any time researching these solutions before I pivoted to my own. If I missed a good option, it was in the name of ‚Äúgetting something done‚Äù. ü§∑‚Äç‚ôÇÔ∏è</p>
</blockquote>

<h3 id="water-tracking-apps">Water Tracking Apps</h3>

<p>The first possible solution I came across was a water tracking app. The idea is that you buy (or subscribe to) an app that reminds you to drink water. It‚Äôs a simple concept. You drink water; you log it in the app. When you fall behind, the app reminds you to drink more water.</p>

<p>But I <em>loathe</em> this idea. It‚Äôs so‚Ä¶ <em>manual</em>. I suppose some apps lessen the work by adding a widget to your phone‚Äôs home screen. Or others add a tappable action in the notification. But it sounds so <em>tedious</em>. I want to touch my phone <em>less</em>. Not <em>more</em>. Let‚Äôs not feed the attention monster  more than we have to. üì±üëæ</p>

<h3 id="smart-water-bottles">Smart Water Bottles</h3>

<p>This one is kinda cool. A Bluetooth smart water bottle that tracks your water intake. The one example I looked at <a href="https://fcc.report/FCC-ID/2AURK006/">uses an internal load cell sensor</a> to measure the liquid (remember this for later).</p>

<p>When the measured weight of the liquid goes down, the bottle assumes you drank water. If you‚Äôre not drinking enough, you‚Äôll get a notification on your phone. Ignoring the price, it‚Äôs a neat idea.</p>

<p><img src="/assets/img/2025/02/smart_water_bottle.jpg" alt="Two C-batteries taped to a water bottle with an antenna loosely attached." /><em>My rendition of what a smart water bottle could look like.</em></p>

<p>But how do we power such a magical device?</p>

<p><em>Batteries</em>.</p>

<p>Do you know what happens to devices that run on batteries?</p>

<p>They run out. And then you have to charge them. And then you forget to charge them. And then you forget to drink water. ü™´ So the whole thing works great as long as you remember to keep it charged.</p>

<p>Ignoring that hyper-dramatic scenario for a moment, let‚Äôs dream about how we could fix this for our situation.</p>

<p>What if we could take one of those magic battery-powered water bottles and build some kind of smart coaster to dock into? This smart coaster would live on your desk and could keep the smart bottle charged. I bet such a device could even offer pass-through charging to keep the battery in a healthy state.</p>

<p><em>Wait</em>.</p>

<p>That‚Äôs a great idea.</p>

<p>Let‚Äôs build a smart <em>coaster</em>.</p>

<h3 id="a-smart-coaster">A Smart Coaster?</h3>

<p>What if I took the components of a smart bottle and put them in a coaster? I could leave the coaster plugged in, and now there are no more battery problems!</p>

<p>Does anyone sell such a magical device? üßô‚Äç‚ôÇ</p>

<p>Not that I could find! So let‚Äôs build one.</p>

<p><img src="/assets/img/2025/02/a_really_smart_coaster.jpg" alt="A pair of glasses with a coaster behind the eye pieces" /><em>A really smart coaster</em></p>

<h2 id="researching-the-build">Researching the Build</h2>

<p>If I‚Äôm going to build a smart coaster, I want it to:</p>

<ol>
  <li>Intelligently remind me to drink water</li>
  <li>Integrate with my existing smart home setup (preferably using <a href="https://www.home-assistant.io/">Home Assistant</a> and <a href="https://esphome.io/">ESPHome</a>)</li>
</ol>

<h3 id="load-cells">Load Cells</h3>

<p>Playing off of the idea above, what if I use a load cell to measure the weight of the water bottle? I could then track the volume of liquid consumed and notify me if I‚Äôve fallen behind on my goal.</p>

<p>From my 5 minutes of research, I found that load cells come in a variety of form factors. But if I wanted a nice flat coaster, I‚Äôd need a flat or low-profile load cell.</p>

<p>Pretending for a moment that I could find the perfect small flat load cell (at an affordable price), I‚Äôd still need to find a way to integrate it with ESPHome.</p>

<p>But there‚Äôs more. I‚Äôd have to calibrate the load cell to the bottle. And what if I switch bottles? Or cups? Or mugs? ü§Ø</p>

<h3 id="refocusing-on-the-problem">Refocusing on the Problem</h3>

<p>We‚Äôve gone off course. All of the solutions we‚Äôve looked at so far are trying to solve <em>how much</em> water I drink. But that‚Äôs not the <em>root</em> problem.</p>

<p><strong>I <em>really</em> have an attention problem.</strong></p>

<p><em>If</em> I remember to drink water, I have no problem consuming it. I just need that little nudge to think about it.</p>

<p>Instead of trying to detect <em>how much</em> liquid is in a bottle, let‚Äôs just try to detect if a bottle is present.</p>

<blockquote>
  <p>Full disclosure: A load cell can excel at detecting if <em>something</em> is present. But I don‚Äôt <em>think</em> the load cell would have been as compact as my final solution, and it would cost a bit more.</p>
</blockquote>

<h3 id="ultrasonic--sensor">Ultrasonic üîµü¶î Sensor</h3>

<p>The first sensor that came to my mind for presence detection was the trusty <a href="https://en.wikipedia.org/wiki/Ultrasonic_transducer">ultrasonic sensor</a>. It‚Äôs a sensor that shoots out a sound wave and listens for the echo. If it hears the echo, it knows something is there (and can also determine the distance).</p>

<p>But most of these sensors are a bit bulky and might not fit into my design. There‚Äôs also the chance of noise interferences with sound waves bouncing off other objects.</p>

<p>Want to know what‚Äôs cooler than bouncing sound waves off objects? Bouncing light waves off objects. üåàü¶Ñ</p>

<h3 id="lasers">Lasers</h3>

<p>Meet the VL53L0X. This range sensor utilizes a laser and a detector to precisely measure the time it takes for light to reflect off an object. In most board designs, the VL53L0X achieves remarkable compactness, enabling its use in space-constrained applications.</p>

<p><img src="/assets/img/2025/02/VL53L0X.jpg" alt="VL53L0X Time of Flight sensor board screwed into wood" /><em>VL53L0X ToF sensor</em></p>

<p>The VL53L0X is <em>also</em> <a href="https://esphome.io/components/sensor/vl53l0x.html">supported by ESPHome</a>, which makes it a perfect candidate for my smart coaster. ü•á</p>

<h2 id="planning-the-build-Ô∏è">Planning the Build üó∫Ô∏è</h2>

<p>My plan is to mount a VL53L0X ToF (Time of Flight) sensor facing the water bottle to detect if anything is present.</p>

<p>(Simplified) Rules:</p>

<ul>
  <li>If the bottle is present, a timer will start.</li>
  <li>If I pick up the bottle, the timer will start over.</li>
  <li>If the timer runs out, I‚Äôll get a notification to drink water.</li>
</ul>

<p>I‚Äôll plug the sensor into a (Seeed Studio XIAO) ESP32-S3 that I had lying around, program it using <a href="https://esphome.io/">ESPHome</a>, and handle any automations in <a href="https://www.home-assistant.io/">Home Assistant</a>.</p>

<p>Let‚Äôs build it.</p>

<h2 id="building-it-Ô∏è">Building It üõ†Ô∏è</h2>

<h3 id="first-attempt">First Attempt</h3>

<p>My first attempt to build my smart coaster didn‚Äôt work. In my head, I thought I could make this as compact as possible by mounting the VL53L0X sensor at a 90¬∞ angle to the coaster and hiding my ESP32 chip behind it.</p>

<p><img src="/assets/img/2025/02/smart_coaster_first_design.jpg" alt="Wood boards glued and clamped together to make a coaster prototype" /><em>My first attempt to build the smart coaster. I later decided mounting the sensor at 90¬∞ would make the sensor too close to the bottle.</em></p>

<p>This approach was a bad idea. Because I was speedrunning this project, I didn‚Äôt take the time to read any of the specifications on the VL53L0X sensor I had just purchased online. It turns out there is a minimum distance the sensor needs to be from an object to work properly (30-40 mm).</p>

<blockquote>
  <p>Alternatively, I could have used a different sensor such as the VL53L4CD, with a near 0 mm minimum range. At the time of ordering my parts, it wasn‚Äôt yet supported by ESPHome. Only later did I learn that a <a href="https://github.com/mrtoy-me">mrtoy-me</a> had been working on a custom component for it but it is no longer public.</p>
</blockquote>

<p>If I were to mount the sensor to the board shown above, the sensor would be too close to the bottle to work properly. This might create a false reading, which could lead to a lot of incorrect notifications. üö®</p>

<p>But then I had a brilliant idea. Rather than increasing the length of my coaster plate and pushing the sensor further back, what if I leaned the mounting board back at a 45¬∞ angle? üìê</p>

<p>Since the sensor would be further away and pointing up at an angle, this would greatly increase the distance between the sensor and the closest  point on the water bottle.</p>

<p>Not only that, leaning the board back would shrink the overall footprint by lowering the height.</p>

<p>It would also make the coaster look <em>cool</em>. üòé</p>

<p>So I took a hammer and chiseled the two boards apart. üî® <em>I wasn‚Äôt going to throw them away!</em></p>

<h3 id="second-attempt">Second Attempt</h3>

<p>Not wanting to make the same mistake twice, I tested mounting the sensor at a new 45¬∞ angle with <em>mounting tape</em> (not wood glue). Funny how my arrogance got the best of me last time around. ü§¶</p>

<p><img src="/assets/img/2025/02/smart_coaster_taped.jpg" alt="Wood boards mounted together at an angle with tape" /><em>First assembled prototype. Instead of using wood glue, I learned from my past mistake and assembled this one with mounting tape.</em></p>

<p>And you know what? It just worked! üìΩÔ∏è</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="" autoplay="" loop="">
  <source src="/assets/files/2025/02/drink_water.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p>Let‚Äôs finish this thing.</p>

<h3 id="finishing-touches">Finishing Touches</h3>

<p>Feeling proud of my work, I gathered my materials and tools for final assembly.</p>

<p>I took some wood glue and adhered the angled boards together. I found some extra screws that fit the holes in the VL53L0X sensor board and screwed it into place.</p>

<p>Obviously, I needed some kind of coaster to complete the coaster build. I took one of my old rubber(?) coasters and fastened it to the coaster plate with some mounting tape. üëå</p>

<p><img src="/assets/img/2025/02/smart_coaster_front.jpg" alt="Smart coaster build from the front" /><em>Final smart coaster from the front.</em></p>

<p>Behind the wedge in the back, I used hot glue to secure my super-compact Seeed Studio XIAO ESP32-S3 chip. <em>Seriously, this thing is tiny.</em></p>

<p><img src="/assets/img/2025/02/smart_coaster_rear_wiring.jpg" alt="Smart coaster build from the rear; showing wiring" /><em>Final smart coaster with the Seeed Studio XIAO ESP32-S3 hot glued down.</em></p>

<p>Early testing revealed that I needed to figure out how to keep my smart coaster from sliding around my desk.</p>

<p>Last year, I encountered a material that I thought would work perfectly for my situation. I had previously purchased a watch stand from Spigen. It had an interesting material at the bottom that they named ‚ÄúNanoTac‚Äù. This material kept the watch stand upright on the desk and resisted being knocked over, but it wasn‚Äôt <em>sticky</em>.</p>

<p>It‚Äôs somewhat similar to those sticky hands you‚Äôd get from the quarter machines as a kid, but in a much thinner layer. It‚Äôs pretty close to what I would describe as a silicone gel pad with some light textured etching on it. But I don‚Äôt think it was actually silicone.</p>

<blockquote>
  <p>If you‚Äôre trying to find a similar material, I‚Äôd recommend looking for ‚ÄúCar Dashboard Non Slip Mat‚Äù or ‚ÄúAnti Slip Gel Pads‚Äù online.</p>
</blockquote>

<p>After a bit of searching, I ended up finding some textured car dashboard pads that fit this description. I cut them to size and slapped them to the bottom of the coaster. They just kinda stay without any glue. The feet also dampen the sound when I set my water bottle down. It‚Äôs pretty neat!</p>

<p>This isn‚Äôt going anywhere! üö´üï∫</p>

<p><img src="/assets/img/2025/02/gel_pads.jpg" alt="Underside of smart coaster with 3 gel pads stuck to it" /><em>‚ÄúGel‚Äù pads installed underneath the coaster so it doesn‚Äôt slide around my desk.</em></p>

<h3 id="final-parts-breakdown">Final Parts Breakdown</h3>

<p>Here is the parts list for my smart coaster and the (approximate) cost of each item:</p>

<ul>
  <li>Existing rubber coaster ($1)</li>
  <li>Scrap wood ($1)</li>
  <li>Seeed Studio XIAO ESP32-S3 ($8)</li>
  <li>VL53L0X ToF sensor ($7)</li>
  <li>‚ÄúGel‚Äù pads ($6)</li>
  <li>Screws and mounting tape ($1-$5)</li>
  <li>Wood glue and hot glue ($1-$5)</li>
</ul>

<p>Total cost: <strong>$25-$33</strong></p>

<blockquote>
  <p>I actually had all of these parts laying around except the VL53L0X sensor and the ‚Äúgel‚Äù pads. So <em>my</em> actual cost was closer to $15. ü§ë</p>
</blockquote>

<p>Physically, the smart coaster is complete. But how does it work?</p>

<h2 id="how-the-smart-coaster-works-">How the Smart Coaster Works ü§ñ</h2>

<p>Assembling the hardware is satisfying, but the real intelligence lies in the automations that connect it all.</p>

<p>As I mentioned before, I‚Äôm using a VL53L0X ToF sensor to detect if a water bottle is present on the coaster. It is connected to a Seeed Studio XIAO ESP32-S3 chip, which is programmed using <a href="https://esphome.io/">ESPHome</a>. I connect the ESP32-S3 to my <a href="https://www.home-assistant.io/">Home Assistant</a> instance to handle the automations.</p>

<h3 id="high-level-rules">High-Level Rules</h3>

<p>During my workday, if 45 minutes pass and I haven‚Äôt picked up my water bottle, I‚Äôll receive a notification on my devices suggesting that I should take a drink. ‚åõÔ∏è</p>

<p>When I pick up the water bottle, the timer will reset back to 45 minutes, and any pre-existing drink notifications on my devices will be automatically dismissed. üö∞</p>

<p>After the timer ends, if I <em>don‚Äôt</em> pick up my water bottle, I will continue to receive notifications every 5 minutes until I pick up the water bottle. ‚ôªÔ∏è</p>

<h4 id="prerequisites">Prerequisites</h4>

<h5 id="required">Required</h5>
<ol>
  <li>Create a timer for the desired duration between drink reminders (I use 45 minutes). This will be used in the automations.
    <ul>
      <li><a href="https://www.home-assistant.io/integrations/timer/">https://www.home-assistant.io/integrations/timer/</a></li>
    </ul>
  </li>
</ol>

<h5 id="optional">Optional</h5>
<ol>
  <li>Create a counter that will increment every time I pick up my water bottle.
    <ul>
      <li>Useful for historical tracking.</li>
      <li><a href="https://www.home-assistant.io/integrations/counter/">https://www.home-assistant.io/integrations/counter/</a></li>
    </ul>
  </li>
  <li>Create a template sensor of the counter‚Äôs state.
    <ul>
      <li>Necessary to use it with the <code class="language-plaintext highlighter-rouge">utility_meter</code> integration below.</li>
      <li><code class="language-plaintext highlighter-rouge">{{states('counter.drink_counter')}}</code></li>
      <li><a href="https://www.home-assistant.io/integrations/template/">https://www.home-assistant.io/integrations/template/</a></li>
    </ul>
  </li>
  <li>Create a utility meter of the template sensor above.
    <ul>
      <li>Have the utility meter ‚Äúreset daily‚Äù.</li>
      <li>Useful for tracking daily water intake.</li>
      <li><a href="https://www.home-assistant.io/integrations/utility_meter/">https://www.home-assistant.io/integrations/utility_meter/</a></li>
    </ul>
  </li>
</ol>

<h4 id="automation-triggers">Automation Triggers</h4>

<p>My timer automatically kicks off during the workday (weekdays) at:</p>
<ul>
  <li>8:00 AM</li>
  <li>1:00 PM</li>
  <li>Whenever my laptop screen turns on (assuming the timer is not already running). This is more of a fallback in case I‚Äôm starting later than usual.</li>
</ul>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">Screen Off</code> is an attribute exposed on the <code class="language-plaintext highlighter-rouge">binary_sensor.mac_device_active</code> in the Home Assistant companion app on MacOS.</p>
</blockquote>

<h4 id="automation-actions">Automation Actions</h4>

<p>If the timer runs out naturally:</p>
<ul>
  <li>I get an alert</li>
  <li>The timer gets set back to 5 minutes (which will keep looping)</li>
</ul>

<p>If I pick up the water bottle:</p>
<ul>
  <li>The timer gets reset to 45 minutes</li>
  <li><strong>Any drink notifications on my devices get automatically dismissed</strong> (thank goodness; less notification spam)</li>
</ul>

<blockquote>
  <p>The <code class="language-plaintext highlighter-rouge">clear_notification</code> is a message that can be sent to clear Home Assistant notifications on a device that has a matching <code class="language-plaintext highlighter-rouge">data.tag</code>.</p>

  <p><a href="https://companion.home-assistant.io/docs/notifications/notifications-basic#clearing">https://companion.home-assistant.io/docs/notifications/notifications-basic#clearing</a></p>
</blockquote>

<h4 id="notification-conditions">Notification Conditions</h4>

<p>Notifications will only be sent if the following conditions are met:</p>
<ul>
  <li>The timer runs out</li>
  <li>During normal working hours (excludes lunch hour)</li>
  <li>My laptop screen is on (which means I‚Äôm at my computer next to my smart coaster)</li>
</ul>

<details>

  <summary>[Yaml] Home Assistant Automation</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Written for Home Assistant 2025.2.0</span>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Water Bottle Drink Timer &amp; Alerts</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">Automation to notify me when I haven't had anything to drink for a while.</span>
<span class="na">triggers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">event</span>
    <span class="na">event_type</span><span class="pi">:</span> <span class="s">timer.finished</span>
    <span class="na">event_data</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">timer-finished</span>
    <span class="na">alias</span><span class="pi">:</span> <span class="s">Water bottle timer finishes</span>
  <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Water bottle picked up</span>
    <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.esp_32_s3_01_water_bottle_present</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">reset-timer</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">1</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">08:00:00"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">start-timer</span>
    <span class="na">alias</span><span class="pi">:</span> <span class="s">Kick Off Timer (Morning)</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">13:00:00"</span>
    <span class="na">alias</span><span class="pi">:</span> <span class="s">Kick Off Timer (Afternoon)</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">start-timer</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.mac_device_active</span>
    <span class="na">attribute</span><span class="pi">:</span> <span class="s">Screen Off</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">false"</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">true"</span>
    <span class="na">alias</span><span class="pi">:</span> <span class="s">When screen turns on (backup condition)</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">screen-on</span>
<span class="na">conditions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">During standard working hours</span>
    <span class="na">condition</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">after</span><span class="pi">:</span> <span class="s2">"</span><span class="s">07:55:00"</span>
    <span class="na">before</span><span class="pi">:</span> <span class="s2">"</span><span class="s">16:55:00"</span>
    <span class="na">weekday</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">mon</span>
      <span class="pi">-</span> <span class="s">tue</span>
      <span class="pi">-</span> <span class="s">wed</span>
      <span class="pi">-</span> <span class="s">thu</span>
      <span class="pi">-</span> <span class="s">fri</span>
<span class="na">actions</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">start-timer</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.esp_32_s3_01_water_bottle_present</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="c1"># By cancelling the timer and starting it again, we can have it return to its original value at without needing to pass the duration in.</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.cancel</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.start</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">reset-timer</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="c1"># By cancelling the timer and starting it again, we can have it return to its original value at without needing to pass the duration in.</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.cancel</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.start</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
          <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">counter.increment</span>
                <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">target</span><span class="pi">:</span>
                  <span class="na">entity_id</span><span class="pi">:</span> <span class="s">counter.drink_counter</span>
              <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
                  <span class="na">message</span><span class="pi">:</span> <span class="s">clear_notification</span>
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">tag</span><span class="pi">:</span> <span class="s">water-drink-alert</span>
                <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
                <span class="na">alias</span><span class="pi">:</span> <span class="s">Clear notify.kyle</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">timer-finished</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">time</span>
                <span class="na">after</span><span class="pi">:</span> <span class="s2">"</span><span class="s">11:55:00"</span>
                <span class="na">before</span><span class="pi">:</span> <span class="s2">"</span><span class="s">13:05:00"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Not during lunch</span>
          <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Mac screen on</span>
            <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.mac_device_active</span>
            <span class="na">attribute</span><span class="pi">:</span> <span class="s">Screen Off</span>
            <span class="na">state</span><span class="pi">:</span> <span class="kc">false</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">parallel</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">data</span><span class="pi">:</span>
                  <span class="c1"># My cheater way to convert the timer's original duration into minutes for my notification. It will work for any _sane_ duration.</span>
                  <span class="na">title</span><span class="pi">:</span> <span class="s">ü•§ Drink some water</span>
                  <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                    <span class="s">You haven't had anything to drink in the last {% set</span>
                    <span class="s">remaining_time = state_attr('timer.water_bottle_timer',</span>
                    <span class="s">'duration').split(':') %}{{remaining_time[0] | int * 60 +</span>
                    <span class="s">remaining_time[1] | int }} minutes.</span>
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                    <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
                  <span class="na">data</span><span class="pi">:</span>
                    <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:beer</span>
                    <span class="na">group</span><span class="pi">:</span> <span class="s">water-drink-alert</span>
                    <span class="na">channel</span><span class="pi">:</span> <span class="s">water-drink-alert</span>
                    <span class="na">tag</span><span class="pi">:</span> <span class="s">water-drink-alert</span>
                    <span class="na">push</span><span class="pi">:</span>
                      <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
                <span class="na">action</span><span class="pi">:</span> <span class="s">notify.kyle</span>
              <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.start</span>
                <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
                <span class="na">data</span><span class="pi">:</span>
                  <span class="na">duration</span><span class="pi">:</span> <span class="s2">"</span><span class="s">00:05:00"</span>
                <span class="na">target</span><span class="pi">:</span>
                  <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
                <span class="na">alias</span><span class="pi">:</span> <span class="s">Short timer restart (reminder)</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">screen-on</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s">active</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">If timer not running</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="c1"># By cancelling the timer and starting it again, we can have it return to its original value at without needing to pass the duration in.</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.cancel</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">timer.start</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">timer.water_bottle_timer</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div>  </div>

</details>

<h2 id="esphome-configuration">ESPHome Configuration</h2>

<p>Here is a breakdown of the hardware and ESPHome configuration I used for my smart coaster:</p>

<ul>
  <li>Board:
    <ul>
      <li>Seeed Studio XIAO ESP32-S3
        <ul>
          <li>Super small form factor</li>
          <li>(I have a few lying around from Christmas üéÑ)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Sensor:
    <ul>
      <li>VL53L0X ToF sensor to detect the presence of a water bottle on the coaster
        <ul>
          <li>Super compact</li>
          <li>Easy to find online</li>
        </ul>
      </li>
      <li>The component already exists in ESPHome
        <ul>
          <li><a href="https://esphome.io/components/sensor/vl53l0x.html">https://esphome.io/components/sensor/vl53l0x.html</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<details>

  <summary>[Yaml] ESPHome Configuration</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Basic Config</span>
<span class="c1"># esp-32-s3-01</span>
<span class="c1"># Smart Coaster</span>
<span class="c1"># Update for 2025.5.0</span>

<span class="na">substitutions</span><span class="pi">:</span>
  <span class="na">board_id</span><span class="pi">:</span> <span class="s">esp-32-s3-01</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">Smart Coaster</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">smart-coaster</span>

<span class="na">wifi</span><span class="pi">:</span>
  <span class="na">ssid</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_ssid</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_password</span>

  <span class="c1"># Enable fallback hotspot (captive portal) in case wifi connection fails</span>
  <span class="na">ap</span><span class="pi">:</span>
    <span class="na">ssid</span><span class="pi">:</span> <span class="s2">"</span><span class="s">${board_id}</span><span class="nv"> </span><span class="s">Hotspot"</span>
    <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ap_hotspot_password</span>

<span class="c1"># Enable captive portal if wifi ever changes</span>
<span class="na">captive_portal</span><span class="pi">:</span>

<span class="c1"># Enable Home Assistant API</span>
<span class="na">api</span><span class="pi">:</span>
  <span class="na">encryption</span><span class="pi">:</span>
    <span class="na">key</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">encryption_pre_shared_key</span>

<span class="na">ota</span><span class="pi">:</span>
  <span class="na">platform</span><span class="pi">:</span> <span class="s">esphome</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ota_password</span>

<span class="na">esphome</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">${name}</span>
  <span class="na">comment</span><span class="pi">:</span> <span class="s">${board_id}</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">${friendly_name}</span>

<span class="na">esp32</span><span class="pi">:</span>
  <span class="na">board</span><span class="pi">:</span> <span class="s">esp32-s3-devkitc-1</span>
  <span class="na">framework</span><span class="pi">:</span>
    <span class="na">type</span><span class="pi">:</span> <span class="s">arduino</span>

<span class="c1"># Enable logging</span>
<span class="na">logger</span><span class="pi">:</span>

<span class="na">i2c</span><span class="pi">:</span>
  <span class="na">id</span><span class="pi">:</span> <span class="s">bus_a</span>
  <span class="na">sda</span><span class="pi">:</span> <span class="s">GPIO05</span>
  <span class="na">scl</span><span class="pi">:</span> <span class="s">GPIO06</span>
  <span class="na">scan</span><span class="pi">:</span> <span class="kc">true</span>

<span class="na">sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">vl53l0x</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">vl53l0x_sensor</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">VL53L0x</span><span class="nv"> </span><span class="s">Distance"</span>
    <span class="na">update_interval</span><span class="pi">:</span> <span class="s">500ms</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">mm"</span>
    <span class="na">filters</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">multiply</span><span class="pi">:</span> <span class="m">1000</span>

<span class="na">binary_sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Water</span><span class="nv"> </span><span class="s">Bottle</span><span class="nv"> </span><span class="s">Present"</span>
    <span class="na">lambda</span><span class="pi">:</span> <span class="pi">|-</span>
      <span class="s">if (id(vl53l0x_sensor).has_state()) {</span>
        <span class="s">// 150 mm threshold</span>
        <span class="s">return id(vl53l0x_sensor).state &lt; 150;</span>
      <span class="s">} else {</span>
         <span class="s">// Return false if the sensor has no state yet</span>
        <span class="s">return false;</span>
      <span class="s">}</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">occupancy</span>

<span class="c1"># Enables status LED</span>
<span class="na">status_led</span><span class="pi">:</span>
  <span class="na">pin</span><span class="pi">:</span> 
    <span class="na">number</span><span class="pi">:</span> <span class="s">GPIO21</span>
    <span class="na">inverted</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div>  </div>

</details>

<h2 id="what-would-i-do-differently">What Would I Do Differently?</h2>

<p>If I had the gumption and endless free time for this project, I would:</p>

<ul>
  <li>Use a dark walnut wood stain on the coaster plate</li>
  <li>Carve out a small channel or hole in the coaster plate to hide the sensor wiring</li>
  <li>Figure out how to recess the sensor to the coaster plate</li>
  <li>Cover the sensor with a thin layer of acrylic to better hide and protect it</li>
  <li>Solder wires between the boards</li>
  <li>Enclose the back wedge with a thin layer of wood or black acrylic</li>
</ul>

<h2 id="update-2025-06-17">Update: 2025-06-17</h2>

<p>I‚Äôve been using my smart coaster for a few months, and it‚Äôs made me more conscious about my water intake. So far I‚Äôve received ~700+ drink reminders, or around 9 each day.</p>

<p>As this has become one of my most consistently used devices, I decided to treat myself and tackle some items from the wishlist I posted a few months back.</p>

<ul>
  <li>‚úÖ Use a dark walnut wood stain on the coaster plate</li>
  <li>‚úÖ Carve out a small channel or hole in the coaster plate to hide the sensor wiring</li>
  <li>‚úÖ Figure out how to recess the sensor to the coaster plate</li>
  <li>‚úÖ Cover the sensor with a thin layer of acrylic to better hide and protect it</li>
  <li>‚úÖ Solder wires between the boards</li>
  <li>‚ùå <del>Enclose the back wedge with a thin layer of wood or black acrylic</del> With organized wiring, this should be unnecessary</li>
</ul>

<h3 id="first-attempt-1">First Attempt</h3>

<p>I figured this would be a straightforward update. I would take some of my new tools and create an updated version of my coaster plate that addresses the aesthetic complaints I had with the first version.</p>

<p>To get things started, I needed some design ideas. I wanted to match some of the mid-century modern elements that are already present in my home. After toying around with some thoughts, I enlisted Gemini to help me envision some different color changes in my original coaster.</p>

<p><img src="/assets/img/2025/02/smart_coaster_ai_reimagined.png" alt="A Gemini AI tweaked image of my original coaster in dark walnut and a green coaster pad" /><em>Gemini AI‚Äôs re-imagining of my original coaster with a dark walnut stain and a green coaster pad</em></p>

<p>The above image is what inspired me to mix a dark walnut wood stain with some green elements. To complement the dark wood, I eventually decided on a dark sage green silicone pad and braided USB-C cable. I ordered the parts and went to work forming the wooden base.</p>

<p>The first thing I did was gather the pine wood that I used for the original coaster plate. I cut it down to size and added some blinders in the back to hide the electronics from the side. I glued it all together and let it dry overnight.</p>

<p>If I owned (or knew how to use) a CNC router, I would have used it to:</p>

<ol>
  <li>Carve out the recessed hole for the ToF sensor</li>
  <li>Cut a shallow recess to inlay an acrylic plate cover</li>
</ol>

<p>But I didn‚Äôt have those tools. So I pulled out my handheld rotary tool and carved out the recessed hole for the ToF sensor with my carving bits. My goal was to make the sensor flush-mounted to the coaster backing. This would make it easier to hide.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v2_before_stain.jpg" alt="A Smart Coaster prototype in eastern white pine" /><em>My Smart Coaster V2 in (eastern white?) pine before staining</em></p>

<h4 id="hiding-the-sensor">Hiding the Sensor</h4>

<p>Reminder: My ToF sensor needs to be able to see the laser dot reflection to measure the distance from an object. So whatever material I use to hide it needs to possess <em>some</em> kind of transparent properties.</p>

<p>My original plan was to adhere a <em>super thin</em>, black, translucent acrylic sheet over the sensor. I wasn‚Äôt able to locate any, so I did the next best thing. I decided to use some ‚ÄúLED dimming stickers‚Äù. LED dimming stickers are sold as devices that can help dim blindingly bright electronic LEDs that illuminate a room at night.</p>

<p>You can easily find these magical stickers online, but they‚Äôre essentially glossy, thin plastic stickers that block some amount of light from shining through. The best way to describe this is like a black-tinted Kapton tape.</p>

<p>Through some early testing, I found that covering my ToF sensor with one of these stickers successfully hides the sensor while still allowing the laser light to still detect distances. ‚úÖ</p>

<p>With the plan in motion, I switched back to the coaster board. I sanded down the dry prototype and began to apply a dark walnut wood stain.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v2_after_stain.jpg" alt="A Smart Coaster prototype with a poorly completed stain job" /><em>My Smart Coaster V2 after a terrible staining job with super inconsistent grain</em></p>

<p>The results looked <del>beautiful</del> like trash üóëÔ∏è. Seriously, this was a disaster. I‚Äôve done some passable wood staining in the past for trim, railings, and speakers. I‚Äôve even used the <em>exact</em> same wood stain when I refinished the top on my Sansui SP-1700 speaker below!</p>

<p><img src="/assets/img/2025/02/sansui_sp-1700_speaker_refinish.jpg" alt="Refinishing Sansui SP-1700 speakers" /><em>Proof that I‚Äôm not entirely incompetent by demonstrating the same stain gel to repair and re-finish my Sansui SP-1700 3-Way Speaker</em></p>

<p>After 3 coats, the stain was still uneven and blotchy from the cheap pine board I was using. Instead of trying to fix the problem, I made the decision to use a superior material.</p>

<h3 id="second-attempt-1">Second Attempt</h3>

<p>Enter <em>black walnut</em>. If I was trying to get a ‚Äúdark walnut‚Äù look for my coaster, why not just use black walnut? In quantities this small, it doesn‚Äôt really hurt the bank too much. üí∞</p>

<p>I found some solid 1/2‚Äù black walnut ‚Äòthin stock‚Äô that fit the dimensions I needed and ordered it. Oh wow, let me tell you, this stuff is <em>gorgeous</em>. You can find some really nice grain patterns in the wood, especially when it‚Äôs wet.</p>

<p>I took this opportunity to add an additional angled front undercut that is parallel to the slant on the rear of the back wedge. I think it gives the coaster a nice, subtle flow with something less boring.</p>

<p>Since everything was still in pieces, I also carved out a channel in the back wedge where I planned to hide the ToF sensor and wiring. You can see my test fitment below.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_unglued.jpg" alt="Green painter's tape covering the bare black " /><em>Preparing the surfaces of the black walnut coaster with painter‚Äôs tape to keep the glue from spreading on the wood</em></p>

<p>Learning from some mistakes on my previous prototype, I wrapped the edges of my coaster with some green painter‚Äôs tape so the wood glue wouldn‚Äôt squeeze out everywhere. I made sure to remove these after pressing the pieces together and before the glue dried so they wouldn‚Äôt get stuck underneath any edges. I theorize this was one of my issues in my earlier prototype, where the stain was unable to penetrate the pine wood properly due to the glue soaking into the wood.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v2_and_v3.jpg" alt="A poorly stained pine coaster on the left and an unstained/un-oiled black walnut coaster on the right" /><em>A comparison showing the abomination of my stained V2 coaster versus my un-oiled V3 coaster</em></p>

<p>After the glue dried, I sliced off the back ears and sanded it down with some 220-grit sandpaper to hide my miter saw cuts. Once everything was smooth, I began to apply the finish.</p>

<h4 id="applying-the-finish">Applying the Finish</h4>

<p>Since this is already a dark wood, I chose not to stain it, or else I might lose some of the lighter grain definition. I went with Osmo Polyx Hard Wax Oil #3054 (Clear Satin) to give it a nice sheen. It was very easy to work with. After 2 coats, this was the result. üò≥</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_after_oil.jpg" alt="A black walnut coaster with Osmo Polyx Hard Wax Oil #3054 rubbed in" /><em>The beautiful sheen of my black walnut coaster plate after rubbing in Osmo Polyx Hard Wax Oil #3054</em></p>

<p>It looks so good! I really wish I had used a nicer wood like this from the start. But using pine in the earlier prototypes gave me plenty of opportunities to refine my design.</p>

<p>After a bit of drying time, I added the gel pads to the bottom of the coaster (reusing the same ones as before). I inserted the newly soldered ToF sensor and routed the wires into the back pocket, where they connected to Seeed Studio XIAO ESP32-S3. I hot-glued the ESP32-S3 into place and made sure everything was working properly.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_backside.jpg" alt="The backside of my smart coaster showing a Seeed Studio XIAO ESP32-S3" /><em>The backside of my Smart Coaster showing the compact install of the Seeed Studio XIAO ESP32-S3</em></p>

<p>Here is another view of the <em>nearly completed</em> Smart Coaster V3 from the front. At this point, everything was functional again. But I needed to take care of some finishing touches before I could call it complete.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_before_sticker.jpg" alt="A nearly completed Smart Coaster made of black walnut with an exposed time-of-flight sensor in the back" /><em>The nearly complete Smart Coaster V3 with its recessed time-of-flight sensor still exposed</em></p>

<h4 id="learning-about-silicone">Learning About Silicone</h4>

<p>I had to stop my coaster pad from sliding off of the wooden base plate. The reason I‚Äôm using a coaster pad is that it helps guide the placement of the water bottle without looking. If I didn‚Äôt have this, I might accidentally set my water bottle down on the edge of the coaster plate where it could tip over.</p>

<p>To mount the silicone coaster pad to my wooden base, I tried to use some of the same mounting tape I used in my original prototype (which I later learned was rubber). That didn‚Äôt work well. The tape was actually sticking to the paper backing better than it was to the silicone coaster pad. üôÉ</p>

<p>Next, I tried to hot glue it. If you‚Äôve worked with silicone before, you can probably guess how that went. The hot glue blobs peeled right off of the silicone pad. ü•∏</p>

<p>Those lessons gave me hands-on learning on how silicone is <em>extremely</em> hydrophobic and non-porous. To adhere silicone to anything, one needs to choose more appropriate alternatives like a silicone-based adhesive.</p>

<p>Lucky for me, I already had some lying around. I ended up using some <a href="https://www.permatex.com/products/adhesives-and-sealants/adhesives-sealant/permatex-black-silicone-adhesive-sealant-3-oz/">Permatex 81158 Black Silicone Adhesive Sealant</a> from the depths of my tool shelves. So far it‚Äôs holding! ü§û</p>

<h4 id="playing-with-stickers">Playing With Stickers</h4>

<p>To wrap up the coaster rebuild, I had to cover the ToF sensor. Putting a cover over it protects the sensor from dust and debris while also hiding any electronics that might be visible from view.</p>

<p>Inspired by mid-century atomic design, I wanted to overlay a stretched black diamond accent piece. My goal was to match the design language that I was already applying in the wood angles. Using my X-Acto knife, I sliced away a diamond-shaped accent from the blank sticker sheet and placed it over the sensor.</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_sticker_placement.jpg" alt="A sticker covering the time-of-flight sensor on my Smart Coaster V3" /><em>Sticker placement covering the ToF sensor on my Smart Coaster V3 (ignore the pencil alignment marks ‚úèÔ∏è)</em></p>

<p>If my sticker gets damaged over time, I could always switch to using one of the pre-cut strips in a horizontal line for a greater contrast. But I think the diamond shape looks better.</p>

<p>And we made it. Here‚Äôs the final (for now) result of my Smart Coast V3! ‚ú®</p>

<p><img src="/assets/img/2025/02/smart_coaster_v3_front.jpg" alt="A fully assembled Smart Coaster made from black walnut and a hidden time-of-flight sensor" /><em>The final Smart Coaster V3 made from black walnut and a hidden time-of-flight sensor behind the black translucent sticker</em></p>

<h2 id="conclusion">Conclusion</h2>

<p><img src="/assets/img/2025/02/smart_coaster_integration.jpg" alt="Smart Coaster V1 build with Home Assistant dashboard showing data in the back" /><em>Smart Coaster V1 with its data being displayed on my Home Assistant dashboard as a notification nudges me to drink water</em></p>

<p>I want to make sure I remember to drink water. I think I‚Äôve figured out a good approach that avoids any feedback loop from tracking and interacting with my phone. I think my solution reduces any additional cognitive load by only nudging me when appropriate and automatically dismissing all notifications when I pick up my water bottle.</p>

<p>From conception to completion, this project only took 2 days‚Äîa record for me. üèÉ</p>

<p>The final result is a smart coaster that is delicately reminding me to drink water and staying out of my way if I drink water naturally.</p>

<p>All of this to say, <strong>my temporary prototype solution is good enough to be permanent¬π</strong>. ü•§üññ</p>

<p>¬πUntil I decided to build a better looking one months later. üòÖ</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="small project" /><summary type="html"><![CDATA[Forget smart water bottles! I created a 'temporarily permanent' smart coaster to solve my dehydration woes. If I've lost track, my coaster nudges me to drink water, and refrains when I've kept up.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2025/02/smart_coaster_v3_front.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2025/02/smart_coaster_v3_front.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Soo Machine &amp;amp; Auto: Unearthing a Lost Legacy, Amplified by AI</title><link href="https://www.kyleniewiada.org/blog/2024/09/soo-machine-and-auto-ai-amplified-legacy/" rel="alternate" type="text/html" title="Soo Machine &amp;amp; Auto: Unearthing a Lost Legacy, Amplified by AI" /><published>2024-09-09T08:00:00-04:00</published><updated>2024-09-09T08:00:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2024/09/soo-machine-and-auto-ai-amplified-legacy</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2024/09/soo-machine-and-auto-ai-amplified-legacy/"><![CDATA[<h2 id="late-nights-and-legacy-a-digital-excavation-into-soo-machine--auto">Late Nights and Legacy: A Digital Excavation into Soo Machine &amp; Auto</h2>

<p>‚ÄúSoo Machine &amp; Auto Co.‚Äù It was a name lost to time, a puzzle with missing pieces. Until a few months ago, I‚Äôd never even heard of this car dealership. But when I learned my <em>great-grandfather</em> was once their customer, a spark ignited. A research volunteer provided the initial clues, setting the stage for my own late-night quest. In the quiet hours after my kids were tucked into bed, with an AI as my guide, I embarked on a journey to piece together the rest of the story.</p>

<p>This captivating project has led me down an intriguing path, merging historical research with the power of technology and a sprinkle of late-night coding adventures. It‚Äôs a tale of web scraping, AI-powered analysis, and the thrill of discovery‚Äîall in pursuit of breathing life back into this forgotten chapter of automotive history. Join me on this expedition as we blend human expertise and artificial intelligence to uncover the secrets of Soo Machine &amp; Auto Co.</p>

<blockquote>
  <p>My story is fun, but if you‚Äôd like to skip it, you‚Äôll find all my discoveries about Soo Machine &amp; Auto Co. in the <a href="#soo-machine--auto-co-a-brief-history">history section</a> below.</p>
</blockquote>

<details>

  <summary>Post Changelog</summary>

  <ul>
    <li><strong>2024-09-09</strong>: Extended LaSalle years based on a newly found advertisement.</li>
    <li><strong>2024-09-10</strong>: Update Robert Morrison‚Äôs year of birth and include new adoptive theory.</li>
  </ul>

</details>

<div class="line-separator"></div>
<h2>Table of Contents</h2>
<div class="table-of-contents">
<ul id="markdown-toc">
  <li><a href="#late-nights-and-legacy-a-digital-excavation-into-soo-machine--auto" id="markdown-toc-late-nights-and-legacy-a-digital-excavation-into-soo-machine--auto">Late Nights and Legacy: A Digital Excavation into Soo Machine &amp; Auto</a>    <ul>
      <li><a href="#the-spark-a-curated-packet-of-information" id="markdown-toc-the-spark-a-curated-packet-of-information">The Spark: A Curated Packet of Information</a></li>
      <li><a href="#the-hunt-identifying-relevant-articles" id="markdown-toc-the-hunt-identifying-relevant-articles">The Hunt: Identifying Relevant Articles</a></li>
      <li><a href="#the-solution-automation-to-the-rescue" id="markdown-toc-the-solution-automation-to-the-rescue">The Solution: Automation to the Rescue</a>        <ul>
          <li><a href="#the-gatherer" id="markdown-toc-the-gatherer">The Gatherer</a></li>
          <li><a href="#the-link-extractor" id="markdown-toc-the-link-extractor">The Link Extractor</a></li>
          <li><a href="#the-downloader" id="markdown-toc-the-downloader">The Downloader</a></li>
        </ul>
      </li>
      <li><a href="#the-challenges-troubleshooting-and-optimization" id="markdown-toc-the-challenges-troubleshooting-and-optimization">The Challenges: Troubleshooting and Optimization</a></li>
      <li><a href="#the-transformation-preparing-data-for-ai-analysis" id="markdown-toc-the-transformation-preparing-data-for-ai-analysis">The Transformation: Preparing Data for AI Analysis</a></li>
      <li><a href="#the-tumble-notebooklm-and-its-limits" id="markdown-toc-the-tumble-notebooklm-and-its-limits">The Tumble: NotebookLM and its Limits</a></li>
      <li><a href="#the-reduction-crafting-a-dataset-for-ai-analysis" id="markdown-toc-the-reduction-crafting-a-dataset-for-ai-analysis">The Reduction: Crafting a Dataset for AI Analysis</a></li>
      <li><a href="#the-payoff-unlocking-lost-secrets-with-notebooklm" id="markdown-toc-the-payoff-unlocking-lost-secrets-with-notebooklm">The Payoff: Unlocking Lost Secrets with NotebookLM</a></li>
    </ul>
  </li>
  <li><a href="#soo-machine--auto-co-a-brief-history" id="markdown-toc-soo-machine--auto-co-a-brief-history">Soo Machine &amp; Auto Co.: A Brief History</a>    <ul>
      <li><a href="#1910s" id="markdown-toc-1910s">1910s</a></li>
      <li><a href="#1920s" id="markdown-toc-1920s">1920s</a></li>
      <li><a href="#1930s" id="markdown-toc-1930s">1930s</a></li>
      <li><a href="#1940s" id="markdown-toc-1940s">1940s</a></li>
      <li><a href="#1950s" id="markdown-toc-1950s">1950s</a></li>
      <li><a href="#1960s" id="markdown-toc-1960s">1960s</a></li>
      <li><a href="#1970s" id="markdown-toc-1970s">1970s</a></li>
      <li><a href="#1980s" id="markdown-toc-1980s">1980s</a></li>
      <li><a href="#a-legacy" id="markdown-toc-a-legacy">A Legacy</a></li>
      <li><a href="#dealership-name-changes" id="markdown-toc-dealership-name-changes">Dealership Name Changes</a></li>
      <li><a href="#important-individuals" id="markdown-toc-important-individuals">Important Individuals</a></li>
      <li><a href="#car-makes-carried" id="markdown-toc-car-makes-carried">Car Makes Carried</a></li>
    </ul>
  </li>
  <li><a href="#information-bounties" id="markdown-toc-information-bounties">Information Bounties</a>    <ul>
      <li><a href="#50-bounties" id="markdown-toc-50-bounties">$50 Bounties</a></li>
      <li><a href="#25-bounties" id="markdown-toc-25-bounties">$25 Bounties</a></li>
    </ul>
  </li>
  <li><a href="#reflections-the-joy-of-discovery-and-the-power-of-automation" id="markdown-toc-reflections-the-joy-of-discovery-and-the-power-of-automation">Reflections: The Joy of Discovery and the Power of Automation</a></li>
</ul>

</div>
<div class="line-separator"></div>

<h3 id="the-spark-a-curated-packet-of-information">The Spark: A Curated Packet of Information</h3>

<p>My journey began with a spark of curiosity. This summer, I discovered from some documents that my great-grandfather purchased a vehicle from a dealership called ‚ÄúSoo Machine &amp; Auto Co.‚Äù decades before I was born. Intrigued by this connection to a car in the family, I set out to learn more about the dealership. But when I searched online, I was only met with a single page of results from Google. üòî</p>

<p><img src="/assets/img/2024/09/dealership_delivery_card.jpeg" alt="An original Owner Protection Plan booklet scan showing a vehicle was placed into service on November 13, 1963 at Soo Machine &amp; Auto Co. in Sault Ste. Marie, Michigan. It was signed the by the secretary, Dorothy Mae (Ellis) Jollineau" /><em>The original Owner Protection Plan booklet includes a page showing the vehicle was placed into service on November 13, 1963, at Soo Machine &amp; Auto Co. in Sault Ste. Marie, Michigan. This date matches the stamped Ident-O-Plate. It was signed by the secretary, <a href="https://web.archive.org/web/20240828143045/https://www.farleyestesdowdle.com/obituaries/dorothy-jollineau">Dorothy Mae (Ellis) Jollineau</a>.</em></p>

<p>My initial online searches had yielded frustratingly little. But then, a glimmer of hope emerged from an unexpected source. I learned about historical societies. These dedicated organizations chronicle and archive the stories of their communities. It was a resource I‚Äôd completely overlooked! I discovered that the city where Soo Machine &amp; Auto once stood had its own historical society, a beacon in my quest for answers.</p>

<p>I reached out to the <a href="https://www.cchsmi.com/">Chippewa County Historical Society</a> and was delighted to discover that they did indeed know of Soo Machine &amp; Auto. We worked out a deal where I arranged for some photos from their archive and for them to search through their records for information about Soo Machine &amp; Auto Co. We agreed on the scope, and I formalized my request. Sandy, one of their volunteers, embarked on a 4-hour research mission on the dealership and its key individuals. She was extremely helpful and returned back with a packet of excerpts from historical documents related to the Soo Machine &amp; Auto and its owners. My first taste of information was a tantalizing glimpse into the dealership‚Äôs past.</p>

<p>The excerpts, which spanned from 1911 to 1974, illustrated the company‚Äôs growth and development. From its early days as a Rambler dealership to a multi-line dealership of Buick, Cadillac, Pontiac, and GMC Trucks. The documents highlighted the significant role that Roy D. Hollingsworth played in the company‚Äôs history, including his ownership, community involvement, and military service. Furthermore, the inclusion of personal letters from <a href="https://en.wikipedia.org/wiki/Chase_Osborn">Governor Chase S. Osborn</a> to Hollingsworth emphasized his standing in the community.</p>

<p>Overall, these snippets painted a vivid picture of a successful local business and its dedicated owners, deeply intertwined with the Sault Ste. Marie community. But I still had unanswered questions. I wanted to dig deeper.</p>

<h3 id="the-hunt-identifying-relevant-articles">The Hunt: Identifying Relevant Articles</h3>

<p>A key learning from the information packet was noticing the overwhelming appearance of articles from a specific local newspaper, The Evening News in Sault Ste. Marie. Looking to continue my quest, I turned to their website before stumbling upon their digital archive. I was fortunate to find that the newspaper had already digitized much of their collection and partnered with a company called Newsbank to provide access to its archive of historical newspapers.</p>

<blockquote>
  <p>The Evening News digital archive: <a href="https://sooeveningnews.newsbank.com">https://sooeveningnews.newsbank.com</a></p>
</blockquote>

<p>The archive held thousands of newspapers spanning decades. Buried somewhere in the articles was the evolution of the Soo Machine &amp; Auto Co. I was eager to extract valuable insights from this treasure trove, but the sheer volume of data presented a formidable challenge.</p>

<p>My first search in the archive, ‚ÄúSoo Machine‚Äù, returned over 8,000 results! This was leagues ahead of anything I had uncovered through Google. If I searched for ‚ÄúRoy Hollingsworth‚Äù, it returned another 1,000 results! I was overwhelmed by the sheer volume of information. But I was determined to uncover the dealership‚Äôs story, piece by piece. I had to find a way to navigate this vast archive and extract the information I needed.</p>

<p>My first task was to pinpoint articles of interest within the massive repository. I meticulously crafted keyword searches, focusing on the dealership‚Äôs names, family names, and other pertinent terms. After countless refinements, I had amassed a potential list of over 12,000 pages of articles and ads.</p>

<p>The next step was to download these articles, a task complicated by the website‚Äôs sluggish performance and the time constraints of their access tiers. The ‚Äúunlimited access‚Äù tier on the newspaper website would only last a mere 24 hours before I needed to renew at $20 a pop. Good thing it‚Äôs ‚Äúunlimited‚Äù, right? üôÑ</p>

<h3 id="the-solution-automation-to-the-rescue">The Solution: Automation to the Rescue</h3>

<p>Faced with the daunting task of destroying my wrists from 100,000+ clicks, I turned to the power of automation. I harnessed the capabilities of web scraping and scripting to streamline the data collection process. I created 3 different scripts to aid in my quest: The Gatherer, The Link Extractor, and The Downloader.</p>

<h4 id="the-gatherer">The Gatherer</h4>

<p>After executing a search for a topic of interest (like ‚ÄúSoo Machine‚Äù), my first script would tirelessly navigate through each page of search results and bookmark each article to the website‚Äôs ‚Äúfilebox‚Äù. The website‚Äôs filebox was a storage area where documents were marked and set aside for later use. This process helped avoid duplicate articles since my search terms would often overlap. The code that performed this work was a simple Tampermonkey UserScript. The script clicked the <code class="language-plaintext highlighter-rouge">Add to My Filebox</code> button next to each article, navigated to the next page, and repeated the process.</p>

<p><img src="/assets/img/2024/09/search_results.png" alt="Search results for &quot;Soo Machine&quot; on The Sault News Archives" /><em>Search results for ‚ÄúSoo Machine‚Äù. The highlighted ‚ÄúAdd to My Filebox‚Äù buttons next to each article are what the script would automatically click.</em></p>

<blockquote>
  <p>The scripts and code presented here were developed in collaboration with <a href="https://gemini.google.com/">Gemini</a>. While I aimed for efficiency in completing my project, there might be room for further optimization and bug fixes. Feel free to utilize and adapt this code as a starting point for your own endeavors.</p>
</blockquote>

<details>

  <summary>[Javascript] AddToMyFileboxLinks UserScript</summary>

  <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ==UserScript==</span>
<span class="c1">// @name         Auto Add to My Filebox and 'Click' Next Page</span>
<span class="c1">// @namespace    https://sooeveningnews.newsbank.com</span>
<span class="c1">// @version      1.0</span>
<span class="c1">// @description  Automatically clicks "Add to My Filebox" links and navigates to the next page</span>
<span class="c1">// @author       Kyle Niewiada</span>
<span class="c1">// @match        https://sooeveningnews.newsbank.com/*</span>
<span class="c1">// @grant        none</span>
<span class="c1">// ==/UserScript==</span>

<span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>

    <span class="k">async</span> <span class="kd">function</span> <span class="nf">clickAddToMyFileboxLinks</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">links</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
        <span class="nx">links</span><span class="p">.</span><span class="nf">forEach</span><span class="p">(</span><span class="nx">link</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">link</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nf">trim</span><span class="p">()</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Add to My Filebox</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">link</span><span class="p">.</span><span class="nf">click</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">});</span>
    <span class="p">}</span>

    <span class="kd">function</span> <span class="nf">waitForNoAddToMyFileboxLinks</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nc">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">intervalId</span> <span class="o">=</span> <span class="nf">setInterval</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
                <span class="kd">const</span> <span class="nx">allLinks</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
                <span class="kd">const</span> <span class="nx">remainingLinks</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">allLinks</span><span class="p">).</span><span class="nf">filter</span><span class="p">(</span><span class="nx">link</span> <span class="o">=&gt;</span>
                    <span class="nx">link</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nf">trim</span><span class="p">()</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Add to My Filebox</span><span class="dl">'</span>
                <span class="p">);</span>

                <span class="c1">// Check for timeout error dialog</span>
                <span class="kd">const</span> <span class="nx">timeoutDialog</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">div[role="dialog"][aria-labelledby="ui-dialog-title-timeoutMsg"]</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// Adjust selector if needed</span>

                <span class="k">if </span><span class="p">(</span><span class="nx">timeoutDialog</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nf">clearInterval</span><span class="p">(</span><span class="nx">intervalId</span><span class="p">);</span>
                    <span class="nf">reject</span><span class="p">(</span><span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="dl">"</span><span class="s2">Timeout error dialog detected</span><span class="dl">"</span><span class="p">));</span>
                    <span class="k">return</span><span class="p">;</span> <span class="c1">// Stop further execution within this function</span>
                <span class="p">}</span>

                <span class="k">if </span><span class="p">(</span><span class="nx">remainingLinks</span><span class="p">.</span><span class="nx">length</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nf">clearInterval</span><span class="p">(</span><span class="nx">intervalId</span><span class="p">);</span>
                    <span class="nf">resolve</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
        <span class="p">});</span>
    <span class="p">}</span>

    <span class="kd">function</span> <span class="nf">clickNextPageLink</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">nextPageListItem</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">li.page-next</span><span class="dl">'</span><span class="p">);</span>
        <span class="k">if </span><span class="p">(</span><span class="nx">nextPageListItem</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">nextPageLink</span> <span class="o">=</span> <span class="nx">nextPageListItem</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">nextPageLink</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">nextPageLink</span><span class="p">.</span><span class="nf">click</span><span class="p">();</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">No link found under the 'Next Page' button.</span><span class="dl">"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">No 'Next Page' button found.</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// Main execution flow (wrapped in an event listener)</span>
    <span class="nb">window</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">load</span><span class="dl">'</span><span class="p">,</span> <span class="k">async </span><span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">await</span> <span class="nf">clickAddToMyFileboxLinks</span><span class="p">();</span>
        <span class="k">await</span> <span class="nf">waitForNoAddToMyFileboxLinks</span><span class="p">();</span>
        <span class="nf">clickNextPageLink</span><span class="p">();</span>
    <span class="p">});</span>
<span class="p">})();</span>
</code></pre></div>  </div>
</details>

<h4 id="the-link-extractor">The Link Extractor</h4>

<p>Once every file of interest was in my filebox, I had to find a way to download them. Each result in my filebox contained a link that would take me to the real article, assuming I had already paid for access.</p>

<p>Instead of waiting to collect the links during my paid access, I figured I could be more efficient by copying all of the article links in from my filebox in advance. I wrote my second script to navigate through my entire filebox, page by page, and save the direct links to each article page. This little maneuver to collect all links in my filebox took 3 hours. ‚åõÔ∏è</p>

<p><img src="/assets/img/2024/09/filebox_pages.png" alt="A sample of my saved articles in the filebox on The Sault News Archives" /><em>Showing the saved articles in my filebox. The script would copy and save the url from each ‚ÄúNewspaper Article‚Äù link before navigating to the next page and repeating.</em></p>

<details>

  <summary>[Javascript] Auto-Save Newspaper Article Links UserScript</summary>

  <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// ==UserScript==</span>
<span class="c1">// @name         Auto-Save Newspaper Article Links</span>
<span class="c1">// @namespace    https://sooeveningnews.newsbank.com</span>
<span class="c1">// @version      1.0</span>
<span class="c1">// @description  Automatically download the URLs to Newspaper Article pages.</span>
<span class="c1">// @author       Kyle Niewiada</span>
<span class="c1">// @match        https://sooeveningnews.newsbank.com/my-filebox/saved-articles*</span>
<span class="c1">// @require      https://raw.githubusercontent.com/eligrey/FileSaver.js/master/dist/FileSaver.min.js</span>
<span class="c1">// @grant        none</span>
<span class="c1">// ==/UserScript==</span>

<span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>

    <span class="c1">// Function to log URLs</span>
    <span class="kd">function</span> <span class="nf">logNewspaperArticleLinks</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">allLinks</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelectorAll</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
        <span class="kd">let</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kd">let</span> <span class="nx">urls</span> <span class="o">=</span> <span class="p">[];</span> <span class="c1">// Array to store URLs</span>

        <span class="nx">allLinks</span><span class="p">.</span><span class="nf">forEach</span><span class="p">(</span><span class="nx">link</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">link</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nf">trim</span><span class="p">()</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">Newspaper Article</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">link</span><span class="p">.</span><span class="nx">href</span><span class="p">);</span>
                <span class="nx">urls</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">link</span><span class="p">.</span><span class="nx">href</span><span class="p">);</span> <span class="c1">// Add URL to the array</span>
                <span class="nx">count</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">});</span>

        <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Total Newspaper Article Links:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">count</span><span class="p">);</span>

        <span class="c1">// Create a blob from the URLs</span>
        <span class="kd">let</span> <span class="nx">blobContent</span> <span class="o">=</span> <span class="nx">urls</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// Join URLs with newlines</span>
        <span class="kd">let</span> <span class="nx">blob</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Blob</span><span class="p">([</span><span class="nx">blobContent</span><span class="p">],</span> <span class="p">{</span><span class="na">type</span><span class="p">:</span> <span class="dl">"</span><span class="s2">text/plain;charset=utf-8</span><span class="dl">"</span><span class="p">});</span>

        <span class="c1">// Get the page number</span>
        <span class="kd">let</span> <span class="nx">pageNumberSpan</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">.page-current</span><span class="dl">'</span><span class="p">);</span>
        <span class="kd">let</span> <span class="nx">pageNumber</span> <span class="o">=</span> <span class="nx">pageNumberSpan</span> <span class="p">?</span> <span class="nx">pageNumberSpan</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nf">trim</span><span class="p">()</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">1</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// Default to 1 if not found</span>

        <span class="c1">// Pad the page number with zeros (e.g., 0001, 0002, ...)</span>
        <span class="kd">let</span> <span class="nx">paddedPageNumber</span> <span class="o">=</span> <span class="nx">pageNumber</span><span class="p">.</span><span class="nf">padStart</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="dl">'</span><span class="s1">0</span><span class="dl">'</span><span class="p">);</span>

        <span class="c1">// Save the blob with page number suffix</span>
        <span class="nf">saveAs</span><span class="p">(</span><span class="nx">blob</span><span class="p">,</span> <span class="s2">`newspaper_article_links_page_</span><span class="p">${</span><span class="nx">paddedPageNumber</span><span class="p">}</span><span class="s2">.txt`</span><span class="p">);</span>
    <span class="p">}</span>


    <span class="kd">function</span> <span class="nf">clickNextPageLink</span><span class="p">()</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">nextPageListItem</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">li.page-next</span><span class="dl">'</span><span class="p">);</span>
        <span class="k">if </span><span class="p">(</span><span class="nx">nextPageListItem</span><span class="p">)</span> <span class="p">{</span>
            <span class="kd">const</span> <span class="nx">nextPageLink</span> <span class="o">=</span> <span class="nx">nextPageListItem</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">nextPageLink</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">nextPageLink</span><span class="p">.</span><span class="nf">click</span><span class="p">();</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">No link found under the 'Next Page' button.</span><span class="dl">"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">No 'Next Page' button found.</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// Main execution flow (wrapped in an event listener)</span>
    <span class="nb">window</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">load</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nf">logNewspaperArticleLinks</span><span class="p">();</span>
        <span class="nf">clickNextPageLink</span><span class="p">();</span>
    <span class="p">});</span>
<span class="p">})();</span>
</code></pre></div>  </div>
</details>

<h4 id="the-downloader">The Downloader</h4>

<p>Leveraging Python and the Selenium web automation framework, I built a third script to orchestrate the downloading process of each article from the links I had just collected. I purchased the paid access to the archive and started my code up. The script opened each saved link in Firefox, clicked the download buttons for the article, and watched the download folder for a new file to appear. Once the download started, the script would navigate to the next article link and begin the next download.</p>

<p>To keep things manageable with my limited late-night coding windows, I opted for a single-threaded approach, downloading one article at a time. While not the fastest method, I didn‚Äôt feel like dealing with the fallout of multithreaded edge cases. I didn‚Äôt want to miss a single file, and I didn‚Äôt want the website to flag me for downloading too quickly.</p>

<details>

  <summary>[Python] Article Downloader with Firefox Marionette</summary>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">marionette_driver</span>
<span class="kn">from</span> <span class="n">marionette_driver.marionette</span> <span class="kn">import</span> <span class="n">Marionette</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">psutil</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support.ui</span> <span class="kn">import</span> <span class="n">WebDriverWait</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support</span> <span class="kn">import</span> <span class="n">expected_conditions</span> <span class="k">as</span> <span class="n">EC</span>
<span class="kn">from</span> <span class="n">selenium.common.exceptions</span> <span class="kn">import</span> <span class="n">TimeoutException</span>
<span class="kn">from</span> <span class="n">selenium.common.exceptions</span> <span class="kn">import</span> <span class="n">NoSuchElementException</span>
<span class="kn">import</span> <span class="n">inspect</span>
<span class="kn">from</span> <span class="n">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">import</span> <span class="n">subprocess</span>
<span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">logging</span>
<span class="kn">import</span> <span class="n">socket</span>
<span class="kn">import</span> <span class="n">urllib.request</span>
<span class="kn">import</span> <span class="n">sys</span>

<span class="c1"># Note 1: Before running, launch Firefox in marionette mode similar to this:
#   /Applications/Firefox.app/Contents/MacOS/firefox --marionette 
#   We attach to an existing instance to make manual intervention easier.
# Note 2: I suggest changing your downloads directory in the web browser since the 
#   script watches for changes in the downloads directory. If you download a file 
#   while the script is running, it will think that's the file it's waiting for and 
#   move onto the next link.
</span>
<span class="c1"># Path to the text file containing the links. One link per line.
</span><span class="n">links_file_path</span> <span class="o">=</span> <span class="sh">'</span><span class="s">links.txt</span><span class="sh">'</span>

<span class="c1"># Get your Downloads directory path
</span><span class="n">downloads_dir</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">expanduser</span><span class="p">(</span><span class="sh">'</span><span class="s">~/Downloads/firefox_article_downloads</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># Firefox Marionette port
</span><span class="n">marionette_port</span> <span class="o">=</span> <span class="mi">52449</span>

<span class="c1"># Healthcheck.io ping URL to monitor the script's progress
#   https://healthchecks.io/docs/http_api/
</span><span class="n">healthcheck_ping_url</span> <span class="o">=</span> <span class="sh">"</span><span class="s">&lt;INSERT_YOUR_OWN_HEALTHCHECK_IO_PING_URL_HERE&gt;</span><span class="sh">"</span>

<span class="c1"># Parse command-line arguments for start_line 
</span><span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Error: Please provide a starting line number as a command-line argument.</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Configurable starting line number (1-based index to make it match the log messages. Easier to restart)
</span><span class="k">try</span><span class="p">:</span>
    <span class="n">start_line</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span>  <span class="c1"># Adjust for 0-based indexing
</span><span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Error: Invalid starting line number. Please provide an integer.</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Function to get the current line number
</span><span class="k">def</span> <span class="nf">lineno</span><span class="p">():</span>
    <span class="k">return</span> <span class="n">inspect</span><span class="p">.</span><span class="nf">currentframe</span><span class="p">().</span><span class="n">f_back</span><span class="p">.</span><span class="n">f_lineno</span>

<span class="c1"># Set up logging
</span><span class="n">logging</span><span class="p">.</span><span class="nf">basicConfig</span><span class="p">(</span><span class="n">filename</span><span class="o">=</span><span class="sh">'</span><span class="s">download_script.log</span><span class="sh">'</span><span class="p">,</span> <span class="n">level</span><span class="o">=</span><span class="n">logging</span><span class="p">.</span><span class="n">INFO</span><span class="p">,</span> <span class="nb">format</span><span class="o">=</span><span class="sh">'</span><span class="s">%(asctime)s - %(message)s</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># Find the process ID and Marionette port of your existing Firefox instance
</span><span class="k">for</span> <span class="n">proc</span> <span class="ow">in</span> <span class="n">psutil</span><span class="p">.</span><span class="nf">process_iter</span><span class="p">([</span><span class="sh">'</span><span class="s">pid</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">name</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">cmdline</span><span class="sh">'</span><span class="p">]):</span>
    <span class="k">if</span> <span class="n">proc</span><span class="p">.</span><span class="n">info</span><span class="p">[</span><span class="sh">'</span><span class="s">name</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">"</span><span class="s">firefox</span><span class="sh">"</span> <span class="ow">and</span> <span class="sh">"</span><span class="s">--marionette</span><span class="sh">"</span> <span class="ow">in</span> <span class="n">proc</span><span class="p">.</span><span class="n">info</span><span class="p">[</span><span class="sh">'</span><span class="s">cmdline</span><span class="sh">'</span><span class="p">]:</span>
        <span class="n">firefox_pid</span> <span class="o">=</span> <span class="n">proc</span><span class="p">.</span><span class="n">info</span><span class="p">[</span><span class="sh">'</span><span class="s">pid</span><span class="sh">'</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">proc</span><span class="p">.</span><span class="n">info</span><span class="p">[</span><span class="sh">'</span><span class="s">cmdline</span><span class="sh">'</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">arg</span><span class="p">.</span><span class="nf">startswith</span><span class="p">(</span><span class="sh">"</span><span class="s">--marionette-port</span><span class="sh">"</span><span class="p">):</span>
                <span class="n">marionette_port</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">arg</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">=</span><span class="sh">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span>
                <span class="k">break</span>
        <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">message</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Error: No running Firefox instance found with Marionette enabled.</span><span class="sh">"</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
        <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
        <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Connect to the Marionette server using the Firefox process ID and port
</span><span class="n">client</span> <span class="o">=</span> <span class="nc">Marionette</span><span class="p">(</span><span class="n">port</span><span class="o">=</span><span class="n">marionette_port</span><span class="p">,</span> <span class="n">host</span><span class="o">=</span><span class="sh">'</span><span class="s">localhost</span><span class="sh">'</span><span class="p">,</span> <span class="n">firefox_pid</span><span class="o">=</span><span class="n">firefox_pid</span><span class="p">)</span>
<span class="n">client</span><span class="p">.</span><span class="nf">start_session</span><span class="p">()</span>
<span class="n">client</span><span class="p">.</span><span class="n">timeout</span><span class="p">.</span><span class="n">page_load</span> <span class="o">=</span> <span class="mi">60</span>

<span class="c1"># Get the original window handle (the main Firefox window)
</span><span class="n">original_window</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">current_window_handle</span>

<span class="c1"># Function to retry navigating to a link a specified number of times
</span><span class="k">def</span> <span class="nf">navigate_with_retries</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">line_number</span><span class="p">,</span> <span class="n">total_lines</span><span class="p">,</span> <span class="n">max_retries</span><span class="o">=</span><span class="mi">3</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">attempt</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_retries</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">client</span><span class="p">.</span><span class="nf">navigate</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
            <span class="k">return</span>  <span class="c1"># Navigation successful, exit the function
</span>        <span class="k">except</span> <span class="nb">BaseException</span> <span class="k">as</span> <span class="n">error</span><span class="p">:</span>
            <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%b %d %H:%M:%S</span><span class="sh">"</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">attempt</span> <span class="o">&lt;</span> <span class="n">max_retries</span><span class="p">:</span>
                <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">line_number</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">total_lines</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">: Navigating timed out. Retrying </span><span class="si">{</span><span class="n">attempt</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">max_retries</span><span class="si">}</span><span class="s">...</span><span class="sh">"</span>
                <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
                <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
                <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Wait before retrying
</span>            <span class="k">else</span><span class="p">:</span>
                <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">line_number</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">total_lines</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">: Navigating failed after </span><span class="si">{</span><span class="n">max_retries</span><span class="si">}</span><span class="s"> attempts.</span><span class="sh">"</span>
                <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
                <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
                <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
                <span class="k">raise</span>  <span class="c1"># Re-raise the exception after all retries fail
</span>
<span class="c1"># Read links from the file
</span><span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">links_file_path</span><span class="p">,</span> <span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">links</span> <span class="o">=</span> <span class="nb">file</span><span class="p">.</span><span class="nf">read</span><span class="p">().</span><span class="nf">splitlines</span><span class="p">()</span>

<span class="n">total_lines</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">links</span><span class="p">)</span>

<span class="c1"># Validate start_line 
</span><span class="k">if</span> <span class="n">start_line</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">start_line</span> <span class="o">&gt;=</span> <span class="n">total_lines</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Error: Invalid line number. Please ensure it is within the valid range.</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># Iterate through the links, starting from the configured line
</span><span class="n">exception_count</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">link</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">links</span><span class="p">[</span><span class="n">start_line</span><span class="p">:]):</span>
    <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%b %d %H:%M:%S</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">line_number</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">start_line</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Line </span><span class="si">{</span><span class="n">line_number</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">total_lines</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">: Opening URL: </span><span class="si">{</span><span class="n">link</span><span class="si">}</span><span class="sh">"</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>  <span class="c1"># Print to console
</span>    <span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>  <span class="c1"># Log the message
</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlopen</span><span class="p">(</span><span class="n">healthcheck_ping_url</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="k">except</span> <span class="n">socket</span><span class="p">.</span><span class="n">error</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="c1"># Log ping failure here...
</span>        <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%b %d %H:%M:%S</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Ping failed: %s</span><span class="sh">"</span> <span class="o">%</span> <span class="n">e</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>  <span class="c1"># Print to console
</span>        <span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>  <span class="c1"># Log the message
</span>
    <span class="nf">navigate_with_retries</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">line_number</span><span class="p">,</span> <span class="n">total_lines</span><span class="p">)</span> 

    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="c1"># Wait for the page to load (adjust timeout as needed)
</span>            <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="n">EC</span><span class="p">.</span><span class="nf">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">TAG_NAME</span><span class="p">,</span> <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">)))</span>

            <span class="c1"># Enable the next line before I go to bed to decrease the chances of the website erroring out due to us trying to download a file before it's ready.
</span>            <span class="c1"># time.sleep(3)
</span>
            <span class="c1"># Find the download button using the ID attribute
</span>            <span class="n">download_button_1</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span>
                <span class="n">EC</span><span class="p">.</span><span class="nf">element_to_be_clickable</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">"</span><span class="s">[id=</span><span class="sh">'</span><span class="s">clip-download-click-target</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">))</span>
            <span class="p">)</span>

            <span class="c1"># Get the list of files in the Downloads directory before the click
</span>            <span class="n">before_download_files</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="n">downloads_dir</span><span class="p">))</span>

            <span class="c1"># Click the download button
</span>            <span class="n">download_button_1</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>

            <span class="c1"># Enable the next line before I go to bed to decrease the chances of the website erroring out due to us trying to download a file before it's ready.
</span>            <span class="c1"># time.sleep(3)
</span>
            <span class="c1"># Find the download button using the ID attribute
</span>            <span class="n">download_button_2</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="mi">10</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span>
                <span class="n">EC</span><span class="p">.</span><span class="nf">element_to_be_clickable</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="sh">"</span><span class="s">[id=</span><span class="sh">'</span><span class="s">download_page_form_submit_button</span><span class="sh">'</span><span class="s">]</span><span class="sh">"</span><span class="p">))</span>
            <span class="p">)</span>

            <span class="c1"># Click the download button
</span>            <span class="n">download_button_2</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>

            <span class="c1"># Wait for a new file to appear in the Downloads directory
</span>            <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                <span class="n">after_download_files</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="n">downloads_dir</span><span class="p">))</span>
                <span class="n">new_files</span> <span class="o">=</span> <span class="n">after_download_files</span> <span class="o">-</span> <span class="n">before_download_files</span>
                <span class="c1"># Confirm the webpage is still there after the click. Sometimes it errors out and crashes.
</span>                <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="n">EC</span><span class="p">.</span><span class="nf">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="p">.</span><span class="n">TAG_NAME</span><span class="p">,</span> <span class="sh">'</span><span class="s">body</span><span class="sh">'</span><span class="p">)))</span>
                <span class="k">if</span> <span class="n">new_files</span><span class="p">:</span>

                    <span class="c1"># A new file has started downloading
</span>                    <span class="n">new_file</span> <span class="o">=</span> <span class="n">new_files</span><span class="p">.</span><span class="nf">pop</span><span class="p">()</span>
                    <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%b %d %H:%M:%S</span><span class="sh">"</span><span class="p">)</span>
                    <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Line </span><span class="si">{</span><span class="n">line_number</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">total_lines</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">: Download started: </span><span class="si">{</span><span class="n">new_file</span><span class="si">}</span><span class="sh">"</span>
                    <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>  <span class="c1"># Print to console
</span>                    <span class="n">logging</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>  <span class="c1"># Log the message
</span>                    <span class="k">break</span>  <span class="c1"># Exit the inner loop
</span>                <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Check every second
</span>
            <span class="k">break</span>  <span class="c1"># Exit the outer loop
</span>
        <span class="k">except</span> <span class="nb">BaseException</span> <span class="k">as</span> <span class="n">error</span><span class="p">:</span>
            <span class="n">exception_count</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%b %d %H:%M:%S</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">message</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">Line </span><span class="si">{</span><span class="n">line_number</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">total_lines</span><span class="si">:</span><span class="mi">05</span><span class="n">d</span><span class="si">}</span><span class="s">: Download button not found yet for </span><span class="si">{</span><span class="n">link</span><span class="si">}</span><span class="s">. Waiting...</span><span class="sh">"</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>  <span class="c1"># Print to console
</span>            <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>  <span class="c1"># Log the error message
</span>            <span class="n">logging</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>  <span class="c1"># Log the error message
</span>            <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">exception_count</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="nf">navigate_with_retries</span><span class="p">(</span><span class="n">client</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">line_number</span><span class="p">,</span> <span class="n">total_lines</span><span class="p">)</span>   <span class="c1"># This reloads the current tab
</span>
            <span class="c1"># If I didn't notice the script repeatedly failing, and the script didn't recover yet, get my attention by having my computer talk to me.
</span>            <span class="k">if</span> <span class="n">exception_count</span> <span class="o">%</span> <span class="mi">30</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">subprocess</span><span class="p">.</span><span class="nf">call</span><span class="p">([</span><span class="sh">"</span><span class="s">say</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">Hello. Are you there? I could really use some help. Something doesn</span><span class="sh">'</span><span class="s">t look right.</span><span class="sh">"</span><span class="p">])</span>

    <span class="c1"># Reset the exception count after processing each link
</span>    <span class="n">exception_count</span> <span class="o">=</span> <span class="mi">0</span>

<span class="c1"># No need to stop the Marionette session or close Firefox since we're attached to an existing instance
</span></code></pre></div>  </div>
</details>

<h3 id="the-challenges-troubleshooting-and-optimization">The Challenges: Troubleshooting and Optimization</h3>

<p>My late-night coding sessions were not without their hiccups. I encountered URL timeouts, download race conditions, and other unexpected obstacles. But with each challenge came an opportunity to learn and refine my approach.</p>

<p>I added error handling to ensure the script wouldn‚Äôt get stuck on a problematic link. I was able to achieve a download rate of 275‚Äì325 articles per hour. In a perfect world, it would have taken just under two days to completely download all articles. However, due to a complication on the first overnight run, my download task stretched into three days. üí∏</p>

<p>Here is my script in action. The download process usually starts before the webpage gets a chance to load the article image.</p>

<!-- Method to implement AMP-Video. -->

<video width="700" controls="">
  <source src="/assets/files/2024/09/newsbank_downloading.mp4" type="video/mp4" />
  <p>Your browser doesn't support HTML5 video</p>
</video>

<p>Occasionally, my script would freeze when the website returned an error. I tried to combat this by adding additional error handling, but it seemed like the download script continued to find new ways to stall. I still hadn‚Äôt solved every hiccup by the second day of downloading, so I decided to pivot. Given that my access was time-limited, and we were almost halfway through downloading the articles, I shifted my efforts from proactive to reactive error handling.</p>

<p>My new reactive approach was to monitor the script‚Äôs download cadence. I implemented a clever ‚Äúheartbeat‚Äù mechanism using the <a href="https://healthchecks.io/docs/http_api/">Healthchecks.io API</a>. After every download, the script would ping the server. If the script failed to check in after a few minutes, it would indicate a potential stall. The website would then send me an alert on my phone, allowing me to intervene and keep the process running smoothly.</p>

<p>This new approach worked well. After 56 hours of downloading, I had successfully collected all 12,742 articles. Now, the real challenge was about to begin: figuring out how to process this mountain of data. üèîÔ∏èüòµ‚Äçüí´</p>

<h3 id="the-transformation-preparing-data-for-ai-analysis">The Transformation: Preparing Data for AI Analysis</h3>

<p>Here‚Äôs how I see it. I have 3 options to process this data:</p>

<ol>
  <li>Read through all 12,000 pages for the next 6 months. üìö</li>
  <li>Hire a researcher to do it for me. üí∞</li>
  <li>Use AI to parse through the data and extract the information I want. ü§ñ</li>
</ol>

<p>I chose option 3.</p>

<p>With my digital treasure trove of articles downloaded, it was time to prepare the data for analysis. I used OCR (Optical Character Recognition) software to convert the scanned newspaper pages into searchable text.</p>

<p>Originally, I had planned on using <a href="https://github.com/ocrmypdf/OCRmyPDF"><code class="language-plaintext highlighter-rouge">ocrmypdf</code></a> which utilizes the <a href="https://github.com/tesseract-ocr/tesseract">Tesseract OCR engine</a>. But I found in testing that I could get far better accuracy using the OCR engine from ABBYY FineReader instead.</p>

<blockquote>
  <p>Today, ABBYY FineReader allows for monthly subscriptions. Short enough to complete my OCR task.</p>
</blockquote>

<p>Luckily, FineReader supports batch folder processing, making it easy to OCR large volumes of files. After a bit of testing, I dialed in my settings and started the task. The batch job pegged my old Intel processor at 100% CPU utilization for nearly 48 hours before it finished processing the 12,000 articles. üî•üñ•Ô∏èüò≠</p>

<p>I was pleasantly surprised by the results. While some articles were challenging to read, the OCR software did a remarkably good job extracting the text. There were errors, of course. But I was only planning to go through every page if absolutely necessary.</p>

<p>I backed up the new OCR‚Äôd files and moved on to the next step for processing.</p>

<h3 id="the-tumble-notebooklm-and-its-limits">The Tumble: NotebookLM and its Limits</h3>

<p>Earlier this year, while watching the 2024 Google I/O event, they announced the wide availability of a new tool called <a href="https://notebooklm.google/">NotebookLM</a>. It‚Äôs an AI-powered notebook that can analyze and summarize vast amounts of text data (other mediums in the future). Once everything is processed, you can ask the tool any question that you want (like a chatbot), and it will try to answer using only the source data provided. This is one of the most practical applications of AI I‚Äôve seen all year. üìà</p>

<p>Unlike other AI tools, NotebookLM is source-grounded with inline citations. The chances of hallucinations occurring are very low. All responses require a citation, allowing me to quickly verify any claims. I knew this was <em>the perfect solution</em> for my large-data problem. But how could I apply it to my 12,000 articles?</p>

<p>Today, NotebookLM has a limit of 50 sources. So let‚Äôs just throw all 12,000 articles into a single file, right? Nope! Each source is limited to 200 MB <em>and</em> must contain fewer than 500,000 words. This meant I needed to get creative with my data processing if I wanted to maximize the amount of information I could upload to NotebookLM.</p>

<p>Here‚Äôs my problem. If I combine all 12,000 articles into a single file and then split them based on size and word count, I get roughly 88 files. That‚Äôs not going to work. I needed to get that number down to <em>50</em> or lower.</p>

<h3 id="the-reduction-crafting-a-dataset-for-ai-analysis">The Reduction: Crafting a Dataset for AI Analysis</h3>

<p>Not wanting to lose any valuable information from my new dataset, I employed <em>another</em> script to strategically extract specific articles based on keywords and variants. This is what I came up with based on priority, and how infrequently I thought the terms would appear. If they were less common, I wanted to gather everything I could on the topic.</p>

<ul>
  <li>George Ingham</li>
  <li>Robert Morrison</li>
  <li>Roy Hollingsworth</li>
  <li>Bud Mansfield</li>
  <li>Hollingsworth Auto</li>
  <li>Mansfield Auto</li>
  <li>Soo Machine</li>
</ul>

<p>If my script picked up on an article page containing the keywords, it would move the file into a new staging folder. The idea is that I‚Äôd keep running this script, adding in keywords, until I had a manageable number of files to work with.</p>

<details>

  <summary>[Python] Move PDF Files Containing a Keyword</summary>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">shutil</span>
<span class="kn">from</span> <span class="n">tqdm</span> <span class="kn">import</span> <span class="n">tqdm</span>

<span class="k">try</span><span class="p">:</span>
    <span class="kn">from</span> <span class="n">pypdfium2</span> <span class="kn">import</span> <span class="n">PdfDocument</span>
<span class="k">except</span> <span class="nb">ImportError</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">pypdfium2 is not installed. Please install it using </span><span class="sh">'</span><span class="s">pip install pypdfium2</span><span class="sh">'"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Exit the script if pypdfium2 is not available
</span>
<span class="c1"># Get user input or set default values
</span><span class="n">directory_path</span> <span class="o">=</span> <span class="sh">"</span><span class="s">pdf_downloads</span><span class="sh">"</span>
<span class="n">search_text</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">Enter the text to search for: </span><span class="sh">"</span><span class="p">)</span> <span class="ow">or</span> <span class="sh">"</span><span class="s">your_search_text</span><span class="sh">"</span>
<span class="n">destination_folder</span> <span class="o">=</span> <span class="sh">"</span><span class="s">pdf_downloads_selected</span><span class="sh">"</span>

<span class="k">def</span> <span class="nf">move_pdfs_with_text</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span> <span class="n">search_text</span><span class="p">,</span> <span class="n">destination_folder</span><span class="p">,</span> <span class="n">initial_pages_to_check</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
    <span class="sh">"""</span><span class="s">
    Moves PDF files containing specific text to a destination folder, 
    with a progress bar, optimized text extraction, and using pypdfium2 for PDF parsing.

    Args:
        directory: The directory to search for PDF files.
        search_text: The text to search for within the PDF files.
        destination_folder: The folder to move matching PDF files to.
        initial_pages_to_check: Number of initial pages to check for the search text.
    </span><span class="sh">"""</span>

    <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">exists</span><span class="p">(</span><span class="n">destination_folder</span><span class="p">):</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">makedirs</span><span class="p">(</span><span class="n">destination_folder</span><span class="p">)</span>

    <span class="n">pdf_files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="n">directory</span><span class="p">)</span> <span class="k">if</span> <span class="n">f</span><span class="p">.</span><span class="nf">endswith</span><span class="p">(</span><span class="sh">"</span><span class="s">.pdf</span><span class="sh">"</span><span class="p">)]</span>

    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="nf">tqdm</span><span class="p">(</span><span class="n">pdf_files</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="sh">"</span><span class="s">Searching PDFs</span><span class="sh">"</span><span class="p">,</span> <span class="n">unit</span><span class="o">=</span><span class="sh">"</span><span class="s">file</span><span class="sh">"</span><span class="p">):</span>
        <span class="n">filepath</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>

        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="sh">"</span><span class="s">rb</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">pdf_file</span><span class="p">:</span>
            <span class="n">pdf</span> <span class="o">=</span> <span class="nc">PdfDocument</span><span class="p">(</span><span class="n">pdf_file</span><span class="p">)</span>
            <span class="n">num_pages</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">pdf</span><span class="p">)</span>

            <span class="c1"># Check initial pages first
</span>            <span class="n">pdf_text</span> <span class="o">=</span> <span class="sh">""</span>
            <span class="k">for</span> <span class="n">page_num</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">min</span><span class="p">(</span><span class="n">initial_pages_to_check</span><span class="p">,</span> <span class="n">num_pages</span><span class="p">)):</span>
                <span class="n">page</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="n">page_num</span><span class="p">]</span>
                <span class="n">pdf_text</span> <span class="o">+=</span> <span class="n">page</span><span class="p">.</span><span class="nf">get_textpage</span><span class="p">().</span><span class="nf">get_text_bounded</span><span class="p">()</span>

            <span class="k">if</span> <span class="n">search_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">()</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">pdf_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">():</span>
                <span class="c1"># If not found in initial pages, check remaining pages
</span>                <span class="k">for</span> <span class="n">page_num</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">initial_pages_to_check</span><span class="p">,</span> <span class="n">num_pages</span><span class="p">):</span>
                    <span class="n">page</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="n">page_num</span><span class="p">]</span>
                    <span class="n">pdf_text</span> <span class="o">+=</span> <span class="n">page</span><span class="p">.</span><span class="nf">get_textpage</span><span class="p">().</span><span class="nf">get_text_bounded</span><span class="p">()</span>
                    <span class="k">if</span> <span class="n">search_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">pdf_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">():</span>
                        <span class="k">break</span>  <span class="c1"># Stop checking once found
</span>
            <span class="k">if</span> <span class="n">search_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">pdf_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">():</span>
                <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Found text in: </span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
                <span class="n">shutil</span><span class="p">.</span><span class="nf">copy</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">destination_folder</span><span class="p">)</span> 
                <span class="n">os</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">filepath</span><span class="p">)</span> 

<span class="nf">move_pdfs_with_text</span><span class="p">(</span><span class="n">directory_path</span><span class="p">,</span> <span class="n">search_text</span><span class="p">,</span> <span class="n">destination_folder</span><span class="p">)</span>
</code></pre></div>  </div>
</details>

<p>This was a good start. But I was still looking at a dataset that was too large for NotebookLM. This process only shaved off a few thousand candidates. I needed to further refine my dataset to meet NotebookLM‚Äôs requirements.</p>

<p>The median word count for all 12,000 files was approximately 4,000 words per page. If I used the word count as a limiting factor (50 * 500,000 words), I would need to reduce my total word count to 25 million words (or ~6,250 pages from my dataset) before I stood a chance of uploading them all.</p>

<p>The biggest offender that caused me to go over my limit was always the last extraction of articles that contained ‚ÄúSoo Machine‚Äù. After combing through this last dataset, I realized a large portion of these articles were filled with less important classified ads or rummage sale notices. They were originally included in my dataset because I grabbed every single article that mentioned ‚ÄúSoo Machine‚Äù.</p>

<p>I ran another extraction on the ‚ÄúSoo Machine‚Äù group and dropped any articles that contained <code class="language-plaintext highlighter-rouge">rummage</code> or <code class="language-plaintext highlighter-rouge">classified ads</code>. This gave me <em>just enough</em> wiggle room where my dataset <em>should</em> fit when I upload it to NotebookLM.</p>

<p>I created two additional Python scripts. The first script merged every article page (keeping them in chronological order) into one single file. Then, the second script divided this large file back into smaller files, ensuring each new file met NotebookLM‚Äôs size and word count restrictions.</p>

<details>

  <summary>[Python] Merge all PDF files together (in order)</summary>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">glob</span>
<span class="kn">from</span> <span class="n">PyPDF2</span> <span class="kn">import</span> <span class="n">PdfMerger</span>
<span class="kn">import</span> <span class="n">multiprocessing</span>

<span class="c1"># Merge all PDF files in a directory together based on the filename for The Evening News
# Assumes the filenames are in the format: "Evening_News_YYYY-MM-DD_Page.pdf"
#   Page numbers are not zero-padded (`1` vs `10`), so we need to parse them as an integer to sort properly
#   Sometimes the download names are duplicated at the source so they end in (1) or (2) after we download them. We ignore this part of the filename when sorting and assume there are different scans that were uploaded.
</span>
<span class="k">def</span> <span class="nf">merge_pdf</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
    <span class="n">merger</span> <span class="o">=</span> <span class="nc">PdfMerger</span><span class="p">()</span>
    <span class="n">merger</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="sh">'</span><span class="s">rb</span><span class="sh">'</span><span class="p">)</span>  <span class="c1"># Open in 'rb' (read binary) mode
</span>
    <span class="c1"># Instead of returning the merger, write the merged PDF to a temporary file for speed
</span>    <span class="n">temp_filename</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s">_temp.pdf</span><span class="sh">"</span>
    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">,</span> <span class="sh">"</span><span class="s">wb</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">temp_file</span><span class="p">:</span>
        <span class="n">merger</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">temp_file</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">temp_filename</span>  <span class="c1"># Return the temporary filename
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="n">pdf_directory</span> <span class="o">=</span> <span class="sh">"</span><span class="s">pdf_files</span><span class="sh">"</span>  <span class="c1"># Directory containing the PDF files
</span>    <span class="n">os</span><span class="p">.</span><span class="nf">chdir</span><span class="p">(</span><span class="n">pdf_directory</span><span class="p">)</span>

    <span class="n">pdf_files</span> <span class="o">=</span> <span class="n">glob</span><span class="p">.</span><span class="nf">glob</span><span class="p">(</span><span class="sh">"</span><span class="s">*.pdf</span><span class="sh">"</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">extract_date_and_page</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
        <span class="n">date_str</span><span class="p">,</span> <span class="n">page_str</span> <span class="o">=</span> <span class="n">filename</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">_</span><span class="sh">"</span><span class="p">)[</span><span class="mi">2</span><span class="p">:]</span>  <span class="c1"># Extract date and page parts
</span>        <span class="n">year</span><span class="p">,</span> <span class="n">month</span><span class="p">,</span> <span class="n">day</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">date_str</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">-</span><span class="sh">"</span><span class="p">))</span>
        <span class="n">page_str</span> <span class="o">=</span> <span class="n">page_str</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">(</span><span class="sh">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># Remove parentheses and extension
</span>        <span class="n">page</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">page_str</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">year</span><span class="p">,</span> <span class="n">month</span><span class="p">,</span> <span class="n">day</span><span class="p">,</span> <span class="n">page</span>  <span class="c1"># Return tuple for sorting
</span>
    <span class="n">pdf_files</span><span class="p">.</span><span class="nf">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">extract_date_and_page</span><span class="p">)</span>  <span class="c1"># Sort using the extracted page number
</span>
    <span class="k">with</span> <span class="n">multiprocessing</span><span class="p">.</span><span class="nc">Pool</span><span class="p">()</span> <span class="k">as</span> <span class="n">pool</span><span class="p">:</span>
        <span class="n">temp_filenames</span> <span class="o">=</span> <span class="n">pool</span><span class="p">.</span><span class="nf">map</span><span class="p">(</span><span class="n">merge_pdf</span><span class="p">,</span> <span class="n">pdf_files</span><span class="p">)</span>

    <span class="n">final_merger</span> <span class="o">=</span> <span class="nc">PdfMerger</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">temp_filename</span> <span class="ow">in</span> <span class="n">temp_filenames</span><span class="p">:</span>
        <span class="n">final_merger</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">)</span>

    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sh">"</span><span class="s">Combined_files.pdf</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">wb</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">output_file</span><span class="p">:</span>
        <span class="n">final_merger</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">output_file</span><span class="p">)</span>

    <span class="c1"># Clean up temporary files
</span>    <span class="k">for</span> <span class="n">temp_filename</span> <span class="ow">in</span> <span class="n">temp_filenames</span><span class="p">:</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">)</span>
</code></pre></div>  </div>
</details>

<details>

  <summary>[Python] Split all PDFs by word count and file size</summary>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">PyPDF2</span>
<span class="kn">import</span> <span class="n">hashlib</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">re</span>
<span class="kn">from</span> <span class="n">tqdm</span> <span class="kn">import</span> <span class="n">tqdm</span>
<span class="kn">import</span> <span class="n">textstat</span>

<span class="c1"># Splits up PDF files based on word count and file size in order to fit within NotebookLM's limits.
#   Usually we're only splitting the master `Combined_files.pdf` file of _all_ PDF files.
#   But this will still work for multiple files if needed.
# Note: Make sure to update the `directory_path` at the bottom of this script
</span>
<span class="k">def</span> <span class="nf">split_pdfs_in_directory</span><span class="p">(</span><span class="n">directory_path</span><span class="p">,</span> <span class="n">max_size_mb</span><span class="o">=</span><span class="mi">190</span><span class="p">,</span> <span class="n">max_word_count</span><span class="o">=</span><span class="mi">500_000</span><span class="p">,</span> <span class="n">word_count_buffer</span><span class="o">=</span><span class="mi">70_000</span><span class="p">):</span>
    <span class="sh">"""</span><span class="s">
    Splits all PDF files in a directory based on size or word count.

    Args:
        directory_path: The path to the directory containing PDF files.
        max_size_mb: The maximum allowed size for each split file in megabytes.
        max_word_count: The maximum allowed word count for each split file
        word_count_buffer: A buffer to ensure the final word count stays below the limit after processing
    </span><span class="sh">"""</span>

    <span class="n">max_size_bytes</span> <span class="o">=</span> <span class="n">max_size_mb</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span>  <span class="c1"># Convert MB to bytes
</span>    <span class="n">effective_max_word_count</span> <span class="o">=</span> <span class="n">max_word_count</span> <span class="o">-</span> <span class="n">word_count_buffer</span>

    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="n">directory_path</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">filename</span><span class="p">.</span><span class="nf">endswith</span><span class="p">(</span><span class="sh">"</span><span class="s">.pdf</span><span class="sh">"</span><span class="p">):</span>
            <span class="n">filepath</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">directory_path</span><span class="p">,</span> <span class="n">filename</span><span class="p">)</span>
            <span class="n">file_size</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">getsize</span><span class="p">(</span><span class="n">filepath</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">file_size</span> <span class="o">&gt;</span> <span class="n">max_size_bytes</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Splitting </span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s"> based on size...</span><span class="sh">"</span><span class="p">)</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="nf">split_pdf</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">max_size_bytes</span><span class="p">,</span> <span class="n">effective_max_word_count</span><span class="p">)</span> 
                <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Error splitting </span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">os</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">filepath</span><span class="p">)</span>
                    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Deleted original file: </span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">split_pdf</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">max_size_bytes</span><span class="p">,</span> <span class="n">max_word_count</span><span class="p">):</span>
    <span class="sh">"""</span><span class="s">
    Splits a PDF file into smaller files until each is less than max_size_bytes or max_word_count.

    Args:
        filepath: The path to the PDF file to split.
        max_size_bytes: The maximum allowed size for each split file in bytes.
        max_word_count: The maximum allowed word count for each split file
    </span><span class="sh">"""</span>

    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="sh">'</span><span class="s">rb</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">pdf_file</span><span class="p">:</span>
        <span class="n">pdf_reader</span> <span class="o">=</span> <span class="n">PyPDF2</span><span class="p">.</span><span class="nc">PdfReader</span><span class="p">(</span><span class="n">pdf_file</span><span class="p">)</span>
        <span class="n">num_pages</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">pdf_reader</span><span class="p">.</span><span class="n">pages</span><span class="p">)</span>

        <span class="n">output_pdf_writer</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="n">output_pdf_filename</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="n">current_part</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">current_word_count</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Progress bar setup based on number of pages
</span>        <span class="n">pbar</span> <span class="o">=</span> <span class="nf">tqdm</span><span class="p">(</span><span class="n">total</span><span class="o">=</span><span class="n">num_pages</span><span class="p">,</span> <span class="n">desc</span><span class="o">=</span><span class="sh">"</span><span class="s">Splitting Progress</span><span class="sh">"</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">page_num</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">num_pages</span><span class="p">):</span>
            <span class="n">page</span> <span class="o">=</span> <span class="n">pdf_reader</span><span class="p">.</span><span class="n">pages</span><span class="p">[</span><span class="n">page_num</span><span class="p">]</span>

            <span class="c1"># Word counting using textstat
</span>            <span class="n">page_text</span> <span class="o">=</span> <span class="n">page</span><span class="p">.</span><span class="nf">extract_text</span><span class="p">()</span>
            <span class="n">page_word_count</span> <span class="o">=</span> <span class="n">textstat</span><span class="p">.</span><span class="nf">lexicon_count</span><span class="p">(</span><span class="n">page_text</span><span class="p">,</span> <span class="n">removepunct</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

            <span class="c1"># Handle pages with word count exceeding the limit by starting a new part
</span>            <span class="k">if</span> <span class="n">current_word_count</span> <span class="o">+</span> <span class="n">page_word_count</span> <span class="o">&gt;</span> <span class="n">max_word_count</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">output_pdf_writer</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                    <span class="nf">_save_part</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">)</span>
                    <span class="n">output_pdf_writer</span> <span class="o">=</span> <span class="bp">None</span>
                    <span class="n">current_part</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">current_word_count</span> <span class="o">=</span> <span class="mi">0</span>

            <span class="k">if</span> <span class="n">output_pdf_writer</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
                <span class="n">unique_id</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="nf">md5</span><span class="p">((</span><span class="n">filepath</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="nf">time</span><span class="p">())).</span><span class="nf">encode</span><span class="p">()).</span><span class="nf">hexdigest</span><span class="p">()[:</span><span class="mi">6</span><span class="p">]</span>
                <span class="n">output_pdf_filename</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">splitext</span><span class="p">(</span><span class="n">filepath</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="s">_part</span><span class="si">{</span><span class="n">current_part</span><span class="si">}</span><span class="s">_</span><span class="si">{</span><span class="n">unique_id</span><span class="si">}</span><span class="s">.pdf</span><span class="sh">"</span>
                <span class="n">output_pdf_writer</span> <span class="o">=</span> <span class="n">PyPDF2</span><span class="p">.</span><span class="nc">PdfWriter</span><span class="p">()</span>
                <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">  - Creating new part: </span><span class="si">{</span><span class="n">output_pdf_filename</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

            <span class="c1"># Directly add the page to the output writer
</span>            <span class="n">output_pdf_writer</span><span class="p">.</span><span class="nf">add_page</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
            <span class="n">current_word_count</span> <span class="o">+=</span> <span class="n">page_word_count</span>

            <span class="c1"># Periodically check file size to avoid exceeding the limit
</span>            <span class="k">if</span> <span class="n">page_num</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># Adjust the frequency as needed
</span>                <span class="nf">_check_and_save_if_needed</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">max_size_bytes</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">output_pdf_writer</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
                    <span class="n">current_part</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">current_word_count</span> <span class="o">=</span> <span class="mi">0</span>

            <span class="n">pbar</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Update progress bar based on pages processed
</span>
        <span class="c1"># Save the last part if it exists
</span>        <span class="k">if</span> <span class="n">output_pdf_writer</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="nf">_save_part</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">)</span>

        <span class="n">pbar</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>  <span class="c1"># Close the progress bar
</span>
<span class="k">def</span> <span class="nf">_save_part</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">):</span>
    <span class="n">temp_filename</span> <span class="o">=</span> <span class="n">output_pdf_filename</span> <span class="o">+</span> <span class="sh">"</span><span class="s">.tmp</span><span class="sh">"</span>

    <span class="c1"># If the temp file exists, rename it to the final filename
</span>    <span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">exists</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">):</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">rename</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">)</span>

    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">output_pdf_filename</span><span class="p">,</span> <span class="sh">'</span><span class="s">wb</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">output_pdf_file</span><span class="p">:</span>
        <span class="n">output_pdf_writer</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">output_pdf_file</span><span class="p">)</span>
    <span class="n">output_file_size</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">getsize</span><span class="p">(</span><span class="n">output_pdf_filename</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">  - Saved part: </span><span class="si">{</span><span class="n">output_pdf_filename</span><span class="si">}</span><span class="s"> (Size: </span><span class="si">{</span><span class="n">output_file_size</span><span class="si">}</span><span class="s"> bytes, Words: </span><span class="si">{</span><span class="n">current_word_count</span><span class="si">}</span><span class="s">)</span><span class="sh">"</span><span class="p">)</span>

    <span class="c1"># Clean up all temporary files in the directory
</span>    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="nf">listdir</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">output_pdf_filename</span><span class="p">)):</span>
        <span class="k">if</span> <span class="n">filename</span><span class="p">.</span><span class="nf">endswith</span><span class="p">(</span><span class="sh">"</span><span class="s">.tmp</span><span class="sh">"</span><span class="p">):</span>
            <span class="n">os</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">output_pdf_filename</span><span class="p">),</span> <span class="n">filename</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">_check_and_save_if_needed</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">max_size_bytes</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">):</span>
    <span class="n">temp_filename</span> <span class="o">=</span> <span class="n">output_pdf_filename</span> <span class="o">+</span> <span class="sh">"</span><span class="s">.tmp</span><span class="sh">"</span>

    <span class="c1"># Write to the temporary file
</span>    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">,</span> <span class="sh">'</span><span class="s">wb</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">temp_pdf_file</span><span class="p">:</span>
        <span class="n">output_pdf_writer</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">temp_pdf_file</span><span class="p">)</span>

    <span class="n">temp_file_size</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">getsize</span><span class="p">(</span><span class="n">temp_filename</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">temp_file_size</span> <span class="o">&gt;</span> <span class="n">max_size_bytes</span><span class="p">:</span>
        <span class="c1"># If the temporary file exceeds the size limit, save it as the final file
</span>        <span class="nf">_save_part</span><span class="p">(</span><span class="n">output_pdf_writer</span><span class="p">,</span> <span class="n">output_pdf_filename</span><span class="p">,</span> <span class="n">current_word_count</span><span class="p">)</span>
        <span class="n">output_pdf_writer</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># Reset for the next part
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">"</span><span class="s">__main__</span><span class="sh">"</span><span class="p">:</span>
    <span class="n">directory_path</span> <span class="o">=</span> <span class="sh">"</span><span class="s">pdf_files</span><span class="sh">"</span>  <span class="c1"># Directory containing the PDF files to split (usually only one file is getting split, but it will work for multiple)
</span>    <span class="nf">split_pdfs_in_directory</span><span class="p">(</span><span class="n">directory_path</span><span class="p">)</span>
</code></pre></div>  </div>
</details>

<p>With a bit of trial and error, I eventually found the sweet spot. I was able to reduce the number of files from 88 to 46, each containing a manageable amount of data that I thought would fit within NotebookLM‚Äôs limits. With my data meticulously organized, I fed it into NotebookLM.</p>

<p>I hit a small snag where some files that I uploaded were still breaking NotebookLM‚Äôs word-count rule, so I continued lowering my word-count limit until each file worked with NotebookLM; ~430,000 words each.</p>

<blockquote>
  <p>Previously, NotebookLM only worked with PDFs containing OCR text, which it would extract and analyze, discarding the original file. As of August 22, 2024, NotebookLM now supports image-only PDFs, understanding photos, drawings, charts, and even handwriting.</p>

  <p>This enables the AI to visually analyze elements like ad placement and connecting content to specific businesses‚Äîsomething difficult with text-only extraction. While this feature currently doesn‚Äôt work on PDFs with existing OCR text, the developers are working on merging these functionalities.</p>
</blockquote>

<h3 id="the-payoff-unlocking-lost-secrets-with-notebooklm">The Payoff: Unlocking Lost Secrets with NotebookLM</h3>

<p>The files were uploaded, and the data processed. I began my waves of questions with the notebook. The AI‚Äôs ability to analyze and summarize vast amounts of text in its answers was astounding. It extracted key events and relationships. With a little prompt engineering, I was able to construct a comprehensive timeline of the dealership, learn about the founders, and uncover many fascinating details.</p>

<p><img src="/assets/img/2024/09/notebooklm_discovery.png" alt="Using NotebookLM to create a summary of &quot;Soo Machine &amp; Auto&quot; from newspaper sources." /><em>Using NotebookLM to create in-line cited summaries and timelines of events using The Evening News as a grounded source.</em></p>

<p><strong>It worked.</strong> ‚ú® Without any delay, I present my findings of Soo Machine &amp; Auto Co.</p>

<h2 id="soo-machine--auto-co-a-brief-history">Soo Machine &amp; Auto Co.: A Brief History</h2>

<p><a href="https://notebooklm.google/">NotebookLM</a> served as a valuable tool in analyzing data from the Chippewa County Historical Society and 12,000 articles from The Evening News. While it provided a solid foundation for my research, I also contributed significantly to the analysis and interpretation of the findings. The following summary highlights the most significant discoveries, incorporating both NotebookLM‚Äôs insights and my own original research.</p>

<h3 id="1910s">1910s</h3>

<p>Soo Machine &amp; Engine Works was an automotive business located in Sault Ste. Marie, Michigan. Founded in 1911 by Robert A. Morrison and George W. Ingham, the company started as a machine shop specializing in heavy machine work and offering blacksmith services. In its early years, the company operated at <a href="https://www.google.com/maps/@46.4986056,-84.3476169,3a,75y,237h,79.26t/data=!3m6!1e1!3m4!1smnX6WR7snr8HyiQQaoTadw!2e0!7i16384!8i8192?coh=205409&amp;entry=ttu&amp;g_ep=EgoyMDI0MDgyMy4wIKXMDSoASAFQAw%3D%3D">128 Arlington Street</a> briefly under the name Soo Machine and Engine Works. In <strong>1912</strong>, the company moved to a new location at <a href="https://www.google.com/maps/@46.4998173,-84.3445443,3a,75y,230.36h,79.63t/data=!3m6!1e1!3m4!1scwSJlm0D3T1qCKPDyDezqw!2e0!7i16384!8i8192?coh=205409&amp;entry=ttu&amp;g_ep=EgoyMDI0MDgyMy4wIKXMDSoASAFQAw%3D%3D">128 Portage Ave</a>. (built by Marshall N. Hunt) and officially incorporated as Soo Machine &amp; Auto Co. Both buildings still stand today.</p>

<p><img src="/assets/img/2024/09/master-gmd-gmd411m-g4114m-g4114sm-g041911915-04191_1915-0011.jpeg" alt="Sanborn Fire Insurance Map from Sault Sainte Marie, Chippewa County, Michigan. Sanborn Map Company, Nov, 1915. Map. Retrieved from the Library of Congress" /><em>Sanborn Fire Insurance Map from Sault Sainte Marie, Chippewa County, Michigan. Sanborn Map Company, Nov, 1915. Map. Retrieved from the Library of Congress, &lt;<a href="https://www.loc.gov/item/sanborn04191_007/">www.loc.gov/item/sanborn04191_007/</a>&gt;.</em></p>

<p><strong>Robert Morrison</strong>, one of the co-founders, was a skilled machinist and the manager of the Soo Machine &amp; Auto Co. He is credited with playing a crucial role in the company‚Äôs success, as he ensured it was fully equipped to handle various engine and machine repairs, specializing in gas engines and launch machinery. Morrison frequently traveled on business, attending auto shows and visiting cities like Chicago and Milwaukee. On October 4, 1909, Robert Morrison (1880) married Miss Violet May Parsons (~1883).</p>

<p><img src="/assets/img/2024/09/robert_morrison.png" alt="Robert A. Morrison" /><em>‚ÄúRobert A. Morrison‚Äù: The Evening News, Sault Saint Marie, MI, March 13, 1920, p. 9.</em></p>

<p><strong>George (Whithouse) Ingham</strong>, the other co-founder, was the president of Soo Machine &amp; Auto. Prior to this position, he was awarded patents for a ‚Äústeam-boiler‚Äù (<a href="https://patents.google.com/patent/US760126A/en">US760126A</a>) in <strong>1904</strong> and a ‚Äúlubricator‚Äù (<a href="https://patents.google.com/patent/US843536A/en">US843536A</a>) in <strong>1907</strong>.</p>

<p>In <strong>1913</strong>, George Ingham resigned as president of Soo Machine &amp; Auto and as chief engineer of the Pittsburgh Steamship Company. He relocated to Winnipeg.</p>

<p>By <strong>1915</strong>, Soo Machine &amp; Auto had already advertised selling Rambler Cross-Country, REO the Fifth, and the Jeffery cars.</p>

<p>In <strong>February 1915</strong>, Robert Morrison, the manager at Soo Machine and Auto Co., hired Roy D. Hollingsworth (who would later become the owner of the company) as a car salesman for $100 per month. When the directors learned about the unauthorized hire, they instructed Morrison to fire Hollingsworth and not pay him. However, at the next month‚Äôs meeting, they discovered Hollingsworth was still working, without pay, and had sold $4,000 worth of new cars in the middle of winter. Astonished by his salesmanship during a time when people rarely bought cars, the directors questioned both Morrison and Hollingsworth before ultimately rehiring him and paying him for two months‚Äô salary.</p>

<p>By <strong>1917</strong>, the company was the local dealer for six car brands: Jeffreys, Chevrolet, Reo, Cadillac, Oldsmobile, and White. It also sold Firestone and Goodyear tires.</p>

<h3 id="1920s">1920s</h3>

<p>In <strong>1920</strong>, Soo Machine &amp; Auto Co. embarked on a major expansion project, investing $25,000 to expand its building on Portage Ave. south to Maple Street and construct a state-of-the-art facility. This created the largest garage in Michigan on a single floor at the time. <strong>The building covered most of a city block</strong>.</p>

<p><img src="/assets/img/2024/09/master-gmd-gmd411m-g4114m-g4114sm-g041911922-04191_1922-0014.jpeg" alt="Sanborn Fire Insurance Map from Sault Sainte Marie, Chippewa County, Michigan. Sanborn Map Company, Oct, 1922. Map. Retrieved from the Library of Congress" /><em>Sanborn Fire Insurance Map from Sault Sainte Marie, Chippewa County, Michigan. Sanborn Map Company, Oct, 1922. Map. Retrieved from the Library of Congress, &lt;<a href="https://www.loc.gov/item/sanborn04191_008/">www.loc.gov/item/sanborn04191_008/</a>&gt;.</em></p>

<p>This move signaled a strategic shift for the company, providing a larger and more prominent location to accommodate its growing business. The new building boasted a spacious showroom for displaying their expanding inventory of automobiles, dedicated office space, and a well-stocked stockroom. <a href="https://www.google.com/maps/@46.4989006,-84.3455289,3a,75y,63.38h,77.13t/data=!3m6!1e1!3m4!1sqafjwhNEHFRAHQDbSeMKvA!2e0!7i16384!8i8192?coh=205409&amp;entry=ttu&amp;g_ep=EgoyMDI0MDgyMy4wIKXMDSoASAFQAw%3D%3D">The building still stands today</a>.</p>

<p><img src="/assets/img/2024/09/soo_machine_showroom.png" alt="Soo Machine &amp; Auto Showroom" /><em>‚ÄúSoo Machine &amp; Auto: Interior view of the beautiful show rooms on Maple Street‚Äù: The Evening News, Sault Saint Marie, MI, March 13, 1920, p. 9.</em></p>

<p><img src="/assets/img/2024/09/soo_machine_storage_room.png" alt="Soo Machine &amp; Auto Storage Room" /><em>‚ÄúSoo Machine &amp; Auto: Thousands of square feet of storage space in the new garage‚Äù: The Evening News, Sault Saint Marie, MI, March 13, 1920, p. 12.</em></p>

<blockquote>
  <p>On March 13, 1920, Soo Machine &amp; Auto Co. took out an 8-page supplement to <em>The Evening News</em>. At the time, it was the largest ever paid advertisement in <em>The Evening News</em>. This supplement contained a variety of articles, photos, and advertisements showcasing the company‚Äôs offerings and services. It is now part of the public domain, and I have attached a copy for others to enjoy. I tried my best to OCR it, but the quality of the microfilm scan was poor.</p>

  <p><a href="/assets/files/2024/09/Evening_News_1920-03-13_Supplemental.pdf">Evening_News_1920-03-13_Supplemental.pdf</a></p>

  <p><strong>EDIT 2025-05-21</strong>: UPLINK has uploaded their own scan of this newspaper with higher quality images (but less readable text). <a href="https://uplink.nmu.edu/node/103396">Check it out here</a>.</p>

  <p>However, I reached out and obtained an uncompressed scan from them, <a href="/assets/files/2024/09/CCHS-001_1920_03_13.pdf">which I‚Äôve recompressed at a suitable resolution for reading here (~50 MB)</a>.</p>
</blockquote>

<p>Throughout the <strong>1920s</strong>, Soo Machine &amp; Auto Co. adapted to the evolving automotive market, securing dealerships with several prominent car manufacturers. Building upon its existing partnerships with Jeffery, Buick, Chevrolet, Reo, Cadillac, Oldsmobile, and White trucks, the company expanded its offerings to include Paige automobiles. The company‚Äôs ability to secure dealerships with a diverse range of manufacturers highlights its strong reputation in the industry and its understanding of the growing demand for automobiles in the region.</p>

<p><img src="/assets/img/2024/09/soo_machine_salesrooms.png" alt="Soo Machine &amp; Auto Salesrooms" /><em>‚ÄúSoo Machine &amp; Auto: Mr. Morrison and some of his fellow workers in front of the Maple Street salesrooms‚Äù: The Evening News, Sault Saint Marie, MI, March 13, 1920, p. 13.</em></p>

<p>Beyond its role as an automotive dealer, Soo Machine &amp; Auto Co. became a central gathering place for the Sault Ste. Marie community. The sources describe the company as a place where ‚Äúfarmers would meet,‚Äù ‚Äúbigwigs gravitated,‚Äù ‚Äúsportsmen met,‚Äù and ‚Äúweary businessmen‚Äù would gather. This confluence of community members transformed the company into a de facto community center, where local affairs, sporting events, and even political matters were discussed and debated. The company‚Äôs central location on Maple Street further contributed to its role as a community hub.</p>

<p>The <strong>1920s</strong> brought a shift in leadership for the Soo Machine and Auto Company. Robert A. Morrison, a key figure since the company‚Äôs founding, departed in <strong>1921</strong>, leaving behind a legacy of success that the public widely attributed to his leadership. Stepping into the managerial role was Thomas Chandler, president of the Edison Sault Electric Company. Meanwhile, Roy D. Hollingsworth‚Äôs influence continued to grow, setting the stage for his eventual presidency and the company‚Äôs future renaming in his honor.</p>

<p>By <strong>1922</strong>, Soo Machine &amp; Auto had advertised the availability of the luxury Packard cars. But the company stopped advertising Packard cars after <strong>1925</strong>.</p>

<p><img src="/assets/img/2024/09/soo_machine_tour.jpg" alt="The Dixie Highway Tour from Vancouver to Halifax in front of Soo Machine &amp; Auto" /><em>‚ÄúJuly 1923: The Dixie Highway Tour from Vancouver to Halifax. 1. Tom Chandler, 2. Charles Chipley, 3. Capt. Hanson, 4. Fred Case, 5. Frank Trempe, 6. Bill Cummings, 7. Tom Folkner, 8. Dr. Doolittle, 10. Dick Rainhart, 12. Norm Hill, 13. Cap. Galbraith, 14 Frank Warner. Tourists are Capt. Hanson, Capt. Galbraith and Dr. Doolittle. The rest are local men.‚Äù: The Evening News, Sault Saint Marie, MI, May 1, 1968, p. B-5.</em></p>

<h3 id="1930s">1930s</h3>

<p><strong>Navigating the Depression</strong>: While the sources don‚Äôt explicitly discuss how Soo Machine navigated the economic challenges of the Great Depression, they do suggest that the company remained in business during this period. Advertisements from the 1930s promoting car sales, such as those featuring the affordability of new Buicks and the availability of installment plans and radios, hint at the company‚Äôs efforts to adapt to the economic climate and attract customers.</p>

<p>The company briefly carried Pontiac cars from <strong>1934</strong> to <strong>~1937</strong>. Several sources from late 1937 and 1938 mention that Soo Machine &amp; Auto Co. had dropped the Pontiac agency to focus back on Buick sales. For instance, a 1938 article states, ‚ÄúThere has been no Pontiac agency in the city since the Soo Machine &amp; Auto company last year decided to concentrate its sales efforts to Buicks‚Äù. It wouldn‚Äôt be until <strong>1958</strong> that we would see the Pontiac line return to the dealership.</p>

<p><strong>Community Engagement</strong>: Soo Machine continued to be a central point in the Sault Ste. Marie community throughout the 1930s. Advertisements indicate the company‚Äôs participation in local events and promotions. For example, a 1933 ad mentions a ‚ÄúSchool Year 1933-1934‚Äù event.</p>

<h3 id="1940s">1940s</h3>

<p><strong>Limited Information</strong>: The sources provide very little information specifically about Soo Machine‚Äôs operations during the 1940s. This lack of detail makes it challenging to pinpoint highlights from this period. It‚Äôs possible that, like many businesses during wartime, Soo Machine may have faced constraints due to rationing, supply shortages, or manpower limitations imposed by World War II.</p>

<p><img src="/assets/img/2024/09/soo_machine_front_watermarked.jpg" alt="Soo Machine &amp; Auto Co." /><em>Soo Machine &amp; Auto Co. ca. 1940 with a 1940 Pontiac Deluxe Six (or Eight) parked outside. Used with permission from Chippewa County Historical Society, Sault Saint Marie, MI, ca. 1940, Walter Materna Collection.</em></p>

<p><strong>Post-War Transition</strong>: While specifics about the 1940s are scarce, an article from 1949 mentions Soo Machine hosting a display of the new Buick chassis, suggesting a return to normalcy and a focus on showcasing new car models as the nation transitioned out of the war years.</p>

<h3 id="1950s">1950s</h3>

<p>By the <strong>1950s</strong>, Soo Machine and Auto Co.‚Äôs used car lot boasted a diverse selection, featuring everything from Buicks and Chevrolets to Dodges, Fords, GMCs, Hudsons, Mercurys, Nashes, Oldsmobiles, Plymouths, and Willys.</p>

<p>Roy D. Hollingsworth retired from Hollingsworth Auto Sales in <strong>1956</strong>. Although he retired in 1956, he retained an interest in the firm until his death.</p>

<p><img src="/assets/img/2024/09/roy_d_hollingsworth.jpg" alt="Roy D. Hollingsworth" /><em>‚ÄúRoy D. Hollingsworth‚Äù: The Evening News, Sault Saint Marie, MI, May 1, 1968, p. B-6.</em></p>

<p>In <strong>1952</strong>, Elmer Mansfield, who had retired from the U. S. Postal Service, started working at Soo Machine &amp; Auto Co.</p>

<p>In <strong>1957</strong>, Elmer‚Äôs son, Francis ‚ÄúBud‚Äù Mansfield joined and brought the Pontiac line back to Soo Machine &amp; Auto Co. This ended the 20-year Pontiac drought at the dealership.</p>

<p>In <strong>1958</strong>, Soo Machine &amp; Auto officially became a Pontiac dealership.</p>

<p>By the late <strong>1950s</strong>, they were a dealer for Buick, Cadillac, GMC, Pontiac, and Opel.</p>

<h3 id="1960s">1960s</h3>

<p>In <strong>1965</strong>, Soo Machine and Auto Co. changed its name to Hollingsworth Auto Sales, Inc., while maintaining the same ownership and management. Duncan Hollingsworth and Jerry Hollingsworth became the president and vice-president of the company, respectively. The brothers were the sons of Roy D. Hollingsworth, who had been a key figure in the company‚Äôs history.</p>

<p>In <strong>1968</strong>, Hollingsworth Auto Sales, Inc. moved to a new 17,000 square-foot location on Business Spur I-75 and Three Mile Road (4001 I-75 Business Spur Sault Ste. Marie, MI 49783). <a href="https://www.google.com/maps/@46.463634,-84.3722568,3a,21.3y,109.39h,87.27t/data=!3m6!1e1!3m4!1sf9IczCDux6O0dYfkjDnUvA!2e0!7i16384!8i8192?coh=205409&amp;entry=ttu&amp;g_ep=EgoyMDI0MDgyMy4wIKXMDSoASAFQAw%3D%3D">The building still stands today</a>.</p>

<p><img src="/assets/img/2024/09/hollingsworth_auto.jpg" alt="Hollingsworth Auto" /><em>‚ÄúNew Hollingsworth Sales Location Is Spacious‚Äù: The Evening News, Sault Saint Marie, MI, May 1, 1968, p. B-9.</em></p>

<p>The new building was strategically positioned at the northeast corner of City Limits Road and the I-75 Business Spur, a rapidly developing area then known as the ‚ÄúMiracle Mile‚Äù. This location provided enhanced visibility and accessibility for customers. The building occupied a 10-acre tract, providing ample space for future expansion. The car lot alone could accommodate 150 vehicles. A 50-foot wide canopy connected the showroom to a 12,000 square foot service and parts department, offering protection from the elements and convenience for customers.</p>

<p>The service department boasted 12 service stalls, making it one of the most modern automotive service centers in the region. The facility included a new factory-built paint booth, <strong>the second of its kind</strong> in the Upper Peninsula at the time, and renowned for its modern design.</p>

<p>The grand opening of the new building coincided with the company‚Äôs ‚Äú50th anniversary‚Äù (but not really), celebrated over three days in May 1968. The event featured live music, refreshments, and numerous prizes to commemorate the occasion and express gratitude to loyal customers.</p>

<h3 id="1970s">1970s</h3>

<p>Throughout the 1970s, Hollingsworth Auto emphasized its commitment to customer service. Advertisements frequently mention ‚Äúfactory-trained mechanics,‚Äù ‚Äúguaranteed satisfaction,‚Äù and a dedication to providing a positive car-buying experience. This customer-centric approach likely contributed to the company‚Äôs continued success.</p>

<p>While still involved in Hollingsworth Auto, Duncan and Jerry Hollingsworth established a new business venture, Hollingsworth Tires, between <strong>1975</strong> and <strong>1976</strong>. Located near Hollingsworth Auto on Three-Mile Road, this expansion into tire sales and services reflected the brothers‚Äô entrepreneurial spirit and their understanding of the automotive market‚Äôs needs.</p>

<p>In late <strong>1975</strong>, Duncan Hollingsworth and Jerry Hollingsworth announced the sale of the dealership to Paul Braun and Francis (Bud) Mansfield. This change in ownership marked a turning point in the company‚Äôs history, though the Hollingsworth family remained involved in the business.</p>

<p>They announced that on <strong>January 3, 1976</strong>, Hollingsworth Auto Sales would start operating under the name <strong>Braun-Mansfield, Inc.</strong></p>

<h3 id="1980s">1980s</h3>

<p>In <strong>1980</strong>, Bud Mansfield purchased Paul Braun‚Äôs share of the business, becoming the sole owner of Braun-Mansfield. It was renamed to <strong>Francis M. Mansfield, Inc</strong> (<strong>F. M. Mansfield, Inc.</strong>).</p>

<p><img src="/assets/img/2024/09/francis_bud_mansfield.jpg" alt="Francis &quot;Bud&quot; Mansfield" /><em>‚Äú‚ÄòBud‚Äô Mansfield in showroom‚Äù: The Evening News, Sault Saint Marie, MI, November 6, 1980, p. 2.</em></p>

<p>Unfortunately, 50% of the firm‚Äôs business had been with <a href="https://en.wikipedia.org/wiki/Kincheloe_Air_Force_Base">Kincheloe Air Force Base</a>, which was in the final stages of closing down. The base closure and continuing poor economic conditions of the <a href="https://en.wikipedia.org/wiki/Early_1980s_recession">‚Äúdouble-dip‚Äù recession in the early 1980s</a> worked against F. M. Mansfield.</p>

<p>On <strong>November 13, 1981</strong>, F. M. Mansfield closed its doors to regular operations.</p>

<p>The closure marked the end of an era for Soo Machine &amp; Auto, Hollingsworth Auto, Braun-Mansfield, and F. M. Mansfield‚Äîa company that had been a fixture in Sault Ste. Marie for decades. üöó</p>

<h3 id="a-legacy">A Legacy</h3>

<p>For over half a century, Soo Machine and Auto wasn‚Äôt merely a place to buy cars or get them fixed; it was woven into the very fabric of Sault Ste. Marie life. Founded around 1911, its evolution into a community cornerstone was largely guided by the astute business acumen of Roy D. Hollingsworth. His success selling cars during the traditionally slow winter months challenged the prevailing business assumptions of the time and helped transform Soo Machine and Auto from a seasonal sales business to a year-round operation.</p>

<p>Hollingsworth‚Äôs contributions extended beyond the automotive realm. He was highly involved in community affairs, holding leadership roles in organizations like the Chamber of Commerce, Boy Scouts of America, Rotary Club, and Red Cross. He directed Civil Defense in Sault Ste. Marie during World War II and actively participated in the Republican Party. He was recognized for his dedication and leadership by figures like former Michigan Governor <a href="https://en.wikipedia.org/wiki/Chase_Osborn">Chase S. Osborn</a>.</p>

<p>‚ÄúSoo Machine‚Äù may have changed names over the years ‚Äì becoming Hollingsworth Auto Sales, then Braun-Mansfield, and finally F.M. Mansfield. But its legacy endures. It was the people behind those names ‚Äì the dedicated employees at each iteration ‚Äì who truly made the dealership a cornerstone of the community. ‚ÄúSoo Machine‚Äù evokes a sense of nostalgia, reminding us of a time when a local business, led by passionate individuals, could be more than just a place of commerce. It could be the heart of a community.</p>

<h3 id="dealership-name-changes">Dealership Name Changes</h3>

<p>Here is a summary of the name changes that took place at this dealership over the years. There is sometimes an overlap period where both names are used in the newspapers.</p>

<ul>
  <li><strong>Soo Machine &amp; Engine Works</strong>
    <ul>
      <li>July 22, 1911</li>
      <li>While first announced (as ‚ÄúSoo Machine Company‚Äù) on June 27, 1911, it wasn‚Äôt until July 22 that they put a notice in the newspaper that they were open to the public with the ‚ÄúEngine Works‚Äù name.</li>
    </ul>
  </li>
  <li><strong>Soo Machine &amp; Auto Co.</strong>
    <ul>
      <li>July 18, 1912</li>
      <li>This aligns with the move from 128 Arlington St. to the new location at 128-130 East Portage Avenue.</li>
      <li>The first newspaper mention I found with their new incorporated name.</li>
    </ul>
  </li>
  <li><strong>Hollingsworth Auto Sales, Inc.</strong>
    <ul>
      <li>April 9, 1965</li>
    </ul>
  </li>
  <li><strong>Braun-Mansfield, Inc.</strong>
    <ul>
      <li>January 3, 1976</li>
    </ul>
  </li>
  <li><strong>F. M. Mansfield, Inc.</strong>
    <ul>
      <li>November 7, 1980</li>
    </ul>
  </li>
</ul>

<p>{start_amp_ignore}</p>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    google.charts.load("current", {
        packages: ["timeline"]
    });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        let resizeTimer;
        window.onresize = () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(reloadChart, 100);
        };

        var container = document.getElementById('dealership-name-chart');
        var chart = new google.visualization.Timeline(container);
        var dataTable = new google.visualization.DataTable();

        dataTable.addColumn({
            type: 'string',
            id: 'Id'
        });
        dataTable.addColumn({
            type: 'string',
            id: 'Name'
        });
        dataTable.addColumn({
            type: 'date',
            id: 'Start'
        });
        dataTable.addColumn({
            type: 'date',
            id: 'End'
        });

        var cars = [
            ['1', 'Soo Machine & Engine Works', new Date(1911, 7, 22), new Date(1912, 12, 10)],
            ['2', 'Soo Machine & Auto', new Date(1912, 7, 18), new Date(1965, 4, 9)],
            ['3', 'Hollingsworth Auto', new Date(1965, 4, 9), new Date(1976, 1, 3)],
            ['4', 'Braun-Mansfield', new Date(1976, 1, 3), new Date(1980, 11, 7)],
            ['5', 'F. M. Mansfield', new Date(1980, 11, 7), new Date(1981, 11, 13)],
        ]

        // Data Rows
        dataTable.addRows(cars);

        // Get all brands from my array
        const brands = cars.map(row => row[0]);

        // Use a Set to get unique brands
        const uniqueBrands = new Set(brands);

        // Get the number of unique brands
        const numberOfDistinctBrands = uniqueBrands.size;

        options = {
            // 50 is the height of the footer, 41 is the height of each row.
            // This is so I can have a dynamic height based on the number of brands
            height: 50 + 41 * numberOfDistinctBrands, 
            timeline: {
                showRowLabels: false,
            }
        };


        reloadChart();

        function reloadChart() {
            chart.draw(dataTable, options);
        }
    }
</script>

<div id="dealership-name-chart"></div>

<p>{end_amp_ignore}</p>

<h3 id="important-individuals">Important Individuals</h3>

<p>Here is a list of important individuals associated with Soo Machine &amp; Auto, Hollingsworth Auto, Braun-Mansfield, and F. M. Mansfield, along with their roles and years of activity. <strong>This was generated by NotebookLM from the sources I provided</strong>. I did my best to verify and resolve any information from the sources that were in conflict.</p>

<ul>
  <li><strong>Robert A. Morrison</strong>
    <ul>
      <li><strong>Role</strong>: Co-founder, Manager, Treasurer</li>
      <li><strong>Years Active</strong>: 1911-1921</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Established Soo Machine &amp; Engine Works with George Whithouse Ingham on June 7, 1911.</li>
          <li>Hired Roy D. Hollingsworth in 1915.</li>
          <li>Served as manager until Clayton J. Schenk took over the role.</li>
          <li>Left the company in 1921.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>George Whithouse Ingham</strong>
    <ul>
      <li><strong>Role</strong>: Co-founder, President (1911-1913)</li>
      <li><strong>Years Active</strong>: 1911-March 1, 1913¬†</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Co-founded Soo Machine with Robert A. Morrison.</li>
          <li>Chief engineer of the Pittsburgh Steamship Company.</li>
          <li>Held at least 2 patents, <a href="https://patents.google.com/patent/US760126A/en">US760126A</a> &amp; <a href="https://patents.google.com/patent/US843536A/en">US843536A</a>.</li>
          <li>The sources do not provide further details on Ingham‚Äôs involvement with the company.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Roy Duncan Hollingsworth</strong>
    <ul>
      <li><strong>Role</strong>: Owner (1943-1964), President (1944-1964), Vice-President, Employee (1915-1956)</li>
      <li><strong>Years Active</strong>: 1915-1956</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Considered a key figure who helped shape the company‚Äôs identity and success.</li>
          <li>Became president of the company in 1944.</li>
          <li>Retired from active involvement in 1956 but retained an interest in the business until his death.</li>
          <li>His sons, ‚ÄúDuncan‚Äù and ‚ÄúJerry‚Äù, continued the family legacy in the automobile business.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Clayton J. Schenk</strong>
    <ul>
      <li><strong>Role</strong>: Secretary, Manager, Director</li>
      <li><strong>Years Active</strong>: 1930s-unknown</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Former part-owner of the Marks-Schenk company.</li>
          <li>Became manager of Soo Machine &amp; Auto after buying a considerable interest in the company.</li>
          <li>Elected as Secretary and Director by the board of directors.</li>
          <li>Possible middle name Joe, as his son was named Clayton Joe Schenk, Jr.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Edward Duncan Hollingsworth (Known as ‚ÄúDuncan Hollingsworth‚Äù)</strong>
    <ul>
      <li><strong>Role</strong>: President (1964-1976), Owner</li>
      <li><strong>Years Active</strong>: ca. 1950s-1976</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Son of Roy D. Hollingsworth.</li>
          <li>Became president of the company, then known as Hollingsworth Auto Sales, in 1964.</li>
          <li>Sold share of the company in 1976.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Jerome L. Hollingsworth (Known as ‚ÄúJerry Hollingsworth‚Äù)</strong>
    <ul>
      <li><strong>Role</strong>: Vice President (1964-1976), Owner</li>
      <li><strong>Years Active</strong>: ca. 1950s-1976</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Son of Roy D. Hollingsworth.</li>
          <li>Served as vice president of Hollingsworth Auto Sales.</li>
          <li>Sold share of the company in 1976.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Francis ‚ÄúBud‚Äù Mansfield</strong>
    <ul>
      <li><strong>Role</strong>: Sales Manager, Partner (1976-1980), Owner (1980-1981)</li>
      <li><strong>Years Active</strong>: 1957-1981</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Started at the company in 1957.</li>
          <li>Later became sales manager.</li>
          <li>Purchased a 50% interest in the company alongside Paul Braun in 1976.</li>
          <li>Eventually became the sole owner in late 1980.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Paul J. Braun</strong>
    <ul>
      <li><strong>Role</strong>: Partner (1976-1980)</li>
      <li><strong>Years Active</strong>: 1976-1980</li>
      <li><strong>Key Information</strong>:
        <ul>
          <li>Detroit area district sales manager for Buick for 15 years.</li>
          <li>Purchased Hollingsworth Auto Sales with Francis ‚ÄúBud‚Äù Mansfield in 1976.</li>
          <li>His involvement ended around November 6, 1980.</li>
          <li>Paul moved away and in 1981 bought Tinney Cadillac in Buffalo, New York.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="car-makes-carried">Car Makes Carried</h3>

<p>The following table lists verified car makes advertised by Soo Machine &amp; Auto, Hollingsworth Auto, Braun-Mansfield, and F. M. Mansfield, along with the years they appeared in our sources. Please note that the absence of an advertisement for a specific car brand or year doesn‚Äôt necessarily mean Soo Machine didn‚Äôt sell it during that time. The sources, primarily advertisements and articles, cover several decades, and there may be gaps in the available records. Occasionally I indicate when a car brand was likely carried continuously throughout a specific period when there is overwhelming evidence.</p>

<ul>
  <li><strong><a href="https://en.wikipedia.org/wiki/Buick">Buick</a></strong>: 1917-1981</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Cadillac">Cadillac</a></strong>: 1916, 1917, 1922, 1923, 1924, 1929, 1931, 1936, 1938, 1948, 1949, 1950, 1952, 1953, 1956, 1957, 1958, 1960, 1962, 1963, 1964, 1971, 1978, 1979 (Later article claims franchised since 1934.)</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Chevrolet">Chevrolet</a></strong>: 1916, 1917</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/GMC_(marque)">GMC Trucks</a></strong>: 1931, 1937, 1939, 1946, 1947, 1949, 1951, 1953, 1957, 1962, 1971, 1978, 1979 (Later article claims franchising since 1929.)</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Hudson_Motor_Car_Company">Hudson</a></strong>: 1925</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Jeep">Jeep</a></strong>: 1962, 1968, 1971 (Later article claims franchising since 1964.)</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Jewett_(automobile)">Jewett</a></strong>: 1923, 1924</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Jeffery_(automobile)">Jeffery</a></strong>: 1914, 1915, 1917</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/LaSalle_(automobile)">LaSalle</a></strong>: 1929, 1930, 1931, 1936, 1939</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Marquette_(automobile)">Marquette</a></strong>: 1929, 1930</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Oldsmobile">Oldsmobile</a></strong>: 1916, 1917, 1924, 1931</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Opel">Opel</a></strong>: 1959, 1973, 1975</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Overland_Automobile">Overland</a></strong>: 1918-1926</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Paige_automobile">Paige</a></strong>: 1923, 1925, 1927</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Packard">Packard</a></strong>: 1922-1925</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Pontiac_(automobile)">Pontiac</a></strong>: 1934-1937, 1958-1981</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Rambler_American">Rambler</a></strong>: 1911, 1912, 1913, 1962, 1963</li>
  <li><strong><a href="https://web.archive.org/web/20230401011722/https://www.thesahb.com/snapshot-192-1913-r-c-h/">R-C-H</a></strong>: 1911</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/REO_Motor_Car_Company">REO</a></strong>: 1914, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1927</li>
  <li><strong><a href="https://en.wikipedia.org/wiki/White_Motor_Company">White</a></strong>: 1917, 1919</li>
</ul>

<p>The sources also indicate that Soo Machine &amp; Auto sold <strong><a href="https://en.wikipedia.org/wiki/Case_Corporation">Case tractors</a></strong> in 1917.</p>

<p>{start_amp_ignore}</p>

<p><em>Based on partial information from advertisements</em>, this is my <strong>approximate timeline</strong> of car makes carried by the dealership. This is not comprehensive but gives an overall idea. When a car was listed in an ad, I assumed it was carried for at least 1 year after. I also assumed that a car was carried continuously if it was listed in multiple years, unless a large gap is present.</p>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    google.charts.load("current", {
        packages: ["timeline"]
    });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        let resizeTimer;
        window.onresize = () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(reloadChart, 100);
        };

        var container = document.getElementById('timeline-chart');
        var chart = new google.visualization.Timeline(container);
        var dataTable = new google.visualization.DataTable();

        dataTable.addColumn({
            type: 'string',
            id: 'Brand'
        });
        dataTable.addColumn({
            type: 'string',
            id: 'Name'
        });
        dataTable.addColumn({
            type: 'date',
            id: 'Start'
        });
        dataTable.addColumn({
            type: 'date',
            id: 'End'
        });

        var cars = [
            ['Rambler', 'Rambler', new Date(1959, 0, 1), new Date(1965, 0, 1)],
            ['Rambler', 'Rambler', new Date(1911, 0, 1), new Date(1913, 0, 1)],
            ['R-C-H', 'R-C-H', new Date(1911, 0, 1), new Date(1912, 0, 1)],
            ['Jeffery', 'Jeffery', new Date(1914, 0, 1), new Date(1917, 0, 1)],
            ['REO', 'REO', new Date(1914, 0, 1), new Date(1927, 0, 1)],
            ['Cadillac', 'Cadillac', new Date(1916, 0, 1), new Date(1917, 0, 1)],
            ['Cadillac', '???', new Date(1917, 0, 1), new Date(1922, 0, 1)],
            ['Cadillac', 'Cadillac', new Date(1922, 0, 1), new Date(1939, 0, 1)],
            ['Cadillac', '???', new Date(1939, 0, 1), new Date(1948, 0, 1)],
            ['Cadillac', 'Cadillac', new Date(1948, 0, 1), new Date(1981, 11, 13)],
            ['Chevrolet', 'Chevrolet', new Date(1916, 0, 1), new Date(1917, 0, 1)],
            ['Oldsmobile', 'Oldsmobile', new Date(1916, 0, 1), new Date(1918, 0, 1)],
            ['Oldsmobile', 'Oldsmobile', new Date(1924, 0, 1), new Date(1925, 0, 1)],
            ['Oldsmobile', '???', new Date(1925, 0, 1), new Date(1931, 0, 1)],
            ['Oldsmobile', 'Oldsmobile', new Date(1931, 0, 1), new Date(1932, 0, 1)],
            ['White', 'White', new Date(1917, 0, 1), new Date(1920, 0, 1)],
            ['Buick', 'Buick', new Date(1917, 0, 1), new Date(1981, 11, 13)],
            ['Overland', 'Overland', new Date(1918, 0, 1), new Date(1926, 0, 1)],
            ['Packard', 'Packard', new Date(1922, 0, 1), new Date(1925, 0, 1)],
            ['Jewett', 'Jewett', new Date(1923, 0, 1), new Date(1925, 0, 1)],
            ['Hudson', 'Hudson', new Date(1925, 0, 1), new Date(1926, 0, 1)],
            ['Paige', 'Paige', new Date(1923, 0, 1), new Date(1927, 0, 1)],
            ['GMC Trucks', 'GMC Trucks', new Date(1929, 0, 1), new Date(1981, 11, 13)],
            ['Marquette', 'Marquette', new Date(1929, 0, 1), new Date(1930, 0, 1)],
            ['LaSalle', 'LaSalle', new Date(1929, 0, 1), new Date(1940, 0, 1)],
            ['Pontiac', 'Pontiac', new Date(1934, 0, 1), new Date(1937, 0, 1)],
            ['Pontiac', 'Pontiac', new Date(1958, 0, 1), new Date(1981, 11, 13)],
            ['Opel', 'Opel', new Date(1959, 0, 1), new Date(1975, 0, 1)],
            ['Jeep', 'Jeep', new Date(1962, 0, 1), new Date(1971, 0, 1)],
        ]

        // Data Rows
        dataTable.addRows(cars);

        // Get all brands from my array
        const brands = cars.map(row => row[0]);

        // Use a Set to get unique brands
        const uniqueBrands = new Set(brands);

        // Get the number of unique brands
        const numberOfDistinctBrands = uniqueBrands.size;

        options = {
            // 50 is the height of the footer, 41 is the height of each row.
            // This is so I can have a dynamic height based on the number of brands
            height: 50 + 41 * numberOfDistinctBrands, 
            timeline: {
                showRowLabels: false,
            }
        };


        reloadChart();

        function reloadChart() {
            chart.draw(dataTable, options);
        }
    }
</script>

<div id="timeline-chart"></div>

<p>{end_amp_ignore}</p>

<h2 id="information-bounties">Information Bounties</h2>

<p>While this digital excavation has unearthed a treasure trove of information, a few intriguing mysteries remain that I‚Äôd like to learn more. I am offering a few monetray bounties to anyone who can help uncover these unknowns below.</p>

<p>I can either pay directly, or make a donation on your behalf to a charity or non-profit of your choice.</p>

<h3 id="50-bounties">$50 Bounties</h3>

<details>

  <summary>(Unclaimed) Existence (or not) of Soo Machine &amp; Auto licence plate frames</summary>

  <p><strong>Criteria</strong>: Proof of the existence of ‚ÄúSoo Machine &amp; Auto‚Äù license plate frames (including what they looked like). This <em>excludes</em> any frames from the Hollingsworth Auto and later eras.</p>

  <p>OR</p>

  <p><strong>Criteria</strong>: Reasonable proof that ‚ÄúSoo Machine &amp; Auto‚Äù license plate frames never existed. Such as a relative who worked at Soo Machine in the 60‚Äôs before the name was changed to Hollingsworth Auto.</p>

  <p>I think the best bet is to locate anyone who has a bunch of old car memorabilia or license plate frames in Sault Ste. Marie. I‚Äôm trying to track one down for the car that has been in our family since ‚Äò63, or have one recreated if they ever existed.</p>

</details>

<h3 id="25-bounties">$25 Bounties</h3>

<details>

  <summary>(Unclaimed) Robert A. Morrison's middle name</summary>

  <p><strong>Criteria</strong>: What is Robert A. Morrison‚Äôs middle name? I am looking for documentation providing Robert‚Äôs middle name. Any documentation should reasonably match known records such as his birth, residences, or known family members.</p>

  <blockquote>
    <p>I‚Äôve done some digging on FamilySearch and attached a few records to <a href="https://www.familysearch.org/tree/person/details/9FWJ-G1R">Robert‚Äôs FamilySearch page</a> to help with future discovery by others. (The website does require an account, but it‚Äôs free to use).</p>
  </blockquote>

  <p>It‚Äôs possible that Robert A. Morrison was actually adopted by Charles and Sarah Morrison, as he doesn‚Äôt show up in the household in the <a href="https://www.familysearch.org/ark:/61903/1:1:MVFZ-FCQ">Morrison 1881</a>, and I can‚Äôt even being to piece together what happened to the Morrison family by <a href="https://www.familysearch.org/ark:/61903/1:1:KHG8-2T5">1891</a> as they‚Äôre all seamingly apart by then. Charles or Sarah show up on any birth records as parents for someone named Robert. By 1901, Robert had seemingly immigrated to the US (1899/1900). So it‚Äôs possible that Robert was a relative or close neighbor friend that could have had a different name when he born. I was unable to find any records for a Robert born on October 14, 1880, but that doesn‚Äôt mean I searched all of the correct record collections. My theory is that Robert was adopted by the Morrison family between 1891-1899 before he moved away. Which is why Robert later lists Charles and Sarah as his parents on his marriage certificate.</p>

  <p>This might make tracking down his original birth records a bit trickier since we don‚Äôt necessarily know his birth parents for certain. We‚Äôd probably want to start looking for any Robert born in Canada on October 14, 1880 and then check if there are records of his birth parents passing away before 1899.</p>

  <p>All documents and newspaper articles that I‚Äôve found for Robert Morrison only list his middle initial as ‚ÄúA‚Äù. I‚Äôve tried searching for his birth record in Canada, but I‚Äôve had no luck.</p>

  <p>Good resources include newspaper obituaries, death certificates, or cemetery records.</p>

</details>

<details>

  <summary>(Unclaimed) Robert A. Morrison's death record/date</summary>

  <p><strong>Criteria</strong>: When did Robert A. Morrison pass away? I am looking for documentation providing Robert‚Äôs date of death. Any documentation should reasonably match known records such as his birth, residences, history, or known family members.</p>

  <blockquote>
    <p>I‚Äôve done some digging on FamilySearch and attached a few records to <a href="https://www.familysearch.org/tree/person/details/9FWJ-G1R">Robert‚Äôs FamilySearch page</a> to help with future discovery by others. (The website does require an account, but it‚Äôs free to use).</p>
  </blockquote>

  <p>It‚Äôs possible that Robert A. Morrison was actually adopted by Charles and Sarah Morrison, as he doesn‚Äôt show up in the household in the <a href="https://www.familysearch.org/ark:/61903/1:1:MVFZ-FCQ">Morrison 1881</a>, and I can‚Äôt even being to piece together what happened to the Morrison family by <a href="https://www.familysearch.org/ark:/61903/1:1:KHG8-2T5">1891</a> as they‚Äôre all seamingly apart by then. Charles or Sarah show up on any birth records as parents for someone named Robert. By 1901, Robert had seemingly immigrated to the US (1899/1900). So it‚Äôs possible that Robert was a relative or close neighbor friend that could have had a different name when he born. I was unable to find any records for a Robert born on October 14, 1880, but that doesn‚Äôt mean I searched all of the correct record collections. My theory is that Robert was adopted by the Morrison family between 1891-1899 before he moved away. Which is why Robert later lists Charles and Sarah as his parents on his marriage certificate.</p>

  <p>It appears that Robert A. Morrison left Sault Ste. Marie after selling his ownership of Soo Machine &amp; Auto in 1921 and divorced Violet during this decade.</p>

  <p>The last <em>possible</em> known record I have of Robert Morrison is from an April 29, 1929 article in The Evening News that states, ‚ÄúRobert Morrison of Milwaukee, a former Sault resident who has been spending several days in the city on business returned this evening to his home.‚Äù But I don‚Äôt think he spent a long time there.</p>

  <p>In the <a href="https://www.familysearch.org/ark:/61903/3:1:33S7-9RFS-8CN?view=index&amp;action=view">1920 census</a>, Robert and his wife, Violet, are still living together. However, Robert is listed as ‚Äúmarried‚Äù while Violet is listed as ‚Äúsingle‚Äù. (Speculating) They may have been in the process of getting a divorce at this time, which is why Robert sold his ownership of Soo Machine and moved away.</p>

  <p>By the 1930 census, <a href="https://www.familysearch.org/ark:/61903/1:1:XQYW-C53">Violet‚Äôs record</a> shows her living with her parents and lists herself as ‚Äúdivorced‚Äù.</p>

  <p>I believe this <a href="https://www.familysearch.org/ark:/61903/1:1:XQK6-ZGH">1930‚Äôs census record</a> from Douglas, Nebraska, belongs to the same Robert A. Morrison from Soo Machine &amp; Auto. My supporting evidence:</p>

  <ul>
    <li>Name: Robert A. Morrison (he always includes his middle initial on documents)</li>
    <li>In the 1930s census, he is listed as ‚Äúdivorced‚Äù; which matches Violet‚Äôs census record</li>
    <li>Born between 1877-1881</li>
    <li>Listed as Canadian (Ontario) born</li>
    <li>Immigrated in the year 1900</li>
    <li>WWI veteran (this one helps the most!)</li>
  </ul>

  <p>There are only a handful of WWI-drafted men named Robert Morrison who were born in 1879 ¬± 1 year. <a href="https://www.familysearch.org/search/record/results?count=100&amp;q.birthLikeDate.from=1878&amp;q.birthLikeDate.to=1880&amp;q.givenName=Robert%20A&amp;q.surname=Morrison&amp;q.surname.exact=on&amp;f.collectionId=1968530&amp;f.collectionId=2996059&amp;f.collectionId=2858132&amp;f.collectionId=3010015&amp;f.collectionId=2761957&amp;f.collectionId=3019092&amp;f.collectionId=2489920&amp;f.collectionId=1807269&amp;f.collectionId=2968243&amp;f.collectionId=2568864&amp;f.collectionId=3039663&amp;f.collectionId=2202707&amp;f.collectionId=3031545&amp;f.collectionId=3041286&amp;f.collectionId=3019074&amp;f.collectionId=1878898&amp;f.collectionId=3741249&amp;f.collectionId=3029259&amp;f.collectionId=2865018">Source</a>.</p>

  <p>From that large list above, we can eliminate any person whose last name does not begin with the letter ‚ÄòA‚Äô. Since we know Robert A. Morrison was born in Canada, we can remove any names of natural-born US citizens.</p>

  <p>That leaves us with only 4 possible individuals with the name Robert Morrison.</p>

  <ol>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:7TWP-LWZM">Robert A. Morrison of Michigan</a></li>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:4881-4BW2">Robert Morrison of Philadelphia</a></li>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:WB2D-JPW2">Robert Morrison of Pittsburgh</a></li>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:KZVJ-3GD">Robert Arthur Morrison of Los Angeles</a></li>
  </ol>

  <p>We can elimitate ‚ÄúRobert Morrison of Philadelphia‚Äù because the census record lists ‚ÄúIreland‚Äù as his country of birth. I found this in a marriage licence record for a Robert Morrison in Philadelphia with a matching birthday and spouse‚Äôs name. <a href="https://www.familysearch.org/ark:/61903/1:1:Q29M-TPVS">Source</a>.</p>

  <p>If we make a search in the 1920s US census for Robert Morrison‚Äôs born in Canada between 1877 and 1881, we only find 2 remaining individuals that could fit the name. ‚ÄúRobert Morrison of Pittsburgh‚Äù never shows up in my census searches (not to be confused with the Robert Morrison in Philadelphia). <a href="https://www.familysearch.org/search/record/results?count=100&amp;q.birthLikeDate.from=1877&amp;q.birthLikeDate.to=1881&amp;q.birthLikePlace=Canada&amp;q.givenName=robert&amp;q.sex=Male&amp;q.surname=morrison&amp;q.surname.exact=on&amp;f.collectionId=1488411">Source</a>.</p>

  <ol>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:MZSK-D7Q">Robert J. Morrison of Michigan</a> (‚ÄúJ‚Äù is likely a mishearing of ‚ÄúA‚Äù as Robert is still listed as still living with Violet in Sault Ste. Marie on this record)</li>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:MHQT-R6T">Robert A. Morrison of Los Angeles</a></li>
  </ol>

  <p>However, in 1922, the Robert A. Morrison of Los Angeles passed away. <a href="https://www.familysearch.org/ark:/61903/1:1:CZLX-CYN2">Source</a>.</p>

  <p>This aligns with the 1930s census search, where only one remaining Robert Morrison seems to match our search criteria. <a href="https://www.familysearch.org/search/record/results?count=100&amp;q.birthLikeDate.from=1877&amp;q.birthLikeDate.to=1881&amp;q.birthLikePlace=Canada&amp;q.givenName=robert&amp;q.surname=morrison&amp;q.surname.exact=on&amp;f.collectionId=1810731">Source</a>.</p>

  <p>This means that the only remaining Robert Morrison that fits our search criteria is the Robert A. Morrison in Nebraska from the 1930s and 1940s US Census records.</p>

  <ul>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:XQK6-ZGH">1930s US Census record</a> (this one lists him as a WWI veteran)</li>
    <li><a href="https://www.familysearch.org/ark:/61903/1:1:K997-2P1">1940s US Census record</a></li>
  </ul>

  <p>At the age of 63 in the 1940s census record, it lists him as unable to work.</p>

  <p>If we try to search for Robert Morrison‚Äôs in the 1950s US Census, we no longer find anyone that matches our criteria. <a href="https://www.familysearch.org/1950census/search/record-discovery/results?count=100&amp;icid=discovery-search-1950-1&amp;q.birthLikeDate.from=1877&amp;q.birthLikeDate.to=1881&amp;q.birthLikePlace=Canada&amp;q.givenName=Robert&amp;q.surname=Morrison&amp;q.surname.exact=on&amp;recordDiscoveryMode=true&amp;f.collectionId=4464515">Source</a>.</p>

  <p>This would indicate that Robert A. Morrison was either been missed, moved out of the US, or likely passed away between 1940 and 1950.</p>

  <p>I am looking for an exact date of death as part of this bounty.</p>

</details>

<h2 id="reflections-the-joy-of-discovery-and-the-power-of-automation">Reflections: The Joy of Discovery and the Power of Automation</h2>

<p>This journey into the history of Soo Machine &amp; Auto, Hollingsworth Auto, Braun-Mansfield, and F.M. Mansfield has been a rewarding one. Not only have I learned new skills and overcome technical challenges, but I‚Äôve also discovered fascinating stories about the people and places connected to these businesses. It‚Äôs a testament to the power of technology to revive forgotten histories and connect us to our past.</p>

<p>If you‚Äôre inspired to embark on your own historical data project, remember that the tools and techniques I‚Äôve shared are just the beginning. The key is to approach the process with curiosity, passion, and a willingness to learn. Happy exploring, and may your journey into the past be as enriching as mine has been!</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="large project" /><summary type="html"><![CDATA[AI supercharged my quest to unearth the forgotten history of Soo Machine & Auto, sparked by a family connection. Explore my findings and how AI transforms research, breathing life into the past.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2024/09/soo_machine_showroom.png" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2024/09/soo_machine_showroom.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Making Bluetooth the Beacon of Trash Day</title><link href="https://www.kyleniewiada.org/blog/2024/06/bluetooth-beacon-waste-bins/" rel="alternate" type="text/html" title="Making Bluetooth the Beacon of Trash Day" /><published>2024-06-25T21:07:00-04:00</published><updated>2024-06-25T21:07:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2024/06/bluetooth-beacon-waste-bins</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2024/06/bluetooth-beacon-waste-bins/"><![CDATA[<p>If you‚Äôre anything like me, you‚Äôve probably experienced the frustration of dragging your trash bins to the curb only to realize it wasn‚Äôt trash day‚Ä¶ or worse, mixing up the recycling week and missing the pickup entirely. Well, not anymore! I‚Äôve integrated some affordable Bluetooth beacons with my Home Assistant setup to create a smart trash system that not only notifies me when to take out the bins but also tells me when they‚Äôve been emptied.</p>

<details>

  <summary>Post Changelog</summary>

  <ul>
    <li><strong>2025-08-26</strong>: Add <code class="language-plaintext highlighter-rouge">device:</code> blocks to MQTT sensors to tie entities under a single device.</li>
  </ul>

</details>

<div class="line-separator"></div>
<h2>Table of Contents</h2>
<div class="table-of-contents">
<ul id="markdown-toc">
  <li><a href="#the-beacon-of-trash-day" id="markdown-toc-the-beacon-of-trash-day">The Beacon of Trash Day</a></li>
  <li><a href="#whats-my-stack" id="markdown-toc-whats-my-stack">What‚Äôs My Stack?</a>    <ul>
      <li><a href="#hardware" id="markdown-toc-hardware">Hardware</a></li>
      <li><a href="#software" id="markdown-toc-software">Software</a></li>
    </ul>
  </li>
  <li><a href="#how-does-this-work" id="markdown-toc-how-does-this-work">How Does This Work?</a>    <ul>
      <li><a href="#how-do-i-know-where-the-bins-are" id="markdown-toc-how-do-i-know-where-the-bins-are">How do I know where the bins are?</a></li>
      <li><a href="#how-do-i-know-when-the-bins-are-picked-up" id="markdown-toc-how-do-i-know-when-the-bins-are-picked-up">How do I know when the bins are picked up?</a></li>
      <li><a href="#did-you-say-something-about-notifications" id="markdown-toc-did-you-say-something-about-notifications">Did you say something about notifications?</a></li>
    </ul>
  </li>
  <li><a href="#bluetooth-beacon-configuration" id="markdown-toc-bluetooth-beacon-configuration">Bluetooth Beacon Configuration</a>    <ul>
      <li><a href="#slot0-ibeacon" id="markdown-toc-slot0-ibeacon">Slot0 (iBeacon)</a></li>
      <li><a href="#slot1-eddystone-tlm" id="markdown-toc-slot1-eddystone-tlm">Slot1 (Eddystone TLM)</a></li>
      <li><a href="#bluetooth-beacon-scanner-gateway" id="markdown-toc-bluetooth-beacon-scanner-gateway">Bluetooth Beacon Scanner Gateway</a></li>
    </ul>
  </li>
  <li><a href="#home-assistant-configuration" id="markdown-toc-home-assistant-configuration">Home Assistant Configuration</a>    <ul>
      <li><a href="#calendar-sensor" id="markdown-toc-calendar-sensor">Calendar Sensor</a></li>
      <li><a href="#rssi-and-battery-sensors" id="markdown-toc-rssi-and-battery-sensors">RSSI and Battery Sensors</a></li>
      <li><a href="#data-filters" id="markdown-toc-data-filters">Data Filters</a></li>
      <li><a href="#vibration-sensors" id="markdown-toc-vibration-sensors">Vibration Sensors</a></li>
      <li><a href="#presence-sensors" id="markdown-toc-presence-sensors">Presence Sensors</a></li>
    </ul>
  </li>
  <li><a href="#automations" id="markdown-toc-automations">Automations</a>    <ul>
      <li><a href="#notification-recycling-or-trash-removal-tomorrow" id="markdown-toc-notification-recycling-or-trash-removal-tomorrow">[Notification] Recycling or Trash removal tomorrow</a></li>
      <li><a href="#state-helper-recycling-or-trash-picked-up" id="markdown-toc-state-helper-recycling-or-trash-picked-up">[State Helper] Recycling or Trash picked up</a></li>
      <li><a href="#notification-recycling-or-trash-picked-up" id="markdown-toc-notification-recycling-or-trash-picked-up">[Notification] Recycling or Trash picked up</a></li>
      <li><a href="#notification-health-check-for-bluetooth-beacons" id="markdown-toc-notification-health-check-for-bluetooth-beacons">[Notification] Health Check for Bluetooth Beacons</a>        <ul>
          <li><a href="#handling-unknown-states" id="markdown-toc-handling-unknown-states">Handling ‚ÄòUnknown‚Äô States</a></li>
          <li><a href="#handling-stuck-states" id="markdown-toc-handling-stuck-states">Handling ‚ÄòStuck‚Äô States</a></li>
          <li><a href="#handling-away-states" id="markdown-toc-handling-away-states">Handling ‚ÄòAway‚Äô States</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#lessons-learned-so-far" id="markdown-toc-lessons-learned-so-far">Lessons Learned (So Far)</a></li>
  <li><a href="#whats-next" id="markdown-toc-whats-next">What‚Äôs Next?</a></li>
</ul>

</div>
<div class="line-separator"></div>

<h2 id="the-beacon-of-trash-day">The Beacon of Trash Day</h2>

<p>The heart of this system is a set of Bluetooth beacons. These aren‚Äôt just any beacons though; they‚Äôre multi-talented. Let me introduce you to the <a href="https://bluecharmbeacons.com/product/bluetooth-ble-ibeacon-bc04p-multibeacon-water-resistant-with-motion-sensor/">Blue Charm BC04P MultiBeacon</a>.</p>

<ul>
  <li>Affordable: ~$20 each.</li>
  <li>IP67 Water-resistant: Perfect for withstanding the elements.</li>
  <li>Long Battery Life: ~4 years on a single CR2477 battery.</li>
  <li>Vibration Sensor: When triggered, these beacons can swap to broadcasting a different UUID.</li>
  <li>Different Bluetooth beacon formats: Like iBeacon or Eddystone TLM.</li>
  <li>Endless Configurability: Seriously, you can tweak almost everything about these beacons from signal format, broadcast strength, patterns, UUIDs, and more!</li>
</ul>

<p>I capture data from the beacons using Blue Charm‚Äôs <a href="https://bluecharmbeacons.com/product/bcg04-ble-gateway-beacon-scanner/">Beacon Scanner Gateway (BCG04)</a>. This device listens for the beacons and sends the data over wifi to my Home Assistant instance via MQTT. I could have rolled my own gateway, but I wanted to keep things simple and reliable. Time isn‚Äôt exactly a luxury for me right now.</p>

<blockquote>
  <p>I was motivated by the fact that I kept forgetting to bring my bins back inside after they were emptied. This whole project was heavily inspired by <a href="https://bluecharmbeacons.com/beacon-powered-reminder-to-take-out-the-trash/">Blue Charm‚Äôs blog post</a>. I‚Äôve made a bunch of tweaks and I‚Äôm stoked with how this turned out.</p>
</blockquote>

<h2 id="whats-my-stack">What‚Äôs My Stack?</h2>

<h3 id="hardware">Hardware</h3>

<ul>
  <li>Trash or recycling bin (hopefully provided by your waste removal provider)</li>
  <li><a href="https://bluecharmbeacons.com/product/bluetooth-ble-ibeacon-bc04p-multibeacon-water-resistant-with-motion-sensor/">Blue Charm BC04P Bluetooth beacon</a></li>
  <li><a href="https://bluecharmbeacons.com/product/bcg04-ble-gateway-beacon-scanner/">Blue Charm Beacon Scanner Gateway (BCG04)</a></li>
</ul>

<h3 id="software">Software</h3>

<ul>
  <li><a href="https://www.home-assistant.io/">Home Assistant</a> (I‚Äôm using <code class="language-plaintext highlighter-rouge">2024.6.2</code> at the time of writing)</li>
  <li>MQTT broker (I use the <a href="https://hub.docker.com/_/eclipse-mosquitto">eclipse-mosquitto docker official image</a>)</li>
  <li>KBeacon Pro app (by KKM Co., Ltd)</li>
</ul>

<h2 id="how-does-this-work">How Does This Work?</h2>

<p>Ready to revolutionize your waste management routine? Let‚Äôs dive into how I‚Äôve set up these beacons to work with Home Assistant.</p>

<p>The basic concept is simple.</p>

<ul>
  <li>Zip-tie Bluetooth beacons to my bins.</li>
  <li>Program and track the UUID of the Bluetooth beacons.</li>
  <li>Program the beacons to broadcast a <em>different</em> UUID when the vibration sensor is triggered.</li>
  <li>Use Home Assistant to track the signal strength and vibration events.</li>
  <li>Set up automations to send me notifications based on the data.</li>
</ul>

<p><img src="/assets/img/2024/06/bluetooth_beacon_on_bin.png" alt="Bluetooth beacon installed on a recycling bin handle" /><em>Blue Charm BC04P Bluetooth beacon strapped to the handle of my recycling bin</em></p>

<h3 id="how-do-i-know-where-the-bins-are">How do I know where the bins are?</h3>

<p><strong>Signal Strength</strong>. Each bin has a Bluetooth beacon strapped to it. When the beacon signal is strong, the bin is in the garage. When the signal is weak (or missing entirely), the bin is at the curb. Notice that giant chasm in the signal strength? The signal is always above or below that threshold. I can safely assume that if it‚Äôs below that threshold, the bin is outside.</p>

<p><img src="/assets/img/2024/06/filtered_beacon_signals.png" alt="Filtered beacon signal strength" /><em>Filtered beacon signal strength with a clear separation that is never crossed</em></p>

<h3 id="how-do-i-know-when-the-bins-are-picked-up">How do I know when the bins are picked up?</h3>

<p><strong>Vibration Detection</strong>. These beacons include a configurable vibration sensor. On trash or recycling day, the beacon‚Äôs vibration sensor will trigger when the bin is lifted by the truck. This trigger will cause the beacon to emit a different signal. By listening for the modified signal, I know when the bins have been emptied (or hit by a car üóëÔ∏èüí•üöó).</p>

<p><img src="/assets/img/2024/06/bluetooth_beacon_open.jpg" alt="Inside the Blue Charm Bluetooth beacon case" /><em>Inside the Blue Charm BC04P Bluetooth beacon case</em></p>

<h3 id="did-you-say-something-about-notifications">Did you say something about notifications?</h3>

<p>Since I‚Äôm tracking if the bins are inside or outside, I get a friendly reminder the night before pickup day if I haven‚Äôt taken the bins out yet. More on these automations later.</p>

<h2 id="bluetooth-beacon-configuration">Bluetooth Beacon Configuration</h2>

<p>Let‚Äôs start at the top and <em>lightly</em> work our way through the steps of configuring the beacons.</p>

<p>Each beacon has a few slots available to broadcast using different formats. I use 2 out of the 4 available slots. The first slot is for the bin‚Äôs presence and vibration detection (iBeacon), and the second slot is for the battery readings (Eddystone TLM). Ahead is the configuration overview for each beacon format.</p>

<p>But first, below is a grid of screenshots showing how I‚Äôve configured my <code class="language-plaintext highlighter-rouge">Recycling bin beacon</code> in the KBeacon Pro app. This includes broadcasting in each of the different formats, and the triggers used. Your situation may vary, but this should offer a good starting place. You‚Äôll need to tweak these settings, such as the vibration trigger strength, to fit your needs.</p>

<p><img src="/assets/img/2024/06/collage.jpg" alt="KBeacon Pro Settings" /><em>KBeacon Pro Settings. UUIDs have been redacted.</em></p>

<blockquote>
  <p>If you need a more detailed quick-start guide for these beacons, Blue Charms has a <a href="https://bluecharmbeacons.com/quick-start-guide-bc04p-ibeacon-ble-multibeacon/">great one here</a>.</p>
</blockquote>

<h3 id="slot0-ibeacon">Slot0 (iBeacon)</h3>

<p><code class="language-plaintext highlighter-rouge">Slot0</code> is the first configuration slot for the beacon. I‚Äôve configured this slot to broadcast an iBeacon formatted signal every 1 second. There‚Äôs nothing special about this signal. It broadcasts a pre-programmed UUID that I know to listen for. When I hear it, I record how strong or weak the signal is. The signal strength allows me to calculate if the bin is nearby, or far away.</p>

<p>Here‚Äôs the twist. The iBeacon configuration has a trigger option for <code class="language-plaintext highlighter-rouge">motion</code> (or <code class="language-plaintext highlighter-rouge">vibration</code>) as one of the options. While this sensor is triggered, the beacon will swap broadcasting its original UUID for a <em>different</em> pre-configured ‚Äútriggered UUID‚Äù. When I hear ‚Äútriggered UUID‚Äù, I know the beacon‚Äôs vibration sensor has been tripped.</p>

<p>Roughly 30 seconds after the vibration sensor is triggered, it will reset and the beacon will swap back to broadcasting its original UUID.</p>

<p>Everything about these is super configurable from the broadcast strength to the message types. The iBeacon normally broadcasts at 0+ dBm to save on battery life. But when the vibration sensor is triggered, it can temporarily increase the transmission level for the vibration event broadcast to 8+ dBm. This can help ensure that the beacon gateway receives important vibration events.</p>

<blockquote>
  <p>This can be useful when the beacon is placed at the end of a driveway, where it might be on the edge of the broadcast range. By increasing the broadcast strength for the vibration trigger, it increases the chances that the event will be heard. After the trigger resets, the beacon can return to broadcasting its standard event at 0+ dBm and continue to save on battery life.</p>

  <p>For what it‚Äôs worth, I never needed to increase the broadcast strength on my setup. But it‚Äôs good to know that I have options.</p>
</blockquote>

<h3 id="slot1-eddystone-tlm">Slot1 (Eddystone TLM)</h3>

<p><code class="language-plaintext highlighter-rouge">Slot1</code> of my beacon is used to broadcast the current battery voltage of the beacon‚Äôs battery. I‚Äôm able to do this by using the <a href="https://github.com/google/eddystone/blob/bb8738d7ddac0ddd3dfa70e594d011a0475e763d/eddystone-tlm/README.md">Eddystone TLM</a> broadcast format instead of iBeacon. This is because an Eddystone TLM encoded frame supports including a field for battery voltage in mV. The Blue Charm BC04P supports this feature.</p>

<blockquote>
  <p>To save on battery life, I configured the beacon to only broadcast the Eddystone TLM every 40 seconds; the slowest period I was able to set from the app.</p>
</blockquote>

<p>Knowledge of the battery voltage alone doesn‚Äôt provide enough information to estimate the remaining battery life. That‚Äôs because we don‚Äôt know where the voltage cutoff is before the beacon stops working. I <em>could</em> test it by using an external power supply, and slowly lowering the voltage until it cuts out. But I went the easier route. I asked support.</p>

<p>I reached out to <a href="https://www.linkedin.com/in/thomas-wetherell-3b10991/">Thomas</a> at Blue Charm Beacons (who makes the beacon) and asked if they could share information about the power requirements for the beacon. They generously returned my request with the exact power levels that they use to detect an empty battery in their app, 2500 mV. Thomas also let me know that they found the beacon usually continues to work until <em>roughly</em> 2400 mV, but we‚Äôre going to stick with the 2500 mV for our calculations.</p>

<p>I took this information and created a sensor in Home Assistant that provides a rough estimate of the beacon‚Äôs remaining battery percentage. I‚Äôll cover this later in the post.</p>

<h3 id="bluetooth-beacon-scanner-gateway">Bluetooth Beacon Scanner Gateway</h3>

<p>The setup of the Bluetooth beacon scanner gateway is pretty straightforward. You just need to:</p>

<ol>
  <li>Download the KGateway app (by KKM Co., Ltd).</li>
  <li>Connect the scanner gateway to your 2.4 GHz Wi-Fi network (5 GHz won‚Äôt work here).</li>
  <li>Enter the MQTT server details and the topic you want to publish to.</li>
  <li>(Optional but recommended) Reduce network traffic from the beacon scanner by adjusting the filter settings to ignore all beacon MACs except the ones you‚Äôre setting up.</li>
</ol>

<blockquote>
  <p>The <a href="https://bluecharmbeacons.com/quick-start-guide-bcg04-usb-powered-ble-mini-gateway/">Blue Charm BCG04 Beacon Gateway starter guide</a> is pretty good at walking you through any additional setup process, but I think it‚Äôs self-explanatory.</p>
</blockquote>

<h2 id="home-assistant-configuration">Home Assistant Configuration</h2>

<hr />

<h3 id="calendar-sensor">Calendar Sensor</h3>

<p>My waste pickup provider is lame because they don‚Äôt provide an API for their pickup dates. üëé Instead, they cram the schedule for all users and groups into a PDF calendar highlighting their holidays for the entire year.</p>

<p>I used to set up a Google Task/Reminder for each pickup day, but that was a pain to maintain. It seems like repeating tasks only show up on a rolling ~6-month window on my Google Calendar. This means I have to check back every few months to adjust the tasks around holidays as they appear on my calendar.</p>

<p>Instead, I created a separate Google Calendar that exclusively holds pickup dates for my trash and recycling. The benefit is that when my waste pickup provider releases their yearly calendar, I can update all pickup dates on my calendar <em>once</em>.</p>

<p><img src="/assets/img/2024/06/waste_pickup_calendar.png" alt="Calendar view in Home Assistant showing the trash and recycling pickup dates for June, 2024." /><em>Waste collection calendar in Home Assistant</em></p>

<p>I‚Äôve connected this calendar to Home Assistant using the <a href="https://www.home-assistant.io/integrations/google/">Google Calendar integration</a>. I created some sensors around the calendar events to track future/current pickup days. This way, I can easily build automations and notifications around these events.</p>

<ul>
  <li>Trash Tomorrow</li>
  <li>Recycling Tomorrow</li>
  <li>Trash Today</li>
  <li>Recycling Today</li>
</ul>

<p><img src="/assets/img/2024/06/pickup_quick_glance.png" alt="Quick glance showing upcoming waste collection for each pickup type." /><em>Waste collection quick-glance showing both bins will be picked up tomorrow, and both bins are still at the house.</em></p>

<p>The template sensors below check the <code class="language-plaintext highlighter-rouge">waste_collection</code> Google Calendar for events <code class="language-plaintext highlighter-rouge">today</code> and <code class="language-plaintext highlighter-rouge">tomorrow</code> that contain the words <code class="language-plaintext highlighter-rouge">Trash</code> or <code class="language-plaintext highlighter-rouge">Recycling</code>. If it finds a matching event, it sets the sensor to <code class="language-plaintext highlighter-rouge">on</code>. If it doesn‚Äôt find an event, the sensor stays <code class="language-plaintext highlighter-rouge">off</code>.</p>

<!-- If an HTML tag has an attribute markdown="block", then the content of the tag is parsed as block level elements. -->
<!-- https://kramdown.gettalong.org/syntax.html#html-blocks -->
<details>

  <summary>[YAML] Calendar event sensors</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">template</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">trigger</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time_pattern</span>
        <span class="c1"># Let's be honest, we don't need to check often. </span>
        <span class="c1"># But 5 minutes should be reactive enough if I need to correct an event date.</span>
        <span class="na">minutes</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/5"</span> 
    <span class="na">action</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">calendar.get_events</span>
        <span class="na">data</span><span class="pi">:</span>
          <span class="na">start_date_time</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">today_at()</span><span class="nv"> </span><span class="s">}}"</span>
          <span class="na">end_date_time</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">today_at('23:59:59')</span><span class="nv"> </span><span class="s">}}"</span>
        <span class="na">target</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span> <span class="s">calendar.waste_collection</span>
        <span class="na">response_variable</span><span class="pi">:</span> <span class="s">agenda_today</span>
      <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">calendar.get_events</span>
        <span class="na">data</span><span class="pi">:</span>
          <span class="na">start_date_time</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">today_at()</span><span class="nv"> </span><span class="s">+</span><span class="nv"> </span><span class="s">timedelta(days=1)</span><span class="nv"> </span><span class="s">}}"</span>
          <span class="na">end_date_time</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">today_at('23:59:59')</span><span class="nv"> </span><span class="s">+</span><span class="nv"> </span><span class="s">timedelta(days=1)</span><span class="nv"> </span><span class="s">}}"</span>
        <span class="na">target</span><span class="pi">:</span>
          <span class="na">entity_id</span><span class="pi">:</span> <span class="s">calendar.waste_collection</span>
        <span class="na">response_variable</span><span class="pi">:</span> <span class="s">agenda_tomorrow</span>
    <span class="na">binary_sensor</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Trash Today</span>
        <span class="na">unique_id</span><span class="pi">:</span> <span class="s">trash_today</span>
        <span class="na">state</span><span class="pi">:</span> <span class="pi">|-</span>
          <span class="s">{% set search_term = "Trash" %}</span>
          <span class="s">{{ agenda_today['calendar.waste_collection'].events</span>
          <span class="s">| selectattr('summary', 'search', search_term) | list | count &gt; 0 }}</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Recycling Today</span>
        <span class="na">unique_id</span><span class="pi">:</span> <span class="s">recycling_today</span>
        <span class="na">state</span><span class="pi">:</span> <span class="pi">|-</span>
          <span class="s">{% set search_term = "Recycling" %}</span>
          <span class="s">{{ agenda_today['calendar.waste_collection'].events</span>
          <span class="s">| selectattr('summary', 'search', search_term) | list | count &gt; 0 }}</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Trash Tomorrow</span>
        <span class="na">unique_id</span><span class="pi">:</span> <span class="s">trash_tomorrow</span>
        <span class="na">state</span><span class="pi">:</span> <span class="pi">|-</span>
          <span class="s">{% set search_term = "Trash" %}</span>
          <span class="s">{{ agenda_tomorrow['calendar.waste_collection'].events</span>
          <span class="s">| selectattr('summary', 'search', search_term) | list | count &gt; 0 }}</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Recycling Tomorrow</span>
        <span class="na">unique_id</span><span class="pi">:</span> <span class="s">recycling_tomorrow</span>
        <span class="na">state</span><span class="pi">:</span> <span class="pi">|-</span>
          <span class="s">{% set search_term = "Recycling" %}</span>
          <span class="s">{{ agenda_tomorrow['calendar.waste_collection'].events</span>
          <span class="s">| selectattr('summary', 'search', search_term) | list | count &gt; 0 }}</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="rssi-and-battery-sensors">RSSI and Battery Sensors</h3>

<p>Next, we have the RSSI and battery sensors. These sensors are used to track the signal strength of the Bluetooth beacons and the estimated remaining battery life.</p>

<ul>
  <li>Trash Bin RSSI</li>
  <li>Trash Bin Battery</li>
  <li>Recycling Bin RSSI</li>
  <li>Recycling Bin Battery</li>
</ul>

<p>The MQTT messages from the Blue Charm BCG04 gateway can be ingested by Home Assistant through MQTT sensors. I realllly wish that the gateway assigned to each beacon had a different MQTT topic, like the <a href="https://github.com/merbanan/rtl_433">rtl_433 project</a>. Instead, the beacon gateway groups all beacon data into a JSON array which is published to a single MQTT topic. It does this because the beacon gateway batches all events before publishing them at each ‚Äòsend interval‚Äô to reduce overhead. This requires the user to loop through and filter the incoming data to find the information that they want from it.</p>

<p>If the beacon gateway was sending events using different topics, it would have been <em>much</em> easier to persist the beacon state between reboots or identify when a beacon had last sent a signal. But I <em>understand</em> it‚Äôs a lot easier to manage a single MQTT topic for all beacons when the beacon gateway is batching the events together. Especially on lower-powered hardware.</p>

<p>I‚Äôve worked around these limitations in the sensors below.</p>

<details>

  <summary>[YAML] MQTT RSSI and battery sensors</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">mqtt</span><span class="pi">:</span>
  <span class="na">sensor</span><span class="pi">:</span>
  <span class="c1"># REPLACE: BEACON_GATEWAY_ID with the actual ID of your beacon gateway</span>
  <span class="c1"># REPLACE: TRASH_BEACON_UUID with the UUID of your trash bin beacon</span>
  <span class="c1"># REPLACE: RECYCLING_BEACON_UUID with the UUID of your recycling bin beacon</span>
  <span class="c1"># REPLACE: TRASH_BIN_DMAC with the DMAC of the trash bin Eddystone beacon</span>
  <span class="c1"># REPLACE: RECYCLING_BIN_DMAC with the DMAC of the recycling bin Eddystone beacon</span>
  <span class="c1">##</span>
  <span class="c1"># Trash Bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">RSSI"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">trash_bin_rssi"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">signal_strength</span>
    <span class="c1"># Assume the sensor is too far away after 300 seconds of no updates</span>
    <span class="na">expire_after</span><span class="pi">:</span> <span class="m">300</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">dBm"</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "TRASH_BEACON_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">{{ value_json.obj[i].rssi }}</span>
                  <span class="s">{% set targetUuidFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">trash_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">battery"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">trash_bin_battery"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">battery</span>
    <span class="na">state_class</span><span class="pi">:</span> <span class="s">measurement</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">%"</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="c1"># Sensor with CR2477 stops operating around is 2450 mV</span>
    <span class="c1"># Battery starts at 3.3V. Anything over 3.0V is considered 100%.</span>
    <span class="c1"># Assumes discharge curve is linear</span>
    <span class="c1"># Type 8 message is (Eddystone) TLM, which contains the battery information as mV</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetDmacFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].dmac == "TRASH_BIN_DMAC" and value_json.obj[i].type == 8 and targetDmacFound.found == False %}</span>
                  <span class="s">{% set stock_voltage = 3000 %}</span>
                  <span class="s">{% set voltage_range = 550 %}</span>
                  <span class="s">{% set current_voltage = value_json.obj[i].vbatt %}</span>
                  <span class="s">{% set remaining_life = 0 %}</span>

                  <span class="s">{% if current_voltage &gt;= stock_voltage %}</span>
                    <span class="s">{% set remaining_life = 100 %}</span>
                  <span class="s">{% elif current_voltage &gt; (stock_voltage - voltage_range) %}</span>
                    <span class="s">{% set remaining_life = int((current_voltage - (stock_voltage - voltage_range)) / voltage_range * 100) %}</span>
                  <span class="s">{% else %}</span>
                    <span class="s">{% set remaining_life = 0 %}</span>
                  <span class="s">{% endif %}</span>
                  <span class="s">{{ remaining_life | int }}</span>
                  <span class="s">{% set targetDmacFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetDmacFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">trash_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>
  <span class="c1">##</span>
  <span class="c1"># Recycling Bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">RSSI"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">recycling_bin_rssi"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">signal_strength</span>
    <span class="c1"># Assume the sensor is too far away after 300 seconds of no updates</span>
    <span class="na">expire_after</span><span class="pi">:</span> <span class="m">300</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">dBm"</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "RECYCLING_BEACON_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">{{ value_json.obj[i].rssi }}</span>
                  <span class="s">{% set targetUuidFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">recycling_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">battery"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">recycling_bin_battery"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">battery</span>
    <span class="na">state_class</span><span class="pi">:</span> <span class="s">measurement</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">%"</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="c1"># Sensor with CR2477 stops operating around is 2450 mV</span>
    <span class="c1"># Battery starts at 3.3V. Anything over 3.0V is considered 100%.</span>
    <span class="c1"># Assumes discharge curve is linear</span>
    <span class="c1"># Type 8 message is (Eddystone) TLM, which contains the battery information as mV</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetDmacFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].dmac == "RECYCLING_BIN_DMAC" and value_json.obj[i].type == 8 and targetDmacFound.found == False %}</span>
                  <span class="s">{% set stock_voltage = 3000 %}</span>
                  <span class="s">{% set voltage_range = 550 %}</span>
                  <span class="s">{% set current_voltage = value_json.obj[i].vbatt %}</span>
                  <span class="s">{% set remaining_life = 0 %}</span>

                  <span class="s">{% if current_voltage &gt;= stock_voltage %}</span>
                    <span class="s">{% set remaining_life = 100 %}</span>
                  <span class="s">{% elif current_voltage &gt; (stock_voltage - voltage_range) %}</span>
                    <span class="s">{% set remaining_life = int((current_voltage - (stock_voltage - voltage_range)) / voltage_range * 100) %}</span>
                  <span class="s">{% else %}</span>
                    <span class="s">{% set remaining_life = 0 %}</span>
                  <span class="s">{% endif %}</span>
                  <span class="s">{{ remaining_life | int }}</span>
                  <span class="s">{% set targetDmacFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetDmacFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">recycling_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="data-filters">Data Filters</h3>

<p>The primary use of the <a href="https://www.home-assistant.io/integrations/filter/">filter integration</a> is to smooth out the RSSI data from the Bluetooth beacons.</p>

<p>If you check out the graph below, you‚Äôll notice that the RSSI is more like a drunken hummingbird than a steady signal. But if you apply a smoothing filter, the RSSI values are pretty flat.</p>

<p>If I were to rely <em>only</em> on the raw RSSI signals, my presence detections would be flipping back and forth multiple times per minute. The filtered values help reduce these false positives.</p>

<p>The filters I use are:</p>

<ul>
  <li>Filtered trash bin RSSI</li>
  <li>Filtered recycling bin RSSI</li>
</ul>

<p><img src="/assets/img/2024/06/trash_rssi_vs_filtered.png" alt="5-minute graph showing the raw RSSI values vs the filtered view" /><em>Trash Bin RSSI vs a smoother filtered RSSI view</em></p>

<details>

  <summary>[YAML] Filtered RSSI sensors</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">filter</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Filtered</span><span class="nv"> </span><span class="s">trash</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">RSSI"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s">filtered_trash_bin_rssi</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.trash_bin_rssi</span>
    <span class="na">filters</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">outlier</span>
        <span class="na">window_size</span><span class="pi">:</span> <span class="m">5</span>
        <span class="na">radius</span><span class="pi">:</span> <span class="m">5.0</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">lowpass</span>
        <span class="na">time_constant</span><span class="pi">:</span> <span class="m">10</span>
        <span class="na">precision</span><span class="pi">:</span> <span class="m">2</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">time_simple_moving_average</span>
        <span class="na">window_size</span><span class="pi">:</span> <span class="s2">"</span><span class="s">00:01"</span>
        <span class="na">precision</span><span class="pi">:</span> <span class="m">2</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">filter</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Filtered</span><span class="nv"> </span><span class="s">recycling</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">RSSI"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s">filtered_recycling_bin_rssi</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.recycling_bin_rssi</span>
    <span class="na">filters</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">outlier</span>
        <span class="na">window_size</span><span class="pi">:</span> <span class="m">5</span>
        <span class="na">radius</span><span class="pi">:</span> <span class="m">5.0</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">lowpass</span>
        <span class="na">time_constant</span><span class="pi">:</span> <span class="m">10</span>
        <span class="na">precision</span><span class="pi">:</span> <span class="m">2</span>
      <span class="pi">-</span> <span class="na">filter</span><span class="pi">:</span> <span class="s">time_simple_moving_average</span>
        <span class="na">window_size</span><span class="pi">:</span> <span class="s2">"</span><span class="s">00:01"</span>
        <span class="na">precision</span><span class="pi">:</span> <span class="m">2</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="vibration-sensors">Vibration Sensors</h3>

<p>Next, we have our vibration sensors. This is what we use to detect when the bins have been picked up/emptied.</p>

<ul>
  <li>Trash Bin Vibration</li>
  <li>Recycling Bin Vibration</li>
</ul>

<p><img src="/assets/img/2024/06/waste_vibration.png" alt="Home Assistant history graph showing the vibration sensor state for the trash and recycling bin Bluetooth beacons" /><em>Vibration sensor states for the trash and recycling bins around morning pickup.</em></p>

<p>Below are these sensors, created from the MQTT data that the Blue Charm BCG04 beacon gateway sends over.</p>

<details>

  <summary>[YAML] MQTT vibration binary sensors</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">mqtt</span><span class="pi">:</span>
  <span class="na">binary_sensor</span><span class="pi">:</span>
  <span class="c1"># REPLACE: BEACON_GATEWAY_ID with the actual ID of your beacon gateway</span>
  <span class="c1"># REPLACE: TRASH_BIN_VIBRATION_UUID with the UUID of your trash bin vibration UUID</span>
  <span class="c1"># REPLACE: RECYCLING_BIN_VIBRATION_UUID with the UUID of your recycling bin vibration UUID</span>
  <span class="c1">##</span>
  <span class="c1"># Trash bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">vibration"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">trash_bin_vibration"</span>
    <span class="c1"># off_delay of 30s so we don't get spammed with the vibration state changing</span>
    <span class="na">off_delay</span><span class="pi">:</span> <span class="m">30</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">vibration</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "TRASH_BIN_VIBRATION_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">ON</span>
                  <span class="s">{% set targetUuidFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">trash_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>
  <span class="c1">##</span>
  <span class="c1"># Recycling Bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">vibration"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">recycling_bin_vibration"</span>
    <span class="c1"># off_delay of 30s so we don't get spammed with the vibration state changing</span>
    <span class="na">off_delay</span><span class="pi">:</span> <span class="m">30</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">vibration</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "RECYCLING_BIN_VIBRATION_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">ON</span>
                  <span class="s">{% set targetUuidFound.found = True %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">recycling_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="presence-sensors">Presence Sensors</h3>

<p>Before I dive into the presence sensors, let‚Äôs cover some new <a href="https://www.home-assistant.io/integrations/input_number/"><code class="language-plaintext highlighter-rouge">Input number</code></a> helper sensors that I created in the UI.</p>

<details>
<summary>input_number threshold sensor UI</summary>

<p><img src="/assets/img/2024/06/rssi_threshold_ui.png" alt="Home Assistant UI showing the creation of an input_number threshold sensor" /><em>Home Assistant UI showing the creation of an <code class="language-plaintext highlighter-rouge">input_number</code> threshold sensor.</em></p>


</details>

<ul>
  <li>Trash bin RSSI threshold (Number): <code class="language-plaintext highlighter-rouge">input_number.trash_bin_rssi_threshold</code></li>
  <li>Recycling bin RSSI threshold (Number): <code class="language-plaintext highlighter-rouge">input_number.recycling_bin_rssi_threshold</code></li>
</ul>

<p>These <code class="language-plaintext highlighter-rouge">input_number</code> sensors set the RSSI thresholds that we use to determine if the bins are <code class="language-plaintext highlighter-rouge">home</code> or <code class="language-plaintext highlighter-rouge">away</code>. These are not strictly required but make configuration a lot easier.</p>

<p><img src="/assets/img/2024/06/threshold_sensors.png" alt="Home Assistant card showing the input_number threshold sensors" /><em>Home Assistant card showing the input_number threshold sensors.</em></p>

<blockquote>
  <p>In the binary presence sensors below, we‚Äôll use our newly created threshold sensor to set and adjust the <code class="language-plaintext highlighter-rouge">home</code>/<code class="language-plaintext highlighter-rouge">away</code> threshold for the filtered RSSI value. Any future adjustments can be made in the Home Assistant UI dashboard <em>without</em> needing to edit a YAML file.</p>
</blockquote>

<p>Let‚Äôs continue onto the presence sensors. These sensors use the <em>filtered</em> RSSI sensors that we created earlier to determine if the bins are still at the house or down by the curb.</p>

<ul>
  <li>Trash Bin Present</li>
  <li>Recycling Bin Present</li>
</ul>

<p><img src="/assets/img/2024/06/waste_presence.png" alt="Home Assistant history graph showing the presence state for the trash and recycling bin Bluetooth beacons" /><em>Presence states for the trash and recycling bins as I roll them down to the curb. If the bins are ‚ÄúHome‚Äù, they‚Äôre up at the house. If the bins are ‚ÄúAway‚Äù, they‚Äôre at the curb.</em></p>

<p>Here are the unconventional things I‚Äôm doing with the presence sensors.</p>

<ul>
  <li>The presence sensor will not update if the beacon is too far away from our gateway. This is why I have a 5-minute expiry time on the presence sensors. If we haven‚Äôt heard a signal from the beacon in 5 minutes, the sensor value expires and defaults to <code class="language-plaintext highlighter-rouge">away</code>. This is a good way to handle the case where the beacon moves out of range before we consider the signal ‚Äúweak‚Äù.</li>
  <li>The sensor is getting updated inefficiently. I use the MQTT payload as the <em>trigger</em> to update the presence sensor state. It‚Äôs easier to read and understand when things are located near each other in the code. The more efficient route would be to set up <em>another</em> template sensor elsewhere that is triggered by updates to the filtered RSSI values.</li>
  <li>If we reboot, the presence sensor will temporarily be <code class="language-plaintext highlighter-rouge">unknown</code>. This is because our presence sensor is comparing the ‚ÄúRSSI threshold‚Äù against the ‚Äú<em>filtered</em> RSSI value‚Äù. On a fresh boot, our ‚Äúfiltered RSSI value‚Äù won‚Äôt have any data yet. So we need to wait until we receive a few messages from the Bluetooth beacon before it starts generating values.</li>
</ul>

<details>

  <summary>[YAML] MQTT presence binary sensors</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">mqtt</span><span class="pi">:</span>
  <span class="na">binary_sensor</span><span class="pi">:</span>
  <span class="c1"># REPLACE: BEACON_GATEWAY_ID with the actual ID of your beacon gateway</span>
  <span class="c1"># REPLACE: TRASH_BEACON_UUID with the UUID of your trash bin beacon</span>
  <span class="c1"># REPLACE: RECYCLING_BEACON_UUID with the UUID of your recycling bin beacon</span>
  <span class="c1">##</span>
  <span class="c1"># Trash bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">present"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">trash_bin_present"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">presence</span>
    <span class="c1"># Assume the sensor is too far away after 300 seconds of no updates</span>
    <span class="na">off_delay</span><span class="pi">:</span> <span class="m">300</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="c1"># Since this is using a filter that gets generated _after_ the RSSI sensor populates it, the</span>
    <span class="c1"># very first message (and possibly 2nd message) would not have populated the filter yet.</span>
    <span class="c1"># This is probably ok since the sensor should be updating ~every second and should resolve</span>
    <span class="c1"># itself in only a few seconds.</span>
    <span class="c1"># We also set this to expire after 300 seconds as the only other trigger is if we see message</span>
    <span class="c1"># that matches the UUID for this sensor.</span>
    <span class="c1"># We check if it's a number before we set the away status to fix a bug where the filtered RSSI is unknown on boot</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "TRASH_BEACON_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">{% if states('sensor.filtered_trash_bin_rssi') | is_number and states('input_number.trash_bin_rssi_threshold') | is_number %}</span>
                      <span class="s">{{ 'ON' if states('sensor.filtered_trash_bin_rssi') | float &gt; states('input_number.trash_bin_rssi_threshold') | float else 'OFF' }}</span>
                      <span class="s">{% set targetUuidFound.found = True %}</span>
                  <span class="s">{%- endif %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">trash_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Trash</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>
  <span class="c1">##</span>
  <span class="c1"># Recycling Bin</span>
  <span class="c1">##</span>
  <span class="pi">-</span> <span class="na">state_topic</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bluecharm/publish/BEACON_GATEWAY_ID"</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">bin</span><span class="nv"> </span><span class="s">present"</span>
    <span class="na">unique_id</span><span class="pi">:</span> <span class="s2">"</span><span class="s">recycling_bin_present"</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">presence</span>
    <span class="c1"># Assume the sensor is too far away after 300 seconds of no updates</span>
    <span class="na">off_delay</span><span class="pi">:</span> <span class="m">300</span>
    <span class="c1"># Home Assistant ignores an empty value ('') and will not update the state of the entity.</span>
    <span class="c1"># Since this is using a filter that gets generated _after_ the RSSI sensor populates it, the</span>
    <span class="c1"># very first message (and possibly 2nd message) would not have populated the filter yet.</span>
    <span class="c1"># This is probably ok since the sensor should be updating ~every second and should resolve</span>
    <span class="c1"># itself in only a few seconds.</span>
    <span class="c1"># We also set this to expire after 300 seconds as the only other trigger is if we see message</span>
    <span class="c1"># that matches the UUID for this sensor.</span>
    <span class="c1"># We check if it's a number before we set the away status to fix a bug where the filtered RSSI is unknown on boot</span>
    <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
          <span class="s">{% for i in range(value_json.obj|count) -%}</span>
              <span class="s">{% if value_json.obj[i].uuid == "RECYCLING_BEACON_UUID" and targetUuidFound.found == False %}</span>
                  <span class="s">{% if states('sensor.filtered_recycling_bin_rssi') | is_number and states('input_number.recycling_bin_rssi_threshold') | is_number %}</span>
                      <span class="s">{{ 'ON' if states('sensor.filtered_recycling_bin_rssi') | float &gt; states('input_number.recycling_bin_rssi_threshold') | float else 'OFF' }}</span>
                      <span class="s">{% set targetUuidFound.found = True %}</span>
                  <span class="s">{%- endif %}</span>
              <span class="s">{%- endif %}</span>
          <span class="s">{%- endfor %}</span>
      <span class="s">{% set targetUuidFound = namespace(found=False) %}</span>
    <span class="na">device</span><span class="pi">:</span>
      <span class="na">identifiers</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">recycling_bin"</span><span class="pi">]</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Recycling</span><span class="nv"> </span><span class="s">Bin"</span>
      <span class="na">manufacturer</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Blue</span><span class="nv"> </span><span class="s">Charm"</span>
      <span class="na">model</span><span class="pi">:</span> <span class="s2">"</span><span class="s">BCG04"</span>
      <span class="na">suggested_area</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Garage"</span>

</code></pre></div>  </div>
</details>

<hr />

<h2 id="automations">Automations</h2>

<p>High-level: I have 3 automations here.</p>

<ol>
  <li>Send a notification to the family to take out the bins on the night before trash or recycling pickup.</li>
  <li>Set or reset the ‚Äúpicked up‚Äù helper entities.</li>
  <li>Send a notification to the family if the trash or recycling has been picked up.</li>
</ol>

<p>I created the following helper entities in the UI to make managing the automations easier:</p>

<ul>
  <li>Trash picked up (Toggle): <code class="language-plaintext highlighter-rouge">input_boolean.trash_picked_up</code></li>
  <li>Recycling picked up (Toggle): <code class="language-plaintext highlighter-rouge">input_boolean.recycling_picked_up</code></li>
</ul>

<p>The input booleans (type: toggle) are used to track if the trash or recycling has been picked up. By breaking the events into these toggle switches, I can easily track what happens. This helps avoid cramming <em>everything</em> in an already busy automation.</p>

<blockquote>
  <p>Pro tip: If you want to automate low-battery alerts for the beacons, consider using one of the community-created <a href="https://community.home-assistant.io/t/low-battery-notifications-actions/653754">blueprints for battery sensors</a>.</p>
</blockquote>

<p>Let‚Äôs dive into the first automation.</p>

<hr />

<h3 id="notification-recycling-or-trash-removal-tomorrow">[Notification] Recycling or Trash removal tomorrow</h3>

<p>This automation sends a notification the night before a scheduled pickup for either recycling or trash.</p>

<ul>
  <li>It reminds the family if the bins are still at the house</li>
  <li>It sends a confirmation if the bins are already at the curb (just in case the beacons somehow are stuck in <code class="language-plaintext highlighter-rouge">away</code> mode)</li>
  <li>It leverages an unnecessarily complicated flow to send a <em>different</em> message if <em>both</em> bins are scheduled for pickup tomorrow. Why send two notifications when you can send one? ü§î</li>
  <li>My automations don‚Äôt listen for <code class="language-plaintext highlighter-rouge">home</code> and <code class="language-plaintext highlighter-rouge">away</code>. Instead, they check for <code class="language-plaintext highlighter-rouge">home</code> and <code class="language-plaintext highlighter-rouge">not home</code> because <code class="language-plaintext highlighter-rouge">not home</code> can include <code class="language-plaintext highlighter-rouge">away</code>, <code class="language-plaintext highlighter-rouge">unknown</code>, or <code class="language-plaintext highlighter-rouge">unavailable</code>. As we mentioned earlier, the presence state may be <code class="language-plaintext highlighter-rouge">unknown</code> when the server restarts. The automation is meant to fail gracefully if the sensor is in a bad state.</li>
</ul>

<p><img src="/assets/img/2024/06/pickup_tomorrow_notification.jpg" alt="Recycling and trash pickup tomorrow notification" /><em>Recycling and trash bin pickup tomorrow notification</em></p>

<details>

  <summary>[Automation] Recycling or Trash removal tomorrow notification</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Recycling or Trash removal tomorrow notification</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Sends</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">notification</span><span class="nv"> </span><span class="s">if</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">recycling</span><span class="nv"> </span><span class="s">or</span><span class="nv"> </span><span class="s">trash</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">scheduled</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">be</span><span class="nv"> </span><span class="s">picked</span><span class="nv"> </span><span class="s">up</span><span class="nv"> </span><span class="s">tomorrow.</span><span class="nv"> </span><span class="s">But</span><span class="nv"> </span><span class="s">only</span><span class="nv"> </span><span class="s">if</span><span class="nv"> </span><span class="s">I</span><span class="nv"> </span><span class="s">haven't</span><span class="nv"> </span><span class="s">already</span><span class="nv"> </span><span class="s">taken</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">bins</span><span class="nv"> </span><span class="s">out.</span>
<span class="s">"</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">16:30:00"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">trash</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">16:30:00"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">recycling</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
                <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if trash is Home, Unavailable, or Unknown</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if bin is at home</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">üóëÔ∏è Trash!</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">The trash has not been taken out yet. Pickup is tomorrow.</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:dump-truck</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">recycling</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
                <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if trash is Home, Unavailable, or Unknown</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
                <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if recycling is Home, Unavailable, or Unknown</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if bins are at home</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">‚ôªÔ∏è Recycling &amp; Trash!</span>
              <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                <span class="s">The recycling or trash have not been taken out yet. Pickup</span>
                <span class="s">is tomorrow.</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:recycle</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
          <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if bin is not at home</span>
            <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if trash is not at Home</span>
                <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">üóëÔ∏è Trash!</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">The trash was already taken down. Was that you?</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:dump-truck</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
        <span class="na">alias</span><span class="pi">:</span> <span class="s">Trash tomorrow (bin not home)</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">recycling</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_tomorrow</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if bin not at home</span>
            <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if trash is not Home</span>
                <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
              <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if recycling is not Home</span>
                <span class="na">condition</span><span class="pi">:</span> <span class="s">not</span>
                <span class="na">conditions</span><span class="pi">:</span>
                  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_bin_present</span>
                    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">‚ôªÔ∏è Recycling &amp; Trash?</span>
              <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
                <span class="s">The recycling or trash were already taken down. Was that</span>
                <span class="s">you?</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:recycle</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
        <span class="na">alias</span><span class="pi">:</span> <span class="s">Trash/Recycling tomorrow (bin not home)</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">parallel</span>
<span class="na">max</span><span class="pi">:</span> <span class="m">2</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="state-helper-recycling-or-trash-picked-up">[State Helper] Recycling or Trash picked up</h3>

<p>This automation controls the helper entities that indicate whether recycling or trash has been picked up. It helps simplify our automations and gives us a good idea what the current state of the bins are from the dashboard.</p>

<ul>
  <li>When the <code class="language-plaintext highlighter-rouge">input_boolean.*_picked_up</code> helper is <code class="language-plaintext highlighter-rouge">on</code>, it means the bin has been picked up.</li>
  <li>When the <code class="language-plaintext highlighter-rouge">input_boolean.*_picked_up</code> helper is <code class="language-plaintext highlighter-rouge">off</code>, it means the bin has been returned to the house.</li>
</ul>

<blockquote>
  <p>There is a possibility that the notification could go off by mistake if the vibration sensor is triggered by something else <em>before</em> the pickup. But I haven‚Äôt had a car hit my bins yet‚Ä¶ ü§û</p>
</blockquote>

<p>This automation starts when either the vibration sensor is triggered (waste picked up) or the presence sensor switches to <code class="language-plaintext highlighter-rouge">home</code> (bin returned home).</p>

<p>The helper entities are only turned <code class="language-plaintext highlighter-rouge">on</code> if the following conditions are met:</p>

<ol>
  <li>The vibration sensor is triggered (waste picked up)</li>
  <li>The bin is currently <code class="language-plaintext highlighter-rouge">away</code> (by the curb)</li>
  <li>The bin is scheduled for pickup that day</li>
</ol>

<p>The helper entities are only turned <code class="language-plaintext highlighter-rouge">off</code> if the following conditions are met:</p>

<ol>
  <li>The bin returns to the house for at least 1 minute (to prevent false positives)</li>
  <li>The bin is scheduled for pickup that day</li>
</ol>

<blockquote>
  <p>I guess if I forget to bring the bins back up on pickup day, it won‚Äôt reset the helper. But I‚Äôm usually pretty good at being a responsible adult and retrieving them on the same day. I could always remove that <code class="language-plaintext highlighter-rouge">return</code> condition if this becomes a problem.</p>
</blockquote>

<details>

  <summary>[Automation] Recycling or Trash picked up - state helper</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Recycling or Trash picked up helper</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Update the helpers that indicate whether recycling or trash has been picked</span>
  <span class="s">up, but not brought back up</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.trash_bin_vibration</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">trash-picked-up</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.trash_bin_present</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">trash-brought-in</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">0</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.recycling_bin_vibration</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">recycling-picked-up</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.recycling_bin_present</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">recycling-brought-in</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">0</span>
<span class="na">condition</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash-picked-up</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_today</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_on</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.trash_picked_up</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash-brought-in</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_today</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.trash_picked_up</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">recycling-picked-up</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_today</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_bin_present</span>
            <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_on</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.recycling_picked_up</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">recycling-brought-in</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_today</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
            <span class="na">metadata</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.recycling_picked_up</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">parallel</span>
<span class="na">max</span><span class="pi">:</span> <span class="m">2</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="notification-recycling-or-trash-picked-up">[Notification] Recycling or Trash picked up</h3>

<p>This automation sends a notification to the family when the recycling or trash bins have been picked up. If either bin has not been returned by 5 PM, another reminder is sent to the family.</p>

<blockquote>
  <p>My automation includes a camera snapshot in the notification. This allows me to quickly verify that the bin was picked up by the truck, and not just bumped by a car. Feel free to remove that from the automation below since it‚Äôs super specific to my setup.</p>
</blockquote>

<p><img src="/assets/img/2024/06/pickup_notification.jpg" alt="Recycling and trash bin pickup notification" /><em>Recycling and trash bin pickup notification</em></p>

<p>This automation starts from either of the following conditions:</p>

<ul>
  <li>Either of the <code class="language-plaintext highlighter-rouge">input_boolean.*_picked_up</code> helpers are turned <code class="language-plaintext highlighter-rouge">on</code></li>
  <li>The time is 5 PM (and the bins haven‚Äôt been brought back up)</li>
</ul>

<p>I did a silly complex thing in my automation where I gate my pickup notifications. If it‚Äôs a trash-only day, I send the notification as soon as the trash is picked up.</p>

<p>However, if it‚Äôs a trash <em>and</em> recycling day, then I wait for <em>both</em> bins to be picked up before sending a notification‚Ä¶ also, I change the notification text depending on if it‚Äôs trash-only, or trash <em>and</em> recycling. ‚ú®</p>

<details>

  <summary>[Automation] Recycling or Trash picked up notification</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Recycling or Trash picked up notification</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;-</span>
  <span class="s">Change helper boolean and send notification when one (or waiting for both)</span>
  <span class="s">trash and recycling have been picked up</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">input_boolean.trash_picked_up</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">trash</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">input_boolean.recycling_picked_up</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">recycling</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">17:00:00"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">bin-reminder</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_today</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Only send this alert if it's not a recycling day</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">camera.snapshot</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="c1"># I place my camera snapshot here because I have another notification channel elsewhere </span>
              <span class="c1">#  that shows the image on my TV using "Notifications for Android TV"</span>
              <span class="c1">#  https://www.home-assistant.io/integrations/nfandroidtv/</span>
              <span class="c1"># I gate (and duplicate) this snapshot sequence a few more times that way I take a snapshot </span>
              <span class="c1">#  only when I'm about to send one. </span>
              <span class="c1"># That's because I like to see the last pickup image on my dashboard.</span>
              <span class="na">filename</span><span class="pi">:</span> <span class="s">/config/www/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span>
                <span class="c1"># I use a proxy camera to create a cropped view of the driveway for a zoomed-in picture</span>
                <span class="c1">#  https://www.home-assistant.io/integrations/proxy/</span>
                <span class="pi">-</span> <span class="s">camera.driveway_proxy</span>
          <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span>
              <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">seconds</span><span class="pi">:</span> <span class="m">1</span>
              <span class="na">milliseconds</span><span class="pi">:</span> <span class="m">0</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">üóëÔ∏è Trash picked up</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">The trash bin has been picked up.</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:dump-truck</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">image</span><span class="pi">:</span> <span class="s">/local/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">trash</span>
              <span class="pi">-</span> <span class="s">recycling</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.recycling_picked_up</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_bin_present</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Recycling has been picked up, or taken inside</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.trash_picked_up</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
            <span class="na">alias</span><span class="pi">:</span> <span class="s">Trash has been picked up, or taken inside</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">camera.snapshot</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">filename</span><span class="pi">:</span> <span class="s">/config/www/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">camera.driveway_proxy</span>
          <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span>
              <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">seconds</span><span class="pi">:</span> <span class="m">1</span>
              <span class="na">milliseconds</span><span class="pi">:</span> <span class="m">0</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">‚ôªÔ∏èüóëÔ∏è Recycling &amp; trash picked up</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">The recycling &amp; trash bins have been picked up.</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:dump-truck</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">image</span><span class="pi">:</span> <span class="s">/local/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="s">bin-reminder</span>
          <span class="pi">-</span> <span class="na">alias</span><span class="pi">:</span> <span class="s">Recycling or trash hasn't been picked up</span>
            <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
            <span class="na">conditions</span><span class="pi">:</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.recycling_picked_up</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
              <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
                <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.trash_picked_up</span>
                <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">camera.snapshot</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">filename</span><span class="pi">:</span> <span class="s">/config/www/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span>
                <span class="pi">-</span> <span class="s">camera.driveway_proxy</span>
          <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span>
              <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">seconds</span><span class="pi">:</span> <span class="m">1</span>
              <span class="na">milliseconds</span><span class="pi">:</span> <span class="m">0</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
            <span class="na">data</span><span class="pi">:</span>
              <span class="na">title</span><span class="pi">:</span> <span class="s">‚ôªÔ∏èüóëÔ∏è Recycling or trash picked up</span>
              <span class="na">message</span><span class="pi">:</span> <span class="s">The recycling or trash bins still haven't been picked up.</span>
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
                <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
              <span class="na">data</span><span class="pi">:</span>
                <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:dump-truck</span>
                <span class="na">group</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">channel</span><span class="pi">:</span> <span class="s">waste-removal-alert</span>
                <span class="na">image</span><span class="pi">:</span> <span class="s">/local/tmp/snapshot_camera_proxy_driveway_wide.jpg</span>
                <span class="na">push</span><span class="pi">:</span>
                  <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>

</code></pre></div>  </div>
</details>

<hr />

<h3 id="notification-health-check-for-bluetooth-beacons">[Notification] Health Check for Bluetooth Beacons</h3>

<p>I‚Äôm a bit of a control freak when it comes to my Bluetooth beacons. Let‚Äôs just say I have a bat signal set up if one of those little guys starts misbehaving. It‚Äôs stupidly simple.</p>

<p>Any night before a pickup at 7 PM, I get a notification if:</p>

<ul>
  <li>The presence sensor for any Bluetooth beacon is <code class="language-plaintext highlighter-rouge">unknown</code>
    <ul>
      <li>Like if it didn‚Äôt recover after my server rebooted</li>
    </ul>
  </li>
  <li>The RSSI sensor for any beacon hasn‚Äôt been updated in the last 15 minutes
    <ul>
      <li>This only works if the beacon is still in range while down at the curb</li>
    </ul>
  </li>
</ul>

<p><img src="/assets/img/2024/06/beacon_healthcheck_notification.png" alt="Bluetooth beacon health check notification" /><em>Bluetooth beacon health check notification</em></p>

<p>Since I‚Äôm not expecting to see these scenarios happen too often, I didn‚Äôt template out the notification text. Instead, it‚Äôs a generic one.</p>

<details>

  <summary>[Automation] Health check notification for Bluetooth beacons</summary>

  <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="na">alias</span><span class="pi">:</span> <span class="s">Health check for Bluetooth beacons</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Send</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">notification</span><span class="nv"> </span><span class="s">if</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">presence</span><span class="nv"> </span><span class="s">sensor</span><span class="nv"> </span><span class="s">for</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">Bluetooth</span><span class="nv"> </span><span class="s">beacons</span><span class="nv"> </span><span class="s">have</span><span class="nv"> </span><span class="s">been</span><span class="nv"> </span><span class="s">unknown</span><span class="nv"> </span><span class="s">for</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">while."</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">19:00:00"</span>
<span class="na">condition</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
    <span class="na">conditions</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
        <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_tomorrow</span>
        <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
        <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_tomorrow</span>
        <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">or</span>
    <span class="na">conditions</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
        <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.trash_bin_present</span>
        <span class="na">state</span><span class="pi">:</span> <span class="s">unknown</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
        <span class="na">entity_id</span><span class="pi">:</span> <span class="s">binary_sensor.recycling_bin_present</span>
        <span class="na">state</span><span class="pi">:</span> <span class="s">unknown</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
        <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if Trash Bin RSSI is older than 15 minutes</span>
        <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
          <span class="s">{{ (as_timestamp(now()) -</span>
          <span class="s">as_timestamp(states.sensor.trash_bin_rssi.last_updated)) &gt; 900 }}</span>
      <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">template</span>
        <span class="na">alias</span><span class="pi">:</span> <span class="s">Test if Recycling Bin RSSI is older than 15 minutes</span>
        <span class="na">value_template</span><span class="pi">:</span> <span class="pi">&gt;-</span>
          <span class="s">{{ (as_timestamp(now()) -</span>
          <span class="s">as_timestamp(states.sensor.recycling_bin_rssi.last_updated)) &gt; 900 }}</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s">üì° Bluetooth beacon state unknown</span>
      <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">One of the Bluetooth beacon's presence sensor has been unknown for a while.</span>
        <span class="s">Please investigate.</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>  
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:radio-tower</span>
        <span class="na">group</span><span class="pi">:</span> <span class="s">bluetooth-beacon-alert</span>
        <span class="na">channel</span><span class="pi">:</span> <span class="s">bluetooth-beacon-alert</span>
        <span class="na">push</span><span class="pi">:</span>
          <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>

</code></pre></div>  </div>
</details>

<h4 id="handling-unknown-states">Handling ‚ÄòUnknown‚Äô States</h4>

<p>You may remember from an earlier configuration that if I reboot the server, the beacon presence sensor will temporarily be <code class="language-plaintext highlighter-rouge">unknown</code> until the filtered RSSI sensor is populated from data. There‚Äôs a <em>small</em> window when:</p>

<ol>
  <li>Rebooting the server..</li>
  <li>The night before a pickup..</li>
  <li>At 7 PM..</li>
  <li>For only a few seconds..</li>
  <li>While the automation is triggering..</li>
</ol>

<p>where the Bluetooth beacons <em>could</em> be in an <code class="language-plaintext highlighter-rouge">unknown</code> state.</p>

<p>This scenario is so small that I just don‚Äôt care about it. 99.99% is good enough for my home. If it‚Äôs that big of a deal, I‚Äôll add a condition around the <a href="https://www.home-assistant.io/integrations/uptime/"><code class="language-plaintext highlighter-rouge">uptime</code></a> sensor.</p>

<h4 id="handling-stuck-states">Handling ‚ÄòStuck‚Äô States</h4>

<p>I hope that if my beacon gets stuck, it will <em>stay</em> stuck. My automation has a condition to check if any of the RSSI sensors have been updated recently. When the weekly check triggers, if the sensor hasn‚Äôt been updated in the last 15 minutes, I‚Äôll get a notification. This check isn‚Äôt very useful if the beacon normally exits the range of the scanner gateway.</p>

<h4 id="handling-away-states">Handling ‚ÄòAway‚Äô States</h4>

<p>My automations sorta cover the scenario where the beacon presence is stuck in an <code class="language-plaintext highlighter-rouge">away</code> state.</p>

<blockquote>
  <p>As a reminder, the presence sensor is set to expire to the <code class="language-plaintext highlighter-rouge">off</code>/<code class="language-plaintext highlighter-rouge">away</code> state after 5 minutes if there haven‚Äôt been any updates.</p>
</blockquote>

<p>If my beacon is stuck in the <code class="language-plaintext highlighter-rouge">away</code> state <em>after</em> pickup, I‚Äôll <em>probably</em> notice. That‚Äôs because one of my automations earlier sends an additional reminder if I haven‚Äôt ‚Äúreturned‚Äù the bins to my house by <code class="language-plaintext highlighter-rouge">5 PM</code>.</p>

<p>If my beacon is stuck in the <code class="language-plaintext highlighter-rouge">away</code> state <em>before</em> pickup, I‚Äôm kinda hosed. I might miss the ‚ÄúRecycling or Trash removal tomorrow‚Äù notification if my system thinks that the bin is already down by the curb.</p>

<p>To cover me, the ‚ÄúRecycling or Trash removal tomorrow‚Äù will also notify me if the bins have <em>already been taken down</em>. I‚Äôm going to get a notification whether I want one or not. ü•ä</p>

<p>This allows me to double-check that <em>I</em> took the bin down and that the sensor didn‚Äôt just spit out some garbage (pun intended).</p>

<p>Possible alternatives:</p>

<ul>
  <li><strong>Unpredictable</strong>: Add additional checks to see if the bin was set to <code class="language-plaintext highlighter-rouge">away</code> at a weird time.</li>
  <li><strong>Unreliable</strong>: Add additional checks throughout the evening to make sure the bin is <em>still</em> <code class="language-plaintext highlighter-rouge">away</code> just in case it was temporarily <code class="language-plaintext highlighter-rouge">away</code> during the first check.</li>
  <li><strong>Most expensive</strong>: Add biometric tracking with AI on an edge device to verify that a living human took the bins down‚Ä¶ but it sounds like fun for <a href="https://github.com/blakeblackshear/frigate">Frigate</a> and I could <em>totally</em> do this. üì∑</li>
  <li><strong>Easiest</strong>: A confirmation notification saying ‚ÄúThe bin was already taken down, was that you?‚Äù.</li>
</ul>

<h2 id="lessons-learned-so-far">Lessons Learned (So Far)</h2>

<ul>
  <li>Tuning is Key: Adjusting the signal strength thresholds and vibration sensitivity is crucial to getting accurate results.</li>
  <li>Calendars Over Reminders: Using a calendar integration for trash day schedules is more reliable than reminders/tasks.</li>
  <li>Health Checks: A simple automation to check the presence sensor‚Äôs state weekly helps prevent unexpected issues.</li>
</ul>

<h2 id="whats-next">What‚Äôs Next?</h2>

<p>I‚Äôm excited to see how this system performs in the long run. I‚Äôm going to watch and tweak it if any problems arise.</p>

<p>If you‚Äôre interested in creating your smart trash system, feel free to use my configuration as a starting point. If you have any questions or suggestions, drop a comment below!</p>

<p>Happy automating! üè°üì° üóëÔ∏è‚ôªÔ∏è üöõ</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="large project" /><summary type="html"><![CDATA[Bluetooth beacons + Home Assistant = Smarter Waste Management. Learn how I track pickups, automate reminders, and revolutionize my waste management routine to never miss a pickup day.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2024/06/waste_pickup.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2024/06/waste_pickup.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Upgrading My Logitech MX Ergo Trackball with USB-C</title><link href="https://www.kyleniewiada.org/blog/2024/05/mx-ergo-usb-c-mod/" rel="alternate" type="text/html" title="Upgrading My Logitech MX Ergo Trackball with USB-C" /><published>2024-05-07T20:51:00-04:00</published><updated>2024-05-07T20:51:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2024/05/mx-ergo-usb-c-mod</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2024/05/mx-ergo-usb-c-mod/"><![CDATA[<p>Trackballs are a fine alternative input device for driving computers. They excel with slinging the cursor across multi-monitor setups. When used correctly, they can help reduce wrist strain. I started taking trackballs seriously over a decade ago as part of a package solution to mix in a variety of inputs with daily computer usage. In 2013, for less than $20, I picked up a Logitech M570 entry-level trackball. Pairing the trackball, an external trackpad, and a split keyboard together helped break up the repetitive movements that were giving me trouble üßò.</p>

<blockquote>
  <p>2024-11-15: Babalooi in the comments informed me that Logitech has released an updated MX Ergo model ‚Äî the MX Ergo S. The major changes I‚Äôve identified include a USB-C port, silent switches, and supporting the Bolt receiver.</p>

  <p>2025-06-21: Updated post to include notes on the USB-C mod for my Bose QuietComfort 35 headphones and Sony DualShock 4 controller.</p>
</blockquote>

<h2 id="throwback">Throwback</h2>

<p>When 2017 <em>rolled</em> around, I was ready to upgrade. Don‚Äôt get me wrong, the M570 still functioned just fine, but the Logitech MX Ergo trackball was a solid upgrade. The MX Ergo featured a rechargeable 4-month battery, Bluetooth, and it allowed switching between 2 computer profiles without pairing it again. These features meant I could go dongle-free on my work laptop. I also wouldn‚Äôt need to pair the MX Ergo to my desktop every time I brought it home. With my future looking bright, I ordered it the first day it was available from Logitech‚Äôs website; September 6, 2017.</p>

<p>The MX Ergo did everything that I wanted. But Logitech made the insane decision to ship a product in their premium MX line with a Micro USB port üôÅ. Unfortunately, USB-C wouldn‚Äôt trickle into the Logitech lineup until a year later in 2018 with the MX Vertical. While all of my other devices were making the transition into the USB-C world, this device was left behind.</p>

<h2 id="trapped-in-the-past">Trapped in the Past</h2>

<p>It‚Äôs a first-world tragedy when all I want is to carry one charging cable in my bag without giving it a second though. I only have a handful of devices that I regularly use which don‚Äôt have USB-C ports.</p>

<ul>
  <li><del>2016 Bose QuietComfort 35 Headphones (Has a proper USB-C successor ‚úÖ)</del></li>
</ul>
<details>

  <summary>Bose QuietComfort 35 USB-C Mod</summary>

  <p>In 2025, I decided look for USB-C mods available on the Bose QC 35 headphones. My headphones were solid, I used them daily, wanted the convenience of a single charging cable, but I wasn‚Äôt interested in replacing them with a newer model.</p>

  <p>Others have tried using the Bose QC 45 USB-C daughter boards as drop-in replacements in the Bose QC 35. They work, but I‚Äôve heard of some users mention that the Bluetooth light will stay illuminated all of the time. So it‚Äôs not 100% backwards compatible with the QC 35.</p>

  <p>But I found a project on GitHub that seemed promising.</p>

  <ul>
    <li><a href="https://github.com/jamesturton/bose-qc35-usb-c">jamesturton/bose-qc35-usb-c</a></li>
  </ul>

  <p>The project includes designs for a daughter board design with USB-C that is compatible with Bose QC 35 headphones. However, they do not sell any assembled boards. Users are welcome order pre-assembled boards from a PCB manufacturer, but it‚Äôs not cheap.</p>

  <p>I found a user on Reddit (<a href="https://www.reddit.com/user/starkdrive/">/u/starkdrive</a>) who was offering assembled boards that <em>might</em> be using the same design. They were available at a reasonable price, so I went this route.</p>

  <p>It worked out great! No blue light issue and they fit perfectly in my Bose QC 35 headphones.</p>

  <p>Here‚Äôs a picture of the assembled red daughter board in my Bose QC 35 headphones:</p>

  <p><img src="/assets/img/2024/05/bose_quietcomfort_35_usb_c_daughter_board.jpg" alt="Bose QuietComfort 35 with USB-C daughter board installed" /><em>Bose QuietComfort 35 with a red USB-C daughter board installed</em></p>

  <p>With everything fully assembled:</p>

  <p><img src="/assets/img/2024/05/bose_quietcomfort_35_usb_c.jpg" alt="Bose QuietComfort 35 with USB-C mod installed" /><em>Bose QuietComfort 35 with the USB-C mod fully installed</em></p>

  <p><em>Perfection üëåüßº</em></p>

</details>

<ul>
  <li><del>DualShock 4</del></li>
</ul>
<details>

  <summary>Sony DualShock USB-C Mod</summary>

  <p>I was already on a roll with the Bose QuietComfort 35 USB-C mod, so I decided to tackle my DualShock 4 next. My DualShock 4 controller is the primary controller that I use on my PC for gaming. I find it super comfortable and it works well with my original USB Wireless Adapter.</p>

  <p>I don‚Äôt even own a PS4. üòÇ</p>

  <p>Just like my other devices, I wanted the convenience of a single cable to charge my DualShock 4.</p>

  <p>Originally, I was going to get the USB-C daughter board from a seller on Tindie, but they were out of stock. So I went with a kit from ElecGear that I picked up on Amazon. The kit was only $15 and included two boards, so it seemed like a good deal.</p>

  <p>One super-short install later and we were good to go! The install wasn‚Äôt nearly as clean as my Bose QC 35 headphones, but it was still a success.</p>

  <p><img src="/assets/img/2024/05/dualshock_4_usb_c.jpg" alt="Sony DualShock 4 with USB-C mod installed" /><em>Sony DualShock 4 with USB-C mod installed</em></p>

</details>

<ul>
  <li><del>2017 iPad Pro (Has a proper USB-C successor ‚úÖ)</del> Upgraded to newer iPad model with USB-C</li>
  <li>2017 Logitech MX Ergo (No USB-C successor ‚ùå)</li>
</ul>

<p>Looking back, 2017 was quite the year for me üòÖ.</p>

<h2 id="woe-is-me">Woe is Me</h2>

<p>Whenever I want to charge my (or my wife‚Äôs) trackball, I have to hunt down another Micro USB cable. My wife doesn‚Äôt have <em>any</em> other Micro USB devices, so she always has to bring it to my basement office for charging. It‚Äôs not <em>that</em> big of a deal because it only requires a charge every few months. But it‚Äôs still annoying that if I‚Äôm going to be away, I need to either pack a Micro USB cable or remember to charge it ahead of time.</p>

<h2 id="onward">Onward</h2>

<p>Almost every year I make a casual search to see if Logitech released a USB-C successor for the MX Ergo, but so far they haven‚Äôt. This year, my search returned a result. The Reddit user, <a href="https://www.reddit.com/user/TheSolderking/">Solderking</a>, <a href="https://www.reddit.com/r/Trackballs/comments/1azxzpo/mx_ergo_usb_c_mod_concluded_dump/">reverse engineered the charging PCB for the MX Ergo</a>. They recreated the board and added a USB-C port. They even went a step further and figured out all the components to redevelop a fully assembled board.</p>

<p>I was so excited to see this. I had been waiting years to banish Micro USB from my regular life (I‚Äôm almost there!).</p>

<p>Solderking <a href="https://www.pcbway.com/project/shareproject/Logitech_MX_Ergo_USB_C_PCB_replacement_89459dce.html">shared their project on PCBWay</a> along with the Gerber files where anyone can order it bare or fully assembled. PCBWay shows me some promotional quotes for ~$35 for any quantity under 20. I have no idea if that quote is accurate.</p>

<p>I decided to cut out the middleman and ended up ordering 3 boards directly from Solderking. One for my MX Ergo, my wife‚Äôs MX Ergo, and a spare.</p>

<blockquote>
  <p>If you want to reach out to them as well, <a href="https://linktr.ee/solderking">Solderking has a Linktree</a> with all their social media links.</p>
</blockquote>

<h2 id="installation">Installation</h2>

<p><img src="/assets/img/2024/05/usb_c_boards.jpg" alt="A pair of USB-C boards for the Logitech MX Ergo" /><em>A pair of USB-C boards for the Logitech MX Ergo from <a href="https://linktr.ee/solderking">Solderking</a></em></p>

<p>A few days after ordering, the new USB-C boards arrived fully assembled and tested ‚úÖ. I know it‚Äôs not important, since they‚Äôll never be seen, but white PCBs are my jam!</p>

<p>To prepare for my work, I pulled out my trusty iFixit driver, a few bits, some mini files, and flush cutters. I followed their <a href="https://www.instructables.com/Converting-the-Logitech-MXERGO-Trackball-Mouse-to-/">Instructables directions</a> and disassembled my MX Ergo.</p>

<p><img src="/assets/img/2024/05/tools.jpg" alt="iFixit driver, 3 mini files, flush cutters, and the Logitech MX Ergo" /><em>iFixit driver, 3 mini files, flush cutters, and patience were all used to install the new USB-C board</em></p>

<p>Using the flush cutters, I trimmed away some plastic to make room for the larger USB-C port housing. With some patience, I used a number of mini files to shave away the edges in the old Micro USB port hole and enlarged it for the new USB-C port.</p>

<p><img src="/assets/img/2024/05/usb_c_board_installed.jpg" alt="Logitech MX Ergo shell bottom with the new USB-C board inserted" /><em>Logitech MX Ergo bottom shell with the USB-C board freshly fitted</em></p>

<p>After validating the new connections, I began reassembly. All I did was follow the original directions, but in reverse üîÑ. The grand result; A Logitech MX Ergo with a USB-C port for charging!</p>

<p><img src="/assets/img/2024/05/mx_ergo_installed.jpg" alt="Logitech MX Ergo with a USB-C port" /><em>Logitech MX Ergo with the USB-C board installed under a magnifying glass</em></p>

<h2 id="conclusion">Conclusion</h2>

<p>My only feedback is that I wish the power switch on the board was clickier to prevent the MX Ergo from getting accidentally toggled-on in my bag. The power switch on the new board seems to slide rather than click into the ‚Äòon‚Äô position.</p>

<p>I reached out to Solderking with this feedback. They let me know that this specific power switch was chosen due to availability of parts. They have a few other switches that they are going to try out, but they went with one that was easy to obtain.</p>

<p>If it‚Äôs really that big of a deal to me, I‚Äôll figure out how to transplant the power switch from the old board in the future. I know I have some ChipQuik around here somewhere.. (or maybe that will give me an excuse to finally buy a hot air gun).</p>

<p><img src="/assets/img/2024/05/mx_ergo_trackball_usb_c.jpg" alt="Logitech MX Ergo with the USB-C board installed and fully reassembled" /><em>Logitech MX Ergo with the USB-C board fully installed and reassembled</em></p>

<p>I intend to keep these trackballs operating for a long time. The one in the picture above is from my original order back in 2017. I‚Äôm glad that I can keep it going with a modern charging port. Here‚Äôs to another 7 years of use, and death to Micro USB! üñ≤Ô∏è</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="small project" /><summary type="html"><![CDATA[Upgrading the charging port on my Logitech MX Ergo trackball with a USB-C mod.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2024/05/mx_ergo_trackball_usb_c.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2024/05/mx_ergo_trackball_usb_c.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tackle Tracking Water Usage</title><link href="https://www.kyleniewiada.org/blog/2023/10/tackle-tracking-water-usage/" rel="alternate" type="text/html" title="Tackle Tracking Water Usage" /><published>2023-10-13T21:07:00-04:00</published><updated>2023-10-13T21:07:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2023/10/tackle-tracking-water-usage</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2023/10/tackle-tracking-water-usage/"><![CDATA[<p>Data driven decision making is how I prefer to approach my smart home. A few years ago, I started the journey of tracking my electric and gas utilities. Water tracking eluded me. With our meager household consumption, it never made sense to tackle tracking water usage. But our family grew. I restored parts of our ancient irrigation system. Then we added garden beds! Suddenly we using more water.</p>

<p>Now I had a reason to track it.</p>

<h2 id="changelog">Changelog</h2>

<blockquote>
  <ul>
    <li>2025-10-28: <a href="#water-shutoff-actuator-installed">Added to my post</a> to include the shutoff EcoNet shutoff valve I installed earlier this year.</li>
  </ul>
</blockquote>

<h2 id="why-track-consumption">Why Track Consumption?</h2>

<p>While on a walk last week, I spotted a neighbor with a busted sprinkler head. Water was gushing into the street and washing out their new grass.</p>

<p>How would <em>you</em> know if your sprinkler head breaks off?</p>

<p>What if the toilet keeps running in the middle of the night and no one hears it?</p>

<p>I want to track these things. With a little bit of help from some automations, I can get <em>pretty close</em> to detecting similar anomalies and overage.</p>

<h2 id="options">Options</h2>

<p>Ok. How can I track my water usage?</p>

<p>The first thing I did was spend considerable time researching how my township tracks <em>my</em> water consumption. At my residence, they have a water meter installed in my basement with a wireless module reading the meter‚Äôs pulse output signals. Since this hardware is owned by the township, I‚Äôm not allowed to touch or modify it in any way. But I <em>could</em> simply listen to it.</p>

<p>I thought this would be an easy win. Simply hook up a radio receiver and listen to the signals the device broadcasts. But once I started capturing the signals, I soon realized that they were encrypted. Continuing down this path would not have been an easy effort.</p>

<p>Next, I considered buying a consumer-ready product for tracking. There are some top contenders like the Moen Flo or Flume. Both track water usage, and some have extra features like a built-in water shutoff. But nearly all of them require the cloud and cost a small fortune.</p>

<p>My goal was to avoid vendor lock-in and cloud-only support. I <a href="/blog/2019/05/trading-nest-for-tensorflow/"><em>despise</em> devices that require the cloud</a> ‚ùå.</p>

<p>After spending <em>way too long</em> researching different routes and getting nowhere, I reluctantly pivoted to roll my own local setup for tracking consumption.</p>

<h2 id="rolling-my-own">Rolling My Own</h2>

<p>Here‚Äôs the overview</p>

<ul>
  <li><a href="https://www.home-assistant.io/">Home Assistant</a> will live at the center and collect all data</li>
  <li>I will use water meters that support sending pulse output signals after each gallon is consumed</li>
  <li>The first water meter will track our total home consumption
    <ul>
      <li>It will use a custom <a href="https://esphome.io/">ESPHome</a> device for counting the water meter pulse output</li>
    </ul>
  </li>
  <li>The second water meter will track our irrigation consumption
    <ul>
      <li>It will connect to <a href="https://opensprinkler.com/">OpenSprinkler</a> and connect with Home Assistant to calculate consumption</li>
    </ul>
  </li>
</ul>

<p>I will track our entire household consumption by installing our own sub-meter immediately after the township‚Äôs water meter. A custom ESPHome device will be deployed to track the pulse outputs from the sub-meter. The consumption data will be stored in Home Assistant.</p>

<p>I will track our irrigation water consumption with a second sub-meter. In some homes with a connected sewer system, they sometimes run a second water line metered exclusively for irrigation. This is because local governments often exclude sewer fees for irrigation consumption.</p>

<p>However, we don‚Äôt have a separate water line for irrigation. Our house uses a septic tank for waste. This means that we don‚Äôt pay sewer costs for any water that our household consumes. The township has no interest in running out an additional metered line for irrigation as there is no cost difference in billing. Instead, they have us consume our irrigation water from our main water line.</p>

<blockquote>
  <p>I guess the irrigation meter is more a sub-sub-meter since it‚Äôs in series with the other sub-meter (more on how that impacts my calculations later!).</p>
</blockquote>

<h2 id="what-i-used">What I Used</h2>

<h3 id="main-water-meter">Main Water Meter</h3>

<ul>
  <li>DAE MJ-75 (potable water meter with pulse output)</li>
  <li>ESP32 dev board</li>
  <li>PCB screw terminal block for easy assembly</li>
  <li>Solderless prototype breadboard</li>
  <li>Extra wire laying around</li>
  <li>USB cable</li>
  <li>USB wall plug</li>
</ul>

<h3 id="irrigation-water-meter">Irrigation Water Meter</h3>

<ul>
  <li>DAE MJ-75 (potable water meter with pulse output)</li>
  <li>OpenSprinkler controller</li>
  <li>Jameco GPU572401500WA00 24 Volt @ 1500mA Transformer (to run multiple low-flow zones in parallel)</li>
</ul>

<h2 id="setup">Setup</h2>

<p>For tracking water consumption, I am using a DAE MJ-75 water meters for each leg. They‚Äôre NSF61 certified, safe for cold potable water, and already have a built-in reed sensor with pulse outputs for every gallon consumed.</p>

<p><img src="/assets/img/2023/10/water_meters.png" alt="Two DAE MJ-75 water meters" /><em>DAE MJ-75 water meters ready to install</em></p>

<h3 id="main-meter-with-esphome">Main Meter with ESPHome</h3>

<p>I‚Äôm tracking my overall consumption from the main sub-meter by running the meter wires into an ESP32 dev board. I‚Äôm wiring the meter reed switch directly into the <code class="language-plaintext highlighter-rouge">GPIO32</code> and <code class="language-plaintext highlighter-rouge">GROUND</code>.</p>

<p>I chose an ESP32 dev board because it‚Äôs cheap, works with ESPHome, and has built-in pull-up resistors. These pull-up resistors allow me to prevent the incoming reed switch signal from floating around while open. I could have created a pull-up resistor with <em>actual resistors</em>, but this was easier.</p>

<p><img src="/assets/img/2023/10/ESP32_dev.jpg" alt="ESP32 dev board connected to a water meter" /><em>ESP32 dev board connected to a water meter with <code class="language-plaintext highlighter-rouge">GPIO32</code> and <code class="language-plaintext highlighter-rouge">GROUND</code>. Extra wiring present on the <code class="language-plaintext highlighter-rouge">3.3V</code> and <code class="language-plaintext highlighter-rouge">GROUND</code> from earlier testing.</em></p>

<p>Here is my ESPHome Water Meter Configuration:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Basic Config</span>
<span class="c1"># esp_32_02</span>
<span class="c1"># Water Meter</span>
<span class="c1"># Updated for 2025.5.0</span>

<span class="c1"># Alleged Reed Switch data from manufacturer:</span>
<span class="c1">#   Pulse Output: 1 gallon per pulse</span>
<span class="c1">#   Qmax: 20 GPM (gallon per min.)</span>
<span class="c1">#   Width of the pulse: 3 sec</span>
<span class="c1">#   Width of the pulse with continuous output: 0.75 sec</span>
<span class="c1">#   The angle with continuous output: 90 degree</span>

<span class="c1"># external_components:</span>
<span class="c1">#   # use pulse_meter from ESPHome's dev branch in GitHub</span>
<span class="c1">#   - source:</span>
<span class="c1">#       type: git</span>
<span class="c1">#       url: https://github.com/aav7fl/esphome</span>
<span class="c1">#       ref: dev</span>
<span class="c1">#     components: [ pulse_meter ]</span>

<span class="na">substitutions</span><span class="pi">:</span>
  <span class="na">board_id</span><span class="pi">:</span> <span class="s">esp-32-02</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">Main Water Meter</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">Main Water Meter</span>

<span class="na">wifi</span><span class="pi">:</span>
  <span class="na">ssid</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_ssid</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_password</span>

  <span class="c1"># manual_ip:</span>
    <span class="c1"># static_ip: 192.168.95.110</span>
    <span class="c1"># gateway: 192.168.95.1</span>
    <span class="c1"># subnet: 255.255.255.0</span>

  <span class="c1"># Enable fallback hotspot (captive portal) in case wifi connection fails</span>
  <span class="na">ap</span><span class="pi">:</span>
    <span class="na">ssid</span><span class="pi">:</span> <span class="s2">"</span><span class="s">${board_id}</span><span class="nv"> </span><span class="s">Hotspot"</span>
    <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ap_hotspot_password</span>

  <span class="c1">#use_address: energy-meter.local</span>

<span class="c1"># Enable captive portal if wifi ever changes</span>
<span class="na">captive_portal</span><span class="pi">:</span>

<span class="c1"># Enable Home Assistant API</span>
<span class="na">api</span><span class="pi">:</span>
  <span class="na">encryption</span><span class="pi">:</span>
    <span class="na">key</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">encryption_pre_shared_key</span>

<span class="na">ota</span><span class="pi">:</span>
  <span class="na">platform</span><span class="pi">:</span> <span class="s">esphome</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ota_password</span>

<span class="na">esphome</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">${name}</span>
  <span class="na">comment</span><span class="pi">:</span> <span class="s">${board_id}</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">${friendly_name}</span>
  <span class="na">on_boot</span><span class="pi">:</span>
    <span class="na">priority</span><span class="pi">:</span> <span class="m">800</span>
    <span class="na">then</span><span class="pi">:</span> 
      <span class="c1"># Set default value on boot so it doesn't show as unknown</span>
      <span class="pi">-</span> <span class="na">sensor.template.publish</span><span class="pi">:</span>
          <span class="na">id</span><span class="pi">:</span> <span class="s">water_consumption_submeter</span>
          <span class="na">state</span><span class="pi">:</span> <span class="kt">!lambda</span> <span class="s2">"</span><span class="s">return</span><span class="nv"> </span><span class="s">0;"</span>

<span class="na">esp32</span><span class="pi">:</span>
  <span class="na">board</span><span class="pi">:</span> <span class="s">nodemcu-32s</span>

<span class="c1"># Enable logging</span>
<span class="na">logger</span><span class="pi">:</span>

<span class="na">button</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">restart</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Restart"</span>

<span class="c1"># Sensors that the ESPhome unit is capable of reporting</span>
<span class="na">sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">pulse_meter</span>
    <span class="na">pin</span><span class="pi">:</span>
      <span class="na">number</span><span class="pi">:</span> <span class="s">GPIO32</span>
      <span class="na">inverted</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">mode</span><span class="pi">:</span>
        <span class="na">input</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">pullup</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">internal_filter_mode</span><span class="pi">:</span> <span class="s">PULSE</span>
    <span class="na">internal_filter</span><span class="pi">:</span> <span class="s">200ms</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s1">'</span><span class="s">gal/min'</span>
    <span class="na">accuracy_decimals</span><span class="pi">:</span> <span class="m">1</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Flow"</span>
    <span class="na">icon</span><span class="pi">:</span> <span class="s1">'</span><span class="s">mdi:water'</span>
    <span class="na">filters</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">clamp</span><span class="pi">:</span>
          <span class="na">max_value</span><span class="pi">:</span> <span class="m">20</span>
    <span class="na">total</span><span class="pi">:</span>
      <span class="na">id</span><span class="pi">:</span> <span class="s">water_total</span>
      <span class="na">internal</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">icon</span><span class="pi">:</span> <span class="s1">'</span><span class="s">mdi:water'</span>
      <span class="na">device_class</span><span class="pi">:</span> <span class="s1">'</span><span class="s">water'</span>
      <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s1">'</span><span class="s">gal'</span>
      <span class="c1"># This automation will be triggered when a new value that has passed through all filters is published. </span>
      <span class="c1"># In Lambdas you can get the value from the trigger with x.</span>
      <span class="na">on_value</span><span class="pi">:</span>
        <span class="na">then</span><span class="pi">:</span> 
          <span class="pi">-</span> <span class="na">sensor.template.publish</span><span class="pi">:</span>
              <span class="na">id</span><span class="pi">:</span> <span class="s">water_consumption_submeter</span>
              <span class="na">state</span><span class="pi">:</span> <span class="kt">!lambda</span> <span class="s2">"</span><span class="s">return</span><span class="nv"> </span><span class="s">x;"</span>

  <span class="c1"># Templated sensor to provide native total_increasing sensor information to Home Assistant </span>
  <span class="c1"># This makes it easier to add to the Energy Dashboard</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">water_consumption_submeter</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Consumption</span><span class="nv"> </span><span class="s">Submeter"</span>
    <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s2">"</span><span class="s">gal"</span>
    <span class="na">state_class</span><span class="pi">:</span> <span class="s">total_increasing</span>
    <span class="c1"># Return 0 decimal places as the water meter only measures in whole gallons</span>
    <span class="na">accuracy_decimals</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">device_class</span><span class="pi">:</span> <span class="s">water</span>
    <span class="na">icon</span><span class="pi">:</span> <span class="s2">"</span><span class="s">mdi:gauge"</span>
    <span class="c1"># Return 0 when device is restarted</span>
    <span class="c1"># lambda: return 0;</span>

  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">wifi_signal</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">WiFi</span><span class="nv"> </span><span class="s">Signal"</span>
    <span class="na">update_interval</span><span class="pi">:</span> <span class="s">300s</span>

<span class="c1"># Enables status LED</span>
<span class="na">status_led</span><span class="pi">:</span>
  <span class="na">pin</span><span class="pi">:</span> <span class="s">GPIO2</span>
</code></pre></div></div>

<p>After the dev board is deployed, I simply add it to Home Assistant through the ESPHome integration. Now all of the sensors are available in Home Assistant.</p>

<h3 id="irrigation-meter-with-opensprinkler">Irrigation Meter with OpenSprinkler</h3>

<p>The sub-meter being used for tracking irrigation consumption is <em>also</em> the DAE MJ-75. Reminder; the meter produces a pulse for each gallon of water consumed. I read this data by connecting the meter to my special sprinkler controller, OpenSprinkler.</p>

<p>My OpenSprinkler controller supports different input sensors. One of the supported sensors is a pulse meter, which is exactly what I have. There are 3 easy steps to get it working:</p>

<ol>
  <li>Install the pulse-output water meter</li>
  <li>Connect the wires from the water meter to the sensor ports on the OpenSprinkler controller</li>
  <li>Configure the sensor input on the OpenSprinkler dashboard</li>
</ol>

<p>Now OpenSprinkler can track water usage. But how do I get the data in OpenSprinkler over to Home Assistant?</p>

<p>Simple. By using the <a href="https://github.com/vinteo/hass-opensprinkler">hass-opensprinkler</a> integration. This integration exposes entities, controls, and data over to Home Assistant.</p>

<p>When I first started using this integration, I don‚Äôt believe there was an entity to show water consumption via the integration I was using (I think this is still true?). Since there was no consumption entity, I had to figure out a different way to calculate my consumption.</p>

<p>Luckily, the other exposed entities seemed to work without issue. As a rule of thumb, irrigation flow rates are generally constant and don‚Äôt fluctuate too much. Since I have a reliable flow <em>rate</em> coming from the controller, I can calculate the consumption by using a <a href="https://www.home-assistant.io/integrations/integration/">Riemann sum</a> calculation of the current rate. This is basically plotting out a graph of the flow rate over time, and calculating the sum of all area under that line (e.g. a less precise integral).</p>

<h4 id="1-converting-liters-to-gallons">1. Converting Liters to Gallons</h4>

<p><strong>Input:</strong> <code class="language-plaintext highlighter-rouge">sensor.opensprinkler_flow_rate</code> (Flow rate from OpenSprinkler integration, but it‚Äôs in <code class="language-plaintext highlighter-rouge">Liters</code>)</p>

<p>Even if the OpenSprinker controller is set to use Imperial units, the OpenSprinkler API still exposes all values in SI. This means that I need to create a new sensor in Home Assistant to convert <code class="language-plaintext highlighter-rouge">L/min</code> to <code class="language-plaintext highlighter-rouge">gal/min</code>. That way the units match the rest of my system.</p>

<p>Here is my template sensor to convert the OpenSprinkler flow rate from <code class="language-plaintext highlighter-rouge">L/min</code> to <code class="language-plaintext highlighter-rouge">gal/min</code>.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">sensor</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">OpenSprinkler</span><span class="nv"> </span><span class="s">Flow</span><span class="nv"> </span><span class="s">Rate</span><span class="nv"> </span><span class="s">Gallons</span><span class="nv"> </span><span class="s">per</span><span class="nv"> </span><span class="s">Minute"</span>
      <span class="na">unique_id</span><span class="pi">:</span> <span class="s">opensprinkler_flow_rate_gallons</span>
      <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s1">'</span><span class="s">gal/min'</span>
      <span class="na">state_class</span><span class="pi">:</span> <span class="s">measurement</span>
      <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">float(states('sensor.opensprinkler_flow_rate')</span><span class="nv"> </span><span class="s">|</span><span class="nv"> </span><span class="s">float(0))</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">0.2641720524</span><span class="nv"> </span><span class="s">}}"</span>
</code></pre></div></div>

<p><strong>Output:</strong> <code class="language-plaintext highlighter-rouge">sensor.opensprinkler_flow_rate_gallons</code> (Flow rate in gallons)</p>

<h4 id="2-converting-rate-to-consumption">2. Converting Rate to Consumption</h4>

<p><strong>Input:</strong> <code class="language-plaintext highlighter-rouge">sensor.opensprinkler_flow_rate_gallons</code> (Flow rate in gallons)</p>

<p>Now that we have a rate in our preferred unit, we need to calculate the actual <em>consumption</em>. I‚Äôm using the <a href="https://www.home-assistant.io/integrations/integration/">Riemann sum helper</a> to convert rate into consumption.</p>

<blockquote>
  <p>Note: I‚Äôm using a right-hand side Riemann sum for this calculation. If I use a left-hand/mid-point, and I don‚Äôt capture any water usage for a while, we would see a huge spike in consumption when the next data point is tracked because it would assume a non-zero rate occurred over the entire duration. This is corrected by using a right-hand Riemann sum.</p>

  <p>Note 2: <a href="https://github.com/home-assistant/core/pull/110685">Starting in 2024.7</a>, make sure you force the <code class="language-plaintext highlighter-rouge">max_sub_interval</code> to something like 30s - 60s. That is because the source data (flow rate) sensor from the sprinkler may not update frequently if the water flow is stable. If we let this value sit, our Riemann sum won‚Äôt update for a while and cause the calculations between our two meters to be slightly off until it can correct itself later.</p>
</blockquote>

<p><img src="/assets/img/2023/10/riemann_sum.png" alt="Riemann sum of OpenSprinkler flow rate" /><em>Consumption by Riemann sum integration</em></p>

<p><strong>Output:</strong> <code class="language-plaintext highlighter-rouge">sensor.sprinkler_consumption_sum_gallons</code> (Consumption in gallons)</p>

<h4 id="3-adding-consumption-to-a-utility-meter">3. Adding Consumption to a Utility Meter</h4>

<p><strong>Input:</strong> <code class="language-plaintext highlighter-rouge">sensor.sprinkler_consumption_sum_gallons</code> (Consumption in gallons)</p>

<p>Next, I track the consumption with a <a href="https://www.home-assistant.io/integrations/utility_meter/">utility meter</a> helper.</p>

<p><img src="/assets/img/2023/10/utility_meter_helper.png" alt="Utility meter of OpenSprinkler consumption" /><em>Utility Meter of OpenSprinkler consumption</em></p>

<p><strong>Output:</strong> <code class="language-plaintext highlighter-rouge">sensor.sprinkler_consumption_gallons</code> (Utility meter sensor)</p>

<h4 id="4-fixing-the-utility-meter">4. Fixing the Utility Meter</h4>

<p><strong>Input:</strong> <code class="language-plaintext highlighter-rouge">sensor.sprinkler_consumption_gallons</code> (Utility meter sensor)</p>

<p>We‚Äôre almost done. For whatever reason, the utility meter that I create above ends up missing key components that allow me to add it to my Energy Dashboard. To remedy this, I have to manually add a <code class="language-plaintext highlighter-rouge">device_class</code> and <code class="language-plaintext highlighter-rouge">unit_of_measurement</code> through the <a href="https://www.home-assistant.io/docs/configuration/customizing-devices/">customization entry</a> for the sensor in order for it to be allowed in the Home Assistant <code class="language-plaintext highlighter-rouge">Energy</code> dashboard.</p>

<blockquote>
  <p>I believe this problem can be avoided by defining the utility meter in <code class="language-plaintext highlighter-rouge">yaml</code> instead of the UI.</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">sensor.sprinkler_consumption_gallons</span><span class="pi">:</span>
  <span class="na">device_class</span><span class="pi">:</span> <span class="s">water</span>
  <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">gal</span>
</code></pre></div></div>

<p>Correctly capturing the irrigation water consumption was more involved than I initially thought. But now I can add irrigation consumption to my energy dashboard and track long-term data.</p>

<h2 id="companion-automation">Companion Automation</h2>

<p>At the time of writing, I don‚Äôt have an <em>advanced</em> alerting system to tell me if my usage is higher than normal. But I do have a <em>basic</em> one. This is the best I could come up with this past summer on my limited time.</p>

<p>This automation will alert my family if we‚Äôre using a higher than expected quantity of water (2000+ gallons). It‚Äôs only useful if the irrigation consumption is consistent each run. There are ways to make it dynamic, but this met my acceptance criteria to get something deployed.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Alert - Notify irrigation usage high</span>
<span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Send</span><span class="nv"> </span><span class="s">a</span><span class="nv"> </span><span class="s">notification</span><span class="nv"> </span><span class="s">alert</span><span class="nv"> </span><span class="s">if</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">irrigation</span><span class="nv"> </span><span class="s">usage</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">higher</span><span class="nv"> </span><span class="s">than</span><span class="nv"> </span><span class="s">expected</span><span class="nv"> </span><span class="s">at</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">end</span><span class="nv"> </span><span class="s">of</span><span class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">day"</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">19:00:00"</span>
<span class="na">condition</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">numeric_state</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">sensor.sprinkler_consumption_gallons</span>
    <span class="na">above</span><span class="pi">:</span> <span class="m">2000</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s">üíßüå± Irrigation Usage High!</span>
      <span class="na">message</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">Irrigation has used {{states('sensor.sprinkler_consumption_gallons')}}</span>
        <span class="s">gallons today. That was previously considered high. Please investigate.</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:sprinkler-variant</span>
        <span class="na">group</span><span class="pi">:</span> <span class="s">irrigation-alert</span>
        <span class="na">channel</span><span class="pi">:</span> <span class="s">irrigation-alert</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div></div>

<h2 id="additional-wishes">Additional Wishes</h2>

<h3 id="water-sub-metering-devices">Water Sub-Metering Devices</h3>

<p>Home Assistant energy monitoring allows users to track separate electric devices, like smart plugs, in addition to the main meter. I really wish Home Assistant supported sub-metering devices for water. That way I could track the irrigation long-term statistics without another templated sensor. I understand why it‚Äôs not included. I don‚Äôt think having sub-meters in series is very common.</p>

<p>To work around this setback, I need to create a template sensor that subtracts my irrigation sub-meter consumption from the total consumption of my household. I then add both meters back into the dashboard to give me a full picture of my consumption.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Calculate standard home water consumption without irrigation</span>
<span class="c1"># Fixes issue where there are two meters in series, and we want to avoid double-counting consumption</span>
<span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">template</span>
  <span class="na">sensor</span><span class="pi">:</span>
    <span class="na">standard_water_consumption</span><span class="pi">:</span>
      <span class="na">state_class</span><span class="pi">:</span> <span class="s">total_increasing</span>
      <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">gal</span>
      <span class="na">device_class</span><span class="pi">:</span> <span class="s">water</span>
      <span class="na">availability</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">is_number(states('sensor.main_water_meter_consumption_submeter_daily'))</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">is_number(states('sensor.sprinkler_consumption_gallons'))</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="c1"># Subtract the values of 2 utility meters.</span>
      <span class="c1"># - One is a utility meter of the ESPHome main_water_meter_consumption_submeter</span>
      <span class="c1"># - One is a utility meter of the sprinkler_consumption_sum_gallons</span>
      <span class="c1"># Create another helper utility meter</span>
      <span class="c1"># - The last helper is a utility meter of this sensor that we use to compare against (and to make sure it's always available after restarts)</span>
      <span class="c1"># All utility meters reset at midnight. This makes it easier and clearer to make corrections if something goes wrong.</span>
      <span class="na">state</span><span class="pi">:</span> <span class="pi">&gt;-</span>
        <span class="s">{# Set up some variables to make reading my conditions easier #}</span>

        <span class="s">{# Daily utility meter of my main submeter #}</span>
        <span class="s">{% set main_submeter_daily = states('sensor.main_water_meter_consumption_submeter_daily') | float(0) %}</span>

        <span class="s">{# Daily utility meter of my sprinkler submeter #}</span>
        <span class="s">{% set sprinkler_submeter_daily = states('sensor.sprinkler_consumption_gallons') | float(0) %}</span>

        <span class="s">{# Current difference between both daily utility meters #}</span>
        <span class="s">{% set new_standard_water_consumption = main_submeter_daily - sprinkler_submeter_daily %}</span>

        <span class="s">{# Mirror the value in this template sensor to a utility meter helper, and retrieve it below. This ensures #}</span>
        <span class="s">{#  that _this_ template sensor always has a value on restart, and that the value is never unknown. #}</span>
        <span class="s">{% set old_standard_water_consumption = states('sensor.standard_water_consumption_meter_daily') | float(0) %}</span>

        <span class="s">{# Keep an eye on the sprinkler flow rate to know if both meters should be going off #}</span>
        <span class="s">{% set sprinkler_submeter_flow_rate = states('sensor.opensprinkler_flow_rate_gallons') | float(0) %}</span>

        <span class="s">{# Giving it a default value in case I mess up the logic below. #}</span>
        <span class="s">{% set standard_water_consumption = 0 %}</span>

        <span class="s">{# We first check if the time is around midnight and ignore any value (temporarily). That is because #}</span>
        <span class="s">{#  the meters we're using to calculate the value all reset _around_ midnight. Sometimes they don't clear #}</span>
        <span class="s">{#  _exactly_ at midnight before we try to calculate the value, then we end up with a spiked value #}</span>
        <span class="s">{#  right at midnight as the calculations shouldn't run until everything optimistically resets. #}</span>
        <span class="s">{# Any missed values we be re-calculated correctly as soon as the time window passes. #}</span>
        <span class="s">{# It's possible to miss the reset at midnight if the server rebooted during that time, #}</span>
        <span class="s">{# but that shouldn't matter since all of the meters reset together (ignoring super precise edge cases). #}</span>
        <span class="s">{% if today_at('00:00:00') &lt;= now() &lt;= today_at('00:01:00') %}</span>
          <span class="s">{% set standard_water_consumption = 0 %}</span>

        <span class="s">{# When irrigation is running, and the difference is small, (before we consume water in other ways), #}</span>
        <span class="s">{#  then we assume that the meters are probably slow to update if they're this close. #}</span>
        <span class="s">{# This could miss water consumption if we use less than 10 gallons on a day that we run the sprinklers #}</span>
        <span class="s">{#  .. but.. really? That edge case isn't worth it. #}</span>
        <span class="s">{% elif sprinkler_submeter_flow_rate &gt; 0 and new_standard_water_consumption | abs &lt; 10 %}</span>
          <span class="s">{% set standard_water_consumption = old_standard_water_consumption %}</span>

        <span class="s">{% else %}</span>
          <span class="s">{# Take the max value between the old value and the new calculated value. #}</span>
          <span class="s">{# This is to prevent the new value from going down if the meters are slow to update, #}</span>
          <span class="s">{#  or my floating point math is off. This is a problem I had before. #}</span>
          <span class="s">{% set standard_water_consumption = max(new_standard_water_consumption, old_standard_water_consumption, 0) %}</span>
        <span class="s">{% endif %}</span>

        <span class="s">{# Use the ceil rounding since the float values can shuffle around so much when subtracting the meters. #}</span>
        <span class="s">{# It makes the sensor update less frequently and doesn't loose any meaningful precision. #}</span>
        <span class="s">{{ standard_water_consumption | round(0, 'ceil') }}</span>

</code></pre></div></div>

<p><img src="/assets/img/2023/10/water_consumption.png" alt="Water consumption from Home Assistant Energy Dashboard" /><em>Water consumption in the Home Assistant Energy Dashboard</em></p>

<h3 id="auto-shutoff">Auto Shutoff</h3>

<p>I wish my solution had a built-in shutoff, but I wasn‚Äôt able to budget for it at the time of install. Luckily, this is easy to fix.</p>

<p>When my water sub-meters were installed, I made sure to add additional quarter-turn shutoff valves before each meter. My goal is to eventually install a water valve actuator around the shutoff. Then I can activate it if  I ever <a href="/blog/2021/10/affordable-water-leak-and-temp-monitoring/">detect a leak from one of my sensors</a> or detect a usage anomaly. Something like the Zooz Titan Water Valve Actuator (ZAC36) or the EcoNet Bulldog Valve Robot (EVC200-HCSML) would work nicely.</p>

<p><img src="/assets/img/2023/10/shutoff_valve.jpg" alt="Shutoff valve and water meter together" /><em>Shutoff valve installed below water sub-meter, ready for a water valve actuator</em></p>

<blockquote>
  <p>Update: I‚Äôve installed one! See below.</p>
</blockquote>

<h4 id="water-shutoff-actuator-installed">Water Shutoff Actuator Installed</h4>

<p>After 2 years, I have finally installed a smart shutoff actuator. I went with the EcoNet Bulldog EVC200 instead of the Zooz Titan. Both valves use Z-Wave, have optional battery backups, and optional wired leak sensors. But I went with the EcoNet because:</p>

<ul>
  <li>Preferred mounting system on the valve body instead of the pipe</li>
  <li>Can be manually controlled via the button, or bypassed entirely with a physical button to disengage the motor</li>
</ul>

<p>The EcoNet Bulldog checks all of my boxes. The only drawback for me is the price, and that its Z-Wave Plus implementation doesn‚Äôt support S1 or S2 security.</p>

<p><img src="/assets/img/2023/10/EcoNet_Bulldog_EVC200_water_shutoff_actuator.jpg" alt="Shutoff with EcoNet Bulldog EVC200 water shutoff actuator installed" /><em>Shutoff with EcoNet Bulldog EVC200 water shutoff actuator installed</em></p>

<p>I run a monthly automation to test my shutoff valve to ensure the shutoff valve doesn‚Äôt get stuck over time.</p>

<p>When the water shutoff actuator gets triggered by a water leak, I include a tapable action in my water leak notifications that opens the water valve back up (in case I accidentally splashed a leak sensor, or I finished cleaning up a mess).</p>

<p>Since installing, I‚Äôve already had it trigger after I improperly re-installed a faucet aerator that caused water to backflow into the faucet body and below my sink.</p>

<h3 id="low-flow-drawbacks">Low Flow Drawbacks</h3>

<p>One drawback with the DAE MJ-75 water meter is that the meter doesn‚Äôt detect <em>super slow</em> water flows. For example, if my whole-home humidifier is running, my DAE meter usually won‚Äôt pick up any water flow since there isn‚Äôt enough volume moving. On the other hand, the water meter installed by the township (which is far more expensive) easily detects the slower water flow.</p>

<p>I suspect other commercial products like the Flume and Moen Flo have no trouble detecting these lower flow rates, since this is an advertised selling point.</p>

<p>While the township meter and my sub-meter both list a minimum flow rate of 0.25 GPM, the township water meter performs <em>slightly better</em> outside of the spec and still manages to track consumption when our humidifier is running. On the other hand, the DAE meter doesn‚Äôt reliably track the water consumed by the humidifier.</p>

<p>The drawback with these findings is that I don‚Äôt think I‚Äôll be able to detect super small leaks as easily as a commercial product (unless I use a different meter).</p>

<h2 id="conclusion">Conclusion</h2>

<p>I like tracking our water usage. While I haven‚Äôt fully matched commercial offerings, I feel that I am close. Next summer I hope to become more involved with tracking abnormal usages. My solution doesn‚Äôt require internet, there are no subscription fees, and these parts are stupid easy to replace if they ever fail. I also have a path forward to implement premium features like auto-shutoff.</p>

<p>It‚Äôs possible that using a more expensive sub-meter would have eliminated these low-flow concerns. But generally, everything is being tracked as it should.</p>

<p>I‚Äôve reached the trifecta of tracking all utilities in my house.</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="large project" /><summary type="html"><![CDATA[Tackle tracking water consumption across my house and irrigation with Home Assistant, ESPHome, and OpenSprinkler]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2023/10/garden_bed_watering.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2023/10/garden_bed_watering.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Instantaneous Mail Notifications</title><link href="https://www.kyleniewiada.org/blog/2022/10/mailbox-alerts/" rel="alternate" type="text/html" title="Instantaneous Mail Notifications" /><published>2022-10-08T08:05:00-04:00</published><updated>2022-10-08T08:05:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2022/10/mailbox-alerts</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2022/10/mailbox-alerts/"><![CDATA[<p>We have an unpredictable mail schedule and I‚Äôm an impatient child. I‚Äôm convinced that when the post office knows they‚Äôre delivering a box of parts, they shuffle our route for a late-night delivery. Rather than hawking around the mailbox or listening for the phantom muffler of a <a href="https://en.wikipedia.org/wiki/Ford-Utilimaster_FFV">Ford-Utilimaster FFV</a>, I want unequivocal evidence when our mailbox had been opened for delivery.</p>

<blockquote>
  <p>Alt: How I cured my Pavlovian response to hearing a Ford-Utilimaster FFV come down the road</p>
</blockquote>

<p>My solution was to use an outdoor rated Z-Wave contact sensor to detect when the mailbox was opened and then notify my family over Home Assistant. Here‚Äôs how I got there.</p>

<h2 id="detecting-mail">Detecting Mail</h2>

<h3 id="option-1-">Option 1 üëé</h3>

<p>Before anyone asks, the yellow indicator flag on some mailboxes <em>can</em> let a user know that the mail has arrived. It‚Äôs a small yellow flag that raises when the mailbox door is opened, but remains upright when the mailbox door is closed. This simple mechanism can indicate that the mailbox has been opened.</p>

<p>But using an indicator flag is more like polling the status of mail delivery. I‚Äôd rather be <em>told</em> when mail arrives instead of checking in on it.</p>

<h3 id="option-2-">Option 2 üëé</h3>

<p>One residential option for mailbox notifications is something called a <code class="language-plaintext highlighter-rouge">Mail Chime</code>. They are usually gyroscopic (or contact) sensors that send RF signals to a chime unit back inside the house. When triggered, the indoor station sets off a ring. This is similar to a wireless doorbell.</p>

<p>These are <em>okay</em>. But I found two big deficiencies with this option.</p>

<ol>
  <li>There‚Äôs usually no battery indicator on the sensor (so I don‚Äôt know when it stops working)</li>
  <li>If I want to make it smarter, I need to hack something into the chime box or retransmit signals.</li>
</ol>

<h3 id="option-3-">Option 3 ü§∑</h3>

<p>The next option for consideration is a product made by Ring for this exact purpose. It‚Äôs called the <code class="language-plaintext highlighter-rouge">Ring Mailbox Sensor</code>. It‚Äôs a motion sensor connected to an external antenna that mounts outside of the mailbox. The devices connects to the Ring bridge.</p>

<p>However, it feels a little user-hostile since it uses a proprietary protocol with their special bridge. Even though it‚Äôs purpose built for my situation, the vendor lock-in pushed me to look for other solutions.</p>

<h3 id="option-4-">Option 4 üëç</h3>

<p>The last solution I looked into was adding a contact sensor to the mailbox door to detect when it opens. Luckily I have a plastic mailbox so I didn‚Äôt need to worry about a metal box impeding the signal.</p>

<p>I ended up going with the <code class="language-plaintext highlighter-rouge">Ring Alarm Outdoor Contact Sensor</code>. It seems to have a handful of great features.</p>

<ul>
  <li>‚úÖ IP66 weather resistant (Protected against dust and strong jets of water)</li>
  <li>‚úÖ Supports Z-Wave Long Range (Using a compatible controller, the signal can reach up to 1 mile with direct line-of-sight)</li>
  <li>‚úÖ 5 year battery life</li>
  <li>‚úÖ Standard batteries (2x AA)</li>
  <li>‚úÖ Heartbeat signals to ensure it‚Äôs still alive and connected</li>
  <li>‚úÖ Battery updates</li>
  <li>‚úÖ Works with Z-Wave JS</li>
</ul>

<p>That‚Äôs a pretty impressive list. If I had a proper Z-Wave Long Range controller, I could leverage the full long-range capabilities. But I don‚Äôt have a controller with the newer standard, so I‚Äôm getting by with my Aeotec range extenders <em>for now</em>.</p>

<blockquote>
  <p>Avoid using this contact sensor with a metal mailbox since a metal mailbox will act as a faraday cage and inhibit the signal.</p>
</blockquote>

<h2 id="how-do-i-implement-this">How Do I Implement This?</h2>

<p>At the time of writing, I‚Äôm using</p>

<ul>
  <li><a href="https://www.home-assistant.io/">Home Assistant</a> (2022.9.6) as the brains to this operation</li>
  <li><a href="https://github.com/zwave-js">Z-Wave JS</a> (10.2.0) to manage my Z-Wave network</li>
  <li><a href="https://store.aeotec.com/products/range-extender-7-zw189">Aeotec Range Extender 7</a> to extend my Z-Wave network out to the mailbox</li>
</ul>

<p>First, I install the <code class="language-plaintext highlighter-rouge">Ring Alarm Outdoor Contact Sensor</code> to our mailbox lid with some stainless steel hardware.</p>

<p><img src="/assets/img/2022/10/mailbox_banner.jpg" alt="Ring Alarm Outdoor Contact Sensor installed in a mailbox for mail notifications" /><em>Contact sensor installed in mailbox</em></p>

<p>Next I include the contact sensor into the Z-Wave network inside Z-Wave JS.</p>

<p>Since my Home Assistant already integrates with my Z-Wave network, any new devices in Z-Wave JS will automatically populate new entities in Home Assistant.</p>

<p>After the contact sensor entity is created in Home Assistant, I wait for the contact sensor to update its values upon state changes. When the contact sensor sends the update that it was opened, my Home Assistant automations will trigger and notifications are sent out.</p>

<h2 id="automations">Automations</h2>

<p>Here are the automations I wrote to help notify and track states of when I <em>think</em> mail has arrived, or when it was picked up.</p>

<blockquote>
  <p>The notification setup works best if you‚Äôre not frequently sending outgoing mail. But if you are, I added a small action further down to help mitigate that behavior.</p>
</blockquote>

<p>The first thing we need to set up is an <code class="language-plaintext highlighter-rouge">input_boolean</code> helper that we‚Äôll toggle <code class="language-plaintext highlighter-rouge">on</code> or <code class="language-plaintext highlighter-rouge">off</code> depending on if we think mail has arrived.</p>

<p><img src="/assets/img/2022/10/mail_present_input.jpg" alt="Mail Present input boolean" /><em>Mail Present input boolean</em></p>

<p>In my examples, I call it <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code>.</p>

<p>As a bonus, we can show this <code class="language-plaintext highlighter-rouge">input_boolean</code> on the dashboard for a quick glance.</p>

<p><img src="/assets/img/2022/10/mail_present_dashboard.jpg" alt="Mail Present in the dashboard" /><em>Mail Present in the dashboard</em></p>

<h3 id="mail-arrived">Mail Arrived</h3>

<p><img src="/assets/img/2022/10/notification.png" alt="Mail Arrived notification" /><em>Mail Arrived notification</em></p>

<p>When the contact sensor‚Äôs intrusion sensor flips to <code class="language-plaintext highlighter-rouge">on</code>, it indicates that the mailbox is ‚Äúopen‚Äù. When the contact sensor‚Äôs intrusion sensor flips to <code class="language-plaintext highlighter-rouge">off</code>, it indicates that the mailbox has been ‚Äúclosed‚Äù.</p>

<p>Here‚Äôs our happy path. When we open the mailbox for the first time, we turn on the <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code> to show that the mail is (probably) present in the mailbox. If we open the mailbox again later, we turn the <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code> off. This indicates that mail has been retrieved.</p>

<p>But not everything in the world follows the happy path.</p>

<p>I‚Äôve added a conditional that the mailbox intrusion sensor must be <code class="language-plaintext highlighter-rouge">off</code> (closed) for at least 15s before we consider ‚Äòopening the mailbox‚Äô a new event. This helps in situations where the mail carrier closes the mailbox, realizes they have more mail, and then opens it back up again. If we don‚Äôt account for this, we would otherwise incorrectly mark the mail as ‚Äúretrieved‚Äù.</p>

<p>If every condition is met, our automation fires off a notification to the family that mail has (probably) arrived.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Alert - Mail arrived</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">Automation to control actions when mailbox is opened</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.mailbox_home_security_intrusion</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
<span class="na">condition</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
    <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">15</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_on</span>
    <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">target</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s">üì¨ You've got mail!</span>
      <span class="na">message</span><span class="pi">:</span> <span class="s">The mailbox has been opened. Maybe you have mail?</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:mailbox-open-up</span>
        <span class="na">group</span><span class="pi">:</span> <span class="s">mail-alert</span>
        <span class="na">channel</span><span class="pi">:</span> <span class="s">mail-alert</span>
        <span class="na">push</span><span class="pi">:</span>
          <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
        <span class="na">actions</span><span class="pi">:</span> <span class="c1"># More on this action later!</span>
          <span class="pi">-</span> <span class="na">action</span><span class="pi">:</span> <span class="s">TURN_OFF_MAIL_PRESENT</span>
            <span class="na">title</span><span class="pi">:</span> <span class="s">That was me</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div></div>

<h3 id="mail-retrieved">Mail Retrieved</h3>

<p>Next, we consider mail retrieved if:</p>

<ul>
  <li><strong>Scenario 1</strong>: The contact sensor changes from <code class="language-plaintext highlighter-rouge">off</code> (mailbox <em><strong>closed</strong></em>) to <code class="language-plaintext highlighter-rouge">on</code> (mailbox <em><strong>open</strong></em>), but only after being closed for <code class="language-plaintext highlighter-rouge">15s</code>. This indicates that the mailbox was likely opened a second time to retrieve mail.</li>
  <li><strong>Scenario 2</strong>: The contact sensor changes from <code class="language-plaintext highlighter-rouge">on</code> (mailbox <em><strong>open</strong></em>) to <code class="language-plaintext highlighter-rouge">off</code> (mailbox <em><strong>closed</strong></em>), but only after being left open for <code class="language-plaintext highlighter-rouge">60s</code>. This usually indicates that there was a package sticking out of the mailbox so the door was never closed.</li>
</ul>

<p>The automation turns off the <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code> so we can show on our dashboard that the mail has been (likely) picked up.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Alert - Mail retrieved</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">Automation to control actions when mailbox is opened (for the second time)</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.mailbox_home_security_intrusion</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
    <span class="na">for</span><span class="pi">:</span>
      <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
      <span class="na">seconds</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">mail-retrieved-1</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
    <span class="na">entity_id</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">binary_sensor.mailbox_home_security_intrusion</span>
    <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">mail-retrieved-2</span>
    <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
<span class="na">condition</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">choose</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span> <span class="s">mail-retrieved-1</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
            <span class="na">for</span><span class="pi">:</span>
              <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">seconds</span><span class="pi">:</span> <span class="m">15</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>  
      <span class="pi">-</span> <span class="na">conditions</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">trigger</span>
            <span class="na">id</span><span class="pi">:</span> <span class="s">mail-retrieved-2</span>
          <span class="pi">-</span> <span class="na">condition</span><span class="pi">:</span> <span class="s">state</span>
            <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
            <span class="na">state</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>
            <span class="na">for</span><span class="pi">:</span>
              <span class="na">hours</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">minutes</span><span class="pi">:</span> <span class="m">0</span>
              <span class="na">seconds</span><span class="pi">:</span> <span class="m">60</span>
        <span class="na">sequence</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
            <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
            <span class="na">target</span><span class="pi">:</span>
              <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
    <span class="na">default</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div></div>

<h3 id="outgoing-mail-action">Outgoing Mail Action</h3>

<p><img src="/assets/img/2022/10/notification_action.png" alt="Mail Arrived notification with action" /><em>Mail Arrived notification with an action</em></p>

<p>This is a quick helper action if a user is putting mail in the mailbox at the start of the day.</p>

<p>Whenever mail ‚Äúarrives‚Äù, our earlier automation sends a notification to the family with additional actions. One of those actions has a button that says ‚ÄúIt was me‚Äù.</p>

<p>If a user presses that button, the notification will send <code class="language-plaintext highlighter-rouge">TURN_OFF_MAIL_PRESENT</code> in an event back to Home Assistant which will get picked up by the following automation. This automation will then turn <em>off</em> the <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code> which will then allow a notification to occur again the next time the mailbox is opened.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">alias</span><span class="pi">:</span> <span class="s">Action - Outgoing mail ID</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">Button to turn off "mail present" when opening the mailbox for outgoing mail</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">event</span>
    <span class="na">event_type</span><span class="pi">:</span> <span class="s">mobile_app_notification_action</span>
    <span class="na">event_data</span><span class="pi">:</span>
      <span class="na">action</span><span class="pi">:</span> <span class="s">TURN_OFF_MAIL_PRESENT</span>
<span class="na">condition</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
    <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">target</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
</code></pre></div></div>

<h3 id="daily-reset">Daily Reset</h3>

<p>At the start of each day, reset the <code class="language-plaintext highlighter-rouge">input_boolean.mail_present</code> state to fix any possible edge cases that were missed.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">description</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
<span class="na">trigger</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">time</span>
    <span class="na">at</span><span class="pi">:</span> <span class="s2">"</span><span class="s">06:00:00"</span>
<span class="na">condition</span><span class="pi">:</span> <span class="pi">[]</span>
<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">input_boolean.turn_off</span>
    <span class="na">data</span><span class="pi">:</span> <span class="pi">{}</span>
    <span class="na">target</span><span class="pi">:</span>
      <span class="na">entity_id</span><span class="pi">:</span> <span class="s">input_boolean.mail_present</span>
</code></pre></div></div>

<h2 id="conclusion">Conclusion</h2>

<p>I‚Äôve been using my mailbox alert setup for the last 3 months. It hasn‚Äôt missed a delivery yet. The alerts have been super convenient since we don‚Äôt get mail regularly, and sometimes we‚Äôll have a late (or second) delivery at 7PM. The sound of something similar to a Ford-Utilimaster FFV chugging down the road no longer brings me to the front window to check. I am at peace.</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="medium project" /><summary type="html"><![CDATA[Dealing with my impatient inner child by getting notified the moment we receive our mail through Home Assistant]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2022/10/mailbox_banner.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2022/10/mailbox_banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Surfacing Scenes to All Google Home Household Members</title><link href="https://www.kyleniewiada.org/blog/2022/10/google-home-scene-surfacing/" rel="alternate" type="text/html" title="Surfacing Scenes to All Google Home Household Members" /><published>2022-10-01T17:49:00-04:00</published><updated>2022-10-01T17:49:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2022/10/google-home-scene-surfacing</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2022/10/google-home-scene-surfacing/"><![CDATA[<p>Google Home <a href="https://support.google.com/googlenest/answer/9155535">supports the concept activating scenes</a> to simplify common room configurations. This trait allows users to group devices under the same service and update them simultaneously. It‚Äôs very similar to the <code class="language-plaintext highlighter-rouge">routines</code> control inside Google Home, but instead, the scene handling is done by the respective linked service.</p>

<p>For example, a user could activate a scene to lower each curtain in a room when taking a nap. Or a scene could arrange holiday lights to specific colors configured in the Philips Hue app.</p>

<p>Instead of sending 15 requests to adjust every light bulb with a linked service, we can instead send a single scene request. If you‚Äôve ever had reliability issues with Google Home adjusting too many devices at once, this could help.</p>

<h2 id="the-flaw">The Flaw</h2>

<p>Google Home has this concept called <a href="https://support.google.com/googlenest/answer/9155535">Household</a>. It allows a user to invite other members in their house into the same Google Home instance. Anyone in the household can control the smart devices and even link their own services to the Google Home.</p>

<p>Scenes are a bit trickier though. Google seems to be doing a very poor job of surfacing them to the user.</p>

<p>Scenes are difficult to locate in the Google Home app. The only reliable place I could find scenes are when I am editing a routine‚Ä¶ under home controls‚Ä¶ under the scene adjustment option. So <em>really straight forward</em>, yea? Or if I know the ‚Äú‚ú®magic phrase‚ú®‚Äù, I can say something like ‚ÄúHey Google, activate the monthly driveway lights‚Äù. The scene support is tragic.</p>

<h2 id="i-still-want-scenes">I Still Want Scenes</h2>

<p>Ok, but I <em>still</em> want to use scenes.</p>

<p><img src="/assets/img/2022/10/google_home_scenes_banner.jpg" alt="Google Home scene menu" /><em>The closest we have to locating scenes in Google Home</em></p>

<p>Here I can see the scenes in Google Home that I added through Home Assistant. I spot 7 scenes available to me.</p>

<p>That‚Äôs great! Let me use my magic phrase that I mentioned earlier.</p>

<p>If I say ‚ÄúHey Google, activate the monthly driveway lights‚Äù, the lights adjust and everything looks great.</p>

<p>But if my wife says ‚ÄúHey Google, activate the monthly driveway lights‚Äù, the Google Home apologizes as it can‚Äôt find that device.</p>

<h2 id="what-gives">What Gives?</h2>

<p>Remember how scenes are notoriously difficult to trigger without the magic phrases? Scenes also have magically awful support.</p>

<p>If a <code class="language-plaintext highlighter-rouge">scene</code> is added to the Google Home, and the <code class="language-plaintext highlighter-rouge">scene</code> is not assigned to a room, then <em>only</em> the user who linked that service to Google Home can activate it. Like‚Ä¶ what?</p>

<p>Here is what my wife sees on her phone under scene control. Notice how she‚Äôs missing a few scenes that are available to me? Isn‚Äôt that just peachy?</p>

<p><img src="/assets/img/2022/10/scenes_3_missing.jpg" alt="Google Home scenes missing" /><em>Where did the other scenes go?</em></p>

<p>However, if the service provider assigns a room to the <code class="language-plaintext highlighter-rouge">scene</code>, that entity will get ‚Äúproperly linked‚Äù to the Google Home. Then <em>everyone</em> in the household can activate the <code class="language-plaintext highlighter-rouge">scene</code>.</p>

<p>I haven‚Äôt been able to figure out how to assign a <code class="language-plaintext highlighter-rouge">scene</code> to a rooms <em>inside</em> the Google Home app. The Google Home app doesn‚Äôt appear to have an area to view/rename/modify scenes. To assign a <code class="language-plaintext highlighter-rouge">scene</code> to a room, it appears that it <em>must</em> be set from the service which is providing it to the Google Home. <em>How intuitive</em>.</p>

<blockquote>
  <p>tl;dr Assign rooms/areas to your scenes so other household members can use them.</p>
</blockquote>

<h2 id="how-to-assign-areas-in-home-assistant">How To Assign Areas in Home Assistant</h2>

<blockquote>
  <p>Did you know <code class="language-plaintext highlighter-rouge">scripts</code> in Home Assistant are added to the Google Home in <a href="https://github.com/home-assistant/core/blob/dd7a06b9dca8a04152f6c4ef4828c8e214260393/homeassistant/components/google_assistant/trait.py#L522-L530">the same way <code class="language-plaintext highlighter-rouge">scenes</code> are</a>?</p>
</blockquote>

<p>How do we fix this? Let‚Äôs jump back into Home Assistant to take a look at our scripts or scenes.</p>

<p><img src="/assets/img/2022/10/home_assistant_scene_settings.jpg" alt="Assigning a script to an area in Home Assistant" /><em>Assigning a script to an area in Home Assistant</em></p>

<p>Here I‚Äôve selected a script that we‚Äôre syncing with Google Home. It hasn‚Äôt been assigned to an area yet. That means it won‚Äôt belong to a room in Google Home.</p>

<p>If I update this script and assign it to an area, the next time we sync with the Google Home, Home Assistant will be able to provide a <em>hint</em> at which respective room it should be assigned to.</p>

<p>If the room hint from Home Assistant was successful, then Google Home will have assigned the <code class="language-plaintext highlighter-rouge">scene</code> to a room. Now the <code class="language-plaintext highlighter-rouge">scene</code> should be available to all users in the Google Home household.</p>

<blockquote>
  <p>I <a href="https://github.com/home-assistant/home-assistant.io/pull/24310">submitted a pull request</a> to update the Home Assistant documentation and mention this scene/script limitation so others don‚Äôt sink the same time that I did.</p>
</blockquote>

<h2 id="why-does-this-happen">Why Does This Happen?</h2>

<p>In order for devices to be used by Google Home, they need to be set up <em>completely</em>. Linking devices to your account in Google Home is not enough. Devices and scenes need to be assigned to a room in order to become part of the household.</p>

<p>Here is an example of an entity that I added from Home Assistant which was never assigned to an area. When Google Home sees this entity, it doesn‚Äôt know where to place it. Without a placement, the rest of my Google Home household cannot see that entity.</p>

<p><img src="/assets/img/2022/10/google_home_not_linked.jpg" alt="An entity has not assigned a room or added to the household in Google Home" /><em>This entity has not assigned a room or added to the household in Google Home</em></p>

<p>I believe the exact same thing is happening to the <code class="language-plaintext highlighter-rouge">scene</code> and <code class="language-plaintext highlighter-rouge">script</code> entities. Except in our case, scenes do not have a standard view in the Google Home app so we‚Äôre unable to move them into a room from inside the app.</p>

<blockquote>
  <p>One <em>might</em> be able to trigger a view to move existing scenes if they completely unlink and then relink their service to the Google Home. The opportunity may be present upon ‚Äúfirst setup‚Äù. But that‚Äôs not a very friendly solution.</p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>

<p>I‚Äôm not the first user who is bewildered with their Google Home when it accepts my command, but then rejects the same command from my wife. Why would a family trust the reliability of their smart home if every other command failed?</p>

<p>It would be great if Google added a UI to manage scenes, or increased their visibility in the Google Home app. At the very least, Google Home should be able to recognize when a scene is only available for the linking user and raise that error.</p>

<p>I hope Google cares about their Google Home product and continues to make improvements. If they don‚Äôt grow this feature, I fear that scene support is destined to be <a href="https://killedbygoogle.com/">killed by Google</a>.</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="guide" /><summary type="html"><![CDATA[Members of a household who try to invoke Home Assistant scenes in Google Home cannot always access them. Here's how to fix it.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2022/10/google_home_scenes_banner.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2022/10/google_home_scenes_banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Transforming an Old Doorbell with Smart Alerts</title><link href="https://www.kyleniewiada.org/blog/2022/07/doorbell-alerts/" rel="alternate" type="text/html" title="Transforming an Old Doorbell with Smart Alerts" /><published>2022-07-03T13:18:00-04:00</published><updated>2022-07-03T13:18:00-04:00</updated><id>https://www.kyleniewiada.org/blog/2022/07/doorbell-alerts</id><content type="html" xml:base="https://www.kyleniewiada.org/blog/2022/07/doorbell-alerts/"><![CDATA[<p>For the last year I‚Äôve been retrofitting tech into our home. 
Our house is the epitome of luxury featuring a ragged carpeted wall to promote sound deadening. Due to this ingenious addition, it‚Äôs difficult to hear things like the doorbell while we‚Äôre watching TV or in a meeting.</p>

<p>How do we solve this? <del>Take out the carpeted wall and make the doorbell louder</del>. <strong>NO</strong>. We make the doorbell <em>smart</em> üß† and take pride it doing it ourselves!</p>

<blockquote>
  <p>This is going to be <em>super casual</em>.</p>

  <p>It will be a pretty high level overview at getting Shelly 1 relays to intercept my doorbell signals. I will skip over things like how to flash ESPHome onto the Shelly relay.</p>

  <p>It‚Äôs really to allow users near this ecosystem to steal from my project. Just like how <a href="https://frenck.dev/diy-smart-doorbell-for-just-2-dollar/">I stole some ideas from Frenck</a>.</p>
</blockquote>

<h2 id="goals">Goals</h2>

<ul>
  <li>Get alerts on our devices when the doorbell rings</li>
  <li>Ability to discern our different doorbells</li>
  <li>Avoid subscription costs</li>
  <li>Ability to silence the doorbell chime</li>
  <li>Create a repeating doorbell alarm for <del>no good reason</del> <em>fun</em></li>
</ul>

<h2 id="requirements">Requirements</h2>

<h3 id="hardware-requirements">Hardware Requirements</h3>

<p>Here‚Äôs an approximation for the hardware costs involved with the project.</p>

<ul>
  <li>$35: 2x Shelly 1 (one for each doorbell)</li>
  <li>$15: Low voltage power supply (couldn‚Äôt run it off of transformer in my case, but others might be able to)</li>
  <li>$10: Low voltage wire to power Shelly 1</li>
  <li>$15: (Optional) Fancy junction box so wires don‚Äôt hang everywhere</li>
</ul>

<blockquote>
  <p>I used a waterproof junction box because the doorbell wiring was too close to the main water line for my comfort. It helps me sleep better.</p>
</blockquote>

<p><img src="/assets/img/2022/07/doorbell_wiring.jpg" alt="Two Shelly 1 inside of a conduit box wired up to each doorbell" /><em>Wiring a Shelly 1 for each doorbell</em></p>

<h3 id="software-requirements">Software Requirements</h3>

<p>This guide is going to assume the user is familiar with Home Assistant and ESPHome. If they are not, check them out! Those are <em>great</em> projects.</p>

<ul>
  <li><a href="https://www.home-assistant.io/">Home Assistant</a> (I‚Äôm running the <code class="language-plaintext highlighter-rouge">2022.6</code> release at the time of writing)</li>
  <li><a href="https://esphome.io/">ESPHome</a> flashed onto a Shelly 1</li>
</ul>

<h2 id="setup">Setup</h2>

<h3 id="two-shelly-relays">Two Shelly Relays?</h3>

<p>If you‚Äôve read the hardware requirements above, you might be asking yourself ‚ÄúWhy are there two Shelly 1 relays? Surely you don‚Äôt need that.‚Äù</p>

<p>You‚Äôd be right! However, did you know some homes have <em>two</em> doorbells? I guess the thought is that you put the second doorbell by your back door in case a neighbor is stopping by.</p>

<p>When this happens, a chime box can be wired to give each doorbell a different chime (<code class="language-plaintext highlighter-rouge">Ding</code> vs <code class="language-plaintext highlighter-rouge">Ding Dong</code>) allowing the homeowner to know which door their visitor is at. <em>Neat!</em></p>

<p>Except our second doorbell is <em>also</em> in the front of our house.. just 15 steps from the first doorbell. We‚Äôve had people ring our second doorbell before, so we‚Äôre just going to proceed supporting it because I think it‚Äôs bougie. üòé</p>

<h3 id="shelly-1-configuration">Shelly 1 Configuration</h3>

<p>Mentioned earlier, we‚Äôre going to use ESPHome to configure our Shelly 1 relays.</p>

<p>There are 5 inputs on the Shelly 1 relay.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Line</code> &amp; <code class="language-plaintext highlighter-rouge">Neutral</code> for power</li>
  <li><code class="language-plaintext highlighter-rouge">Input</code> &amp; <code class="language-plaintext highlighter-rouge">Output</code> for the signal we‚Äôre controlling</li>
  <li><code class="language-plaintext highlighter-rouge">Switch</code> to communicate changes to the Shelly 1</li>
</ul>

<p>The Shelly 1 relay will be powered from our low voltage wires (or really, whatever you can find for the <code class="language-plaintext highlighter-rouge">line</code> and <code class="language-plaintext highlighter-rouge">neutral</code>).</p>

<p>We‚Äôll connect the Shelly 1 <code class="language-plaintext highlighter-rouge">input</code> connector to the doorbell transformer power. That power (when switched on) will travel through the Shelly 1 <code class="language-plaintext highlighter-rouge">output</code> connector, triggering the chime box.</p>

<p>Finally, the doorbell button signal will be captured by the Shelly 1 <code class="language-plaintext highlighter-rouge">switch</code> input.</p>

<p>Capturing the doorbell signal with the <code class="language-plaintext highlighter-rouge">switch</code> input accomplishes two things.</p>

<ol>
  <li>We now <em>know</em> via software that the doorbell was pressed since we triggered it via the Shelly <code class="language-plaintext highlighter-rouge">switch</code> input.</li>
  <li>Because we‚Äôre choosing to pass the signal onto our doorbell chime, we can also choose <em>not</em> to pass the signal along üîá.</li>
</ol>

<p>I‚Äôve added functionality to mute the doorbell chime via an exposed input. It‚Äôs useful to pair with bedtime routines to keep the house quiet.</p>

<blockquote>
  <p>üèÖ Achievement unlocked: Muting a doorbell</p>
</blockquote>

<p><img src="/assets/img/2022/07/doorbell_device.png" alt="Home Assistant dashboard showing contents of the front door doorbell" /><em>Home Assistant dashboard of Front Door Doorbell</em></p>

<p>But we can take that a step further. Since we‚Äôre in control of <em>when</em> our doorbell chimes, why not have some fun with that power? In the ESPHome config below, I‚Äôve included a little <code class="language-plaintext highlighter-rouge">script</code> that will repeatedly trigger the doorbell chime for 30s when toggled on. <em>DING-DONG.. Ding-Dong.. ding-dong..</em> After 30s, the script <em>should</em> stop toggling the relay.</p>

<p><em>Why have I done this?</em> I‚Äôm not really sure. It just seemed like a fun idea. Maybe you enjoy making dogs bark, annoying your significant other, or pretending to have a high-tech burglar alarm to annoy them away.</p>

<p>It‚Äôs probably a bad idea. But don‚Äôt let that stop you! Just be careful of burning out your relay or doorbell chime. I‚Äôm <em>at least</em> 20% sure it‚Äôs not meant to operate like that (hence the 30s cap).</p>

<blockquote>
  <p>üèÖ Achievement unlocked: Annoying as bell</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#</span>
<span class="c1"># Basic Config</span>
<span class="c1"># shelly-one-01</span>
<span class="c1"># Front Door Doorbell</span>
<span class="c1"># Updated for 2025.5.0</span>

<span class="na">substitutions</span><span class="pi">:</span>
  <span class="na">board_id</span><span class="pi">:</span> <span class="s">shelly-one-01</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">front-door-doorbell</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">Front Door Doorbell</span>

<span class="na">wifi</span><span class="pi">:</span>
  <span class="na">ssid</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_ssid</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">wifi_password</span>

  <span class="c1"># Enable fallback hotspot (captive portal) in case wifi connection fails</span>
  <span class="na">ap</span><span class="pi">:</span>
    <span class="na">ssid</span><span class="pi">:</span> <span class="s2">"</span><span class="s">${board_id}</span><span class="nv"> </span><span class="s">Hotspot"</span>
    <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ap_hotspot_password</span>

<span class="c1"># Enable captive portal if wifi ever changes</span>
<span class="na">captive_portal</span><span class="pi">:</span>

<span class="c1"># Enable Home Assistant API</span>
<span class="na">api</span><span class="pi">:</span>
  <span class="na">encryption</span><span class="pi">:</span>
    <span class="na">key</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">encryption_pre_shared_key</span>

<span class="na">ota</span><span class="pi">:</span>
  <span class="na">platform</span><span class="pi">:</span> <span class="s">esphome</span>
  <span class="na">password</span><span class="pi">:</span> <span class="kt">!secret</span> <span class="s">ota_password</span>

<span class="na">esphome</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">${name}</span>
  <span class="na">comment</span><span class="pi">:</span> <span class="s">${board_id}</span>
  <span class="na">friendly_name</span><span class="pi">:</span> <span class="s">${friendly_name}</span>

<span class="na">esp8266</span><span class="pi">:</span>
  <span class="na">board</span><span class="pi">:</span> <span class="s">esp01_1m</span>

<span class="c1"># Global to store the on/off state of the chime</span>
<span class="na">globals</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">id</span><span class="pi">:</span> <span class="s">chime_var</span>
    <span class="na">type</span><span class="pi">:</span> <span class="s">bool</span>
    <span class="na">restore_value</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">initial_value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">true'</span>
  <span class="pi">-</span> <span class="na">id</span><span class="pi">:</span> <span class="s">chime_alarm_var</span>
    <span class="na">type</span><span class="pi">:</span> <span class="s">bool</span>
    <span class="na">restore_value</span><span class="pi">:</span> <span class="kc">false</span>
    <span class="na">initial_value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">false'</span>  

<span class="c1"># Enable logging</span>
<span class="na">logger</span><span class="pi">:</span>

<span class="na">time</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">homeassistant</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">my_time</span>

<span class="c1"># Sensors that the ESPhome unit is capable of reporting</span>
<span class="na">sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">wifi_signal</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">WiFi</span><span class="nv"> </span><span class="s">Signal"</span>
    <span class="na">update_interval</span><span class="pi">:</span> <span class="s">300s</span>

<span class="na">binary_sensor</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">gpio</span>
    <span class="na">pin</span><span class="pi">:</span>
      <span class="na">number</span><span class="pi">:</span> <span class="s">GPIO5</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">None</span>
    <span class="na">filters</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">delayed_on</span><span class="pi">:</span> <span class="s">100ms</span>
      <span class="pi">-</span> <span class="na">delayed_off</span><span class="pi">:</span> <span class="s">25ms</span>
    <span class="na">on_press</span><span class="pi">:</span>
      <span class="c1"># Only turn on the chime when it is active.</span>
      <span class="na">then</span><span class="pi">:</span>
        <span class="na">if</span><span class="pi">:</span>
          <span class="na">condition</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">switch.is_on</span><span class="pi">:</span> <span class="s">chime_is_enabled</span>
          <span class="na">then</span><span class="pi">:</span>
            <span class="pi">-</span> <span class="na">switch.turn_on</span><span class="pi">:</span> <span class="s">relay</span>
    <span class="na">on_release</span><span class="pi">:</span>
      <span class="c1"># On release, turn of the chime.</span>
      <span class="pi">-</span> <span class="na">switch.turn_off</span><span class="pi">:</span> <span class="s">relay</span>

<span class="na">switch</span><span class="pi">:</span>
  <span class="c1"># Switch to enable/disable chime when</span>
  <span class="c1"># doorbell button is pushed.</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">chime_is_enabled</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Chime</span>
    <span class="na">icon</span><span class="pi">:</span> <span class="s">mdi:power-settings</span>
    <span class="na">restore_mode</span><span class="pi">:</span> <span class="s">DISABLED</span>
    <span class="na">turn_on_action</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">globals.set</span><span class="pi">:</span>
          <span class="na">id</span><span class="pi">:</span> <span class="s">chime_var</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">true'</span>
    <span class="na">turn_off_action</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">globals.set</span><span class="pi">:</span>
          <span class="na">id</span><span class="pi">:</span> <span class="s">chime_var</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">false'</span>
    <span class="na">lambda</span><span class="pi">:</span> <span class="pi">|-</span>
      <span class="s">return id(chime_var);</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">template</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">chime_alarm</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Alarm</span>
    <span class="na">icon</span><span class="pi">:</span> <span class="s">mdi:alarm-bell</span>
    <span class="na">restore_mode</span><span class="pi">:</span> <span class="s">DISABLED</span>
    <span class="na">turn_on_action</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">globals.set</span><span class="pi">:</span>
          <span class="na">id</span><span class="pi">:</span> <span class="s">chime_alarm_var</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">true'</span>
      <span class="pi">-</span> <span class="na">script.execute</span><span class="pi">:</span> <span class="s">alarm_script</span>
      <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s">30s</span>
      <span class="pi">-</span> <span class="na">switch.turn_off</span><span class="pi">:</span> <span class="s">chime_alarm</span>
    <span class="na">turn_off_action</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">globals.set</span><span class="pi">:</span>
          <span class="na">id</span><span class="pi">:</span> <span class="s">chime_alarm_var</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s1">'</span><span class="s">false'</span>
    <span class="na">lambda</span><span class="pi">:</span> <span class="pi">|-</span>
      <span class="s">return id(chime_alarm_var);</span>
  <span class="pi">-</span> <span class="na">platform</span><span class="pi">:</span> <span class="s">gpio</span>
    <span class="na">id</span><span class="pi">:</span> <span class="s">relay</span>
    <span class="na">internal</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Doorbell Switch</span>
    <span class="na">pin</span><span class="pi">:</span> <span class="s">GPIO4</span>
    <span class="na">restore_mode</span><span class="pi">:</span> <span class="s">RESTORE_DEFAULT_OFF</span>
    
<span class="na">script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">id</span><span class="pi">:</span> <span class="s">alarm_script</span>
    <span class="na">then</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">while</span><span class="pi">:</span>
        <span class="na">condition</span><span class="pi">:</span>
          <span class="na">lambda</span><span class="pi">:</span> <span class="pi">|-</span>
            <span class="s">return id(chime_alarm_var);</span>
        <span class="na">then</span><span class="pi">:</span>    
        <span class="pi">-</span> <span class="na">switch.turn_on</span><span class="pi">:</span> <span class="s">relay</span>
        <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s">500ms</span>
        <span class="pi">-</span> <span class="na">switch.turn_off</span><span class="pi">:</span> <span class="s">relay</span>
        <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s">500ms</span>
<span class="c1">#</span>
</code></pre></div></div>

<h2 id="alerts-for-all">Alerts for All</h2>

<p>Great, we have a chime that we can add into Home Assistant. That‚Äôs not very useful yet. So let‚Äôs add notifications!</p>

<blockquote>
  <p>I also <em>happen</em> to have a camera by the doorbell, so I include a camera snapshot in my notifications.</p>
</blockquote>

<p>Using the companion Home Assistant app on our phone, we can <a href="https://companion.home-assistant.io/docs/notifications/notifications-basic/">push notifications to our device</a> using the <code class="language-plaintext highlighter-rouge">notify</code> service.</p>

<p><img src="/assets/img/2022/07/phone_notification.jpg" alt="Simulated phone doorbell notification" /><em>Simulated phone notification from a doorbell press</em></p>

<p>If we use an Android TV, we can also use the <a href="https://www.home-assistant.io/integrations/nfandroidtv/"><code class="language-plaintext highlighter-rouge">nfandroidtv</code></a> integration in order to display alerts on our TV.</p>

<p><img src="/assets/img/2022/07/tv_notification.jpg" alt="Simulated Android TV doorbell notification" /><em>Simulated Android TV notification from a doorbell press</em></p>

<p>Here‚Äôs a useful Home Assistant automation blueprint that I use to configure my doorbells and notify my various devices.</p>

<blockquote>
  <p>There‚Äôs probably a better way to send the images without saving them to the disk in different locations. But it‚Äôs malleable enough that I can tweak settings without too many breaking changes.</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#</span>
<span class="na">blueprint</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">Doorbell Alert Notifications</span>
  <span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
    <span class="s">This automation blueprint creates a camera snapshot if doorbell is detected </span>
    <span class="s">and sends a notification to your device with the picture.</span>
    
    <span class="s">Requirements:</span>
      <span class="s">- Add `- /tmp` to `allowlist_external_dirs:` in the `configuration.yaml`</span>
    
    <span class="s">Required entities:</span>
      <span class="s">- Doorbell sensor (binary_sensor in None class)</span>
      <span class="s">- Camera entity</span>
      <span class="s">- Notify device entity    </span>
 
  <span class="na">domain</span><span class="pi">:</span> <span class="s">automation</span>

  <span class="na">input</span><span class="pi">:</span>
    <span class="na">doorbell_sensor</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">Doorbell sensor</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">The sensor which triggers the snapshot creation (domain binary_sensor).</span>
      <span class="na">selector</span><span class="pi">:</span>
          <span class="na">entity</span><span class="pi">:</span>
            <span class="na">domain</span><span class="pi">:</span> <span class="s">binary_sensor</span>

    <span class="na">camera</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">Camera</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">The camera to create the snapshot (domain camera).</span>
      <span class="na">selector</span><span class="pi">:</span>
        <span class="na">entity</span><span class="pi">:</span>
          <span class="na">domain</span><span class="pi">:</span> <span class="s">camera</span>
          
    <span class="na">camera_delay</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">(Optional) Camera Delay</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Delay after doorbell before taking a snapshot from the camera. Useful when your camera stream has a bit of lag.</span>
      <span class="na">default</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">selector</span><span class="pi">:</span>
        <span class="na">number</span><span class="pi">:</span>
            <span class="na">min</span><span class="pi">:</span> <span class="m">0</span>
            <span class="na">max</span><span class="pi">:</span> <span class="m">15</span>
            <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">seconds</span>
            <span class="na">mode</span><span class="pi">:</span> <span class="s">slider</span>             

    <span class="na">snapshot_delay</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">(Optional) Snapshot Delay</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Delay before sending the notification after writing the camera snapshot to disk.</span>
      <span class="na">default</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">selector</span><span class="pi">:</span>
        <span class="na">number</span><span class="pi">:</span>
            <span class="na">min</span><span class="pi">:</span> <span class="m">0</span>
            <span class="na">max</span><span class="pi">:</span> <span class="m">15</span>
            <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">seconds</span>
            <span class="na">mode</span><span class="pi">:</span> <span class="s">slider</span>            
            
    <span class="na">rate_limit</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">(Optional) Rate Limit</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">How many seconds to wait before we can send another notification.</span>
      <span class="na">default</span><span class="pi">:</span> <span class="m">10</span>
      <span class="na">selector</span><span class="pi">:</span>
        <span class="na">number</span><span class="pi">:</span>
            <span class="na">min</span><span class="pi">:</span> <span class="m">0</span>
            <span class="na">max</span><span class="pi">:</span> <span class="m">60</span>
            <span class="na">unit_of_measurement</span><span class="pi">:</span> <span class="s">seconds</span>
            <span class="na">mode</span><span class="pi">:</span> <span class="s">slider</span>             

    <span class="na">notification_title</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">(Optional) Notification title</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Default:</span><span class="nv"> </span><span class="s">"üîî</span><span class="nv"> </span><span class="s">{{doorbell_sensor_name}}"'</span>
      <span class="na">default</span><span class="pi">:</span> <span class="s2">"</span><span class="s">üîî</span><span class="nv"> </span><span class="s">{{doorbell_sensor_name}}"</span>
      
    <span class="na">notification_message_standard</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">(Optional) Notification Standard message</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Default:</span><span class="nv"> </span><span class="s">"{{</span><span class="nv"> </span><span class="s">doorbell_sensor_name</span><span class="nv"> </span><span class="s">}}</span><span class="nv"> </span><span class="s">triggered."'</span>
      <span class="na">default</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">doorbell_sensor_name</span><span class="nv"> </span><span class="s">}}</span><span class="nv"> </span><span class="s">triggered."</span>      

<span class="na">trigger</span><span class="pi">:</span>
  <span class="na">platform</span><span class="pi">:</span> <span class="s">state</span>
  <span class="na">entity_id</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">doorbell_sensor</span>
  <span class="na">from</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span>
  <span class="na">to</span><span class="pi">:</span> <span class="s2">"</span><span class="s">on"</span>

<span class="na">variables</span><span class="pi">:</span>
  <span class="na">doorbell_sensor</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">doorbell_sensor</span>
  <span class="na">doorbell_sensor_name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">states[doorbell_sensor].name</span><span class="nv"> </span><span class="s">}}"</span>
  <span class="na">camera</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">camera</span>
  <span class="na">notification_title</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">notification_title</span>
  <span class="na">snapshot_delay</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">snapshot_delay</span>
  <span class="na">camera_delay</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">camera_delay</span>  
  <span class="na">rate_limit</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">rate_limit</span>
  <span class="na">snapshot_file_path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/config/www/tmp/snapshot_{{</span><span class="nv"> </span><span class="s">states[camera].object_id</span><span class="nv"> </span><span class="s">}}.jpg"</span>
  <span class="na">snapshot_image_path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/local/tmp/snapshot_{{</span><span class="nv"> </span><span class="s">states[camera].object_id</span><span class="nv"> </span><span class="s">}}.jpg"</span>
  <span class="na">notification_message_standard</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">notification_message_standard</span>

<span class="na">action</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">camera_delay</span><span class="nv"> </span><span class="s">}}"</span>   
  
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">camera.snapshot</span>
    <span class="na">entity_id</span><span class="pi">:</span> <span class="kt">!input</span> <span class="s">camera</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">filename</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">snapshot_file_path</span><span class="nv"> </span><span class="s">}}"</span>
      
  <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">snapshot_delay</span><span class="nv"> </span><span class="s">}}"</span>      

  <span class="c1"># Update this service group with whomever you'd like to notify</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.family</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">notification_title</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">message</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">notification_message_standard</span><span class="nv"> </span><span class="s">}}"</span>  
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">ttl</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">priority</span><span class="pi">:</span> <span class="s">high</span>      
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">notification_icon</span><span class="pi">:</span> <span class="s">mdi:bell</span>
        <span class="na">group</span><span class="pi">:</span> <span class="s">doorbell</span>
        <span class="na">channel</span><span class="pi">:</span> <span class="s">doorbell</span>
        <span class="na">push</span><span class="pi">:</span>
          <span class="na">interruption-level</span><span class="pi">:</span> <span class="s">time-sensitive</span>
        <span class="na">image</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">snapshot_image_path</span><span class="nv"> </span><span class="s">}}"</span>

  <span class="c1"># Update this service group with whomever you'd like to notify</span>
  <span class="pi">-</span> <span class="na">service</span><span class="pi">:</span> <span class="s">notify.screens</span>
    <span class="na">data</span><span class="pi">:</span>
      <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">notification_title</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">message</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">notification_message_standard</span><span class="nv"> </span><span class="s">}}"</span>
      <span class="na">data</span><span class="pi">:</span>
        <span class="na">duration</span><span class="pi">:</span> <span class="m">10</span>
        <span class="na">image</span><span class="pi">:</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">snapshot_file_path</span><span class="nv"> </span><span class="s">}}"</span> 

  <span class="pi">-</span> <span class="na">delay</span><span class="pi">:</span> <span class="s2">"</span><span class="s">{{</span><span class="nv"> </span><span class="s">rate_limit</span><span class="nv"> </span><span class="s">}}"</span>

<span class="na">mode</span><span class="pi">:</span> <span class="s">single</span>
<span class="na">max_exceeded</span><span class="pi">:</span> <span class="s">silent</span>     

<span class="c1">#</span>
</code></pre></div></div>

<h2 id="final-thoughts">Final Thoughts</h2>

<p>I don‚Äôt think I‚Äôm a luddite, but sometimes I really appreciate older things. Who knows, maybe I‚Äôll come around to buying a video doorbell once they are better looking.</p>

<p>It‚Äôs super useful to get alerts when I‚Äôm busy, away from home, or have the ability to mute alerts while the baby naps.</p>

<p>I had an existing doorbell, existing camera, and accessible wiring. With a little bit of fun, I was able to transform (pun intended) our doorbell setup into something I‚Äôd seen advertised by other smart doorbells. But doing it myself makes me happy.</p>]]></content><author><name>{&quot;image&quot;=&gt;&quot;/assets/img/kyle.jpg&quot;, &quot;twitter&quot;=&gt;&quot;CrypticCitrus&quot;}</name></author><category term="medium project" /><summary type="html"><![CDATA[Transforming our existing doorbells to send alerts through Home Assistant when someone rings.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyleniewiada.org/assets/img/2022/07/banner.jpg" /><media:content medium="image" url="https://www.kyleniewiada.org/assets/img/2022/07/banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>